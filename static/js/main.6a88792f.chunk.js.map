{"version":3,"sources":["Home mountains.png","services/auth.service.js","constants.js","components/logging/hello.page.component.js","common/validation-rules.js","components/logging/login.component.js","components/logging/register.component.js","services/auth-header.js","services/user.service.js","common/LoadingIndicator.js","components/userProfile/user.info.component.js","services/resort.service.js","components/userProfile/profile.component.js","components/searchResorts/filter-bar.js","components/searchResorts/resort-card.js","components/searchResorts/search-resorts.component.js","services/trip.service.js","components/tripView/trip-view.js","components/tripView/trip-form.js","services/rating.service.js","components/resortView/resort-view.js","components/resortView/resort-form.js","components/resortView/grade-resort.js","components/userProfile/password.change.component.js","components/userProfile/user.data.change.component.js","services/news.service.js","components/news/trip-card.js","components/news/report-card.js","components/news/news.component.js","components/acquaintances/acquaintances.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","name","surname","phoneNumber","description","skiing","snowboarding","parse","getItem","Colors","HelloPage","props","document","title","state","Grid","textAlign","Column","mobile","tablet","computer","Segment","padded","Container","style","fontWeight","paddingBottom","color","paddingLeft","width","margin","marginLeft","size","src","require","alt","padding","opacity","GridRow","columns","verticalAlign","centered","stretched","GridColumn","floated","Button","id","backgroundColor","marginBottom","height","onClick","history","push","paddingRight","basic","Component","validation","pattern","RegExp","length","validateStatus","errorMsg","test","request","input","number","FormItem","Form","Item","Login","handleLogin","bind","onChange","value","loading","event","validationFunction","target","inputValue","inputName","this","setState","e","preventDefault","AuthService","login","notification","success","message","window","location","reload","catch","error","onSubmit","autoComplete","tooltip","hasFeedback","help","placeholder","type","disabled","isFormInvalid","Register","handleRegister","toggleSkiing","toggleSnowboarding","successful","actualValue","register","rows","checked","authHeader","user","Authorization","USER_URL","get","headers","usernameAccept","usernameInput","tripId","passwordChangeRequest","userDataRequest","LoadingIndicator","Loader","active","inline","UserInfo","currentUser","uppercase","resortImage","handleSendEmail","toUpperCase","UserService","sendEmail","getCurrentUser","paddingTop","to","pathname","userData","Content","visible","marginTop","snowboarder","skier","activePage","filtering","sorting","latitude","longitude","responseType","resortGradeRequest","resortObject","put","Profile","achievements","acquaintances","acquaintanceNumber","trips","getAchievements","getAcquaintances","userDTO","countAcquaintances","getTrips","deleteAcquaintance","getUserFromUsername","getAchievementsFromUsername","getAcquaintancesFromUsername","getTripsFromUsername","resortService","getResortImage","userImage","Fragment","map","key","Row","handleDeleteAcquaintance","trip","resortName","achievement","achievementId","achievementName","achievementDescription","itemsOnPageOptions","text","sortingOptions","filteringOptions","FilterBar","handleChange","resort","hasOwnProperty","isLoading","listOfResorts","itemsOnPage","Header","as","Field","Dropdown","compact","selectOnNavigation","selection","itemsCountPerPage","options","onChangeItemsOnPage","Input","onChangeName","onChangeFiltering","onChangeSorting","fluid","animated","hidden","Icon","Group","widths","ResortCard","clouds","humidity","lastChange","liftCount","nightSkiing","region","resortId","runCount","sensedTemperature","snowThickness","temperature","terrainPark","windSpeed","distance","temp","resortDetails","toString","dotIndex","indexOf","temperatureRounded","substring","senTemp","sensedTemperatureRounded","disTemp","distanceRounded","withRouter","SearchResorts","handlePaginationChange","getAllResorts","handleChangeItemsOnPage","handleChangeFiltering","handleChangeSorting","handleChangeName","handleSubmit","totalPages","totalItemsCount","navigator","geolocation","getCurrentPosition","position","coords","console","log","itemsOnSite","getResorts","totalElements","updatedResults","content","results","Pagination","boundaryRange","onPageChange","siblingRange","List","divided","isAdmin","tripObject","tripIdObject","TripView","departureDate","departureTime","arrivalDate","participants","isTripActive","getResortFromTripId","getParticipants","getTripActivity","tripDate","daysNumber","tripDateArrival","Date","setDate","getDate","parseInt","monthArrival","arrivalFormated","tripService","userService","goBack","i","quitTrip","cancelTrip","joinTrip","currentUserParticipates","isActive","isEarlierThanNow","marginRight","fontStyle","TripForm","isEditionForm","duration","dateTime","chosenResortId","resorts","handleSubmitAdd","handleSubmitEdit","undefined","match","params","getClosestResorts","ResortService","resortInList","TripService","createTrip","updateTrip","Select","onChangeSelect","MenuItem","FormHelperText","startMode","initialDate","clearable","dateFormat","iconPosition","ResortView","resortRating","resortImageLink","ratings","avgRat1","avgRat2","avgRat3","avgRat4","avgRat5","lastChangeCustom","getRatings","getResortApi","ski_maps","media","original","url","getResortRating","rat1","rat2","rat3","rat4","rat5","counter1","counter2","counter3","counter4","counter5","sum1","sum2","sum3","sum4","sum5","resortArr","ratingCategoryId","grade","tempDetails","latTemp","longTemp","windTemp","humTemp","getResortImageApi","getResortRatings","ratingService","roles","includes","userHasAdminPrivileges","ratingCategoryName","rating","starRatedColor","numberOfStars","starSpacing","starDimension","Image","bordered","rounded","xmlns","about","rel","property","href","ResortForm","handleEditResort","toggleTerrainPark","toggleNightSkiing","editResort","GradeResort","submitGrade","category1","category2","category3","category4","category5","RatingService","starHoverColor","changeRating","PasswordChange","passwordConfirmation","oldPassword","validatePasswordConfirmation","validatePassword","handleGoBack","changePassword","confirmPassword","UserDataChange","handleDataChange","usernameObj","emailObj","nameObj","surnameObj","phoneNumberObj","descriptionObj","updateUserData","NEWS_URL","TripCard","ReportCard","userTripDescription","report","News","upcomingTrips","pastTrips","upcomingAcquaintancesTrips","acquaintancesTripsReports","tripReportMax","getUpcomingTrips","getPastTrips","maxTripReports","getUpcomingAcquaintancesTrips","getAcquaintancesTripsReports","NewsService","inverted","tertiary","Acquaintances","getAcquaintancesToAdd","acquaintancesToAdd","getAcquaintancesToAddFromUsername","addAcquaintance","onChangeUsername","handleAddAcquaintance","App","logOut","showAdminBoard","logout","basename","process","className","fontSize","path","component","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a88792f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Home mountains.e8112a2a.png\";","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://ski-with-me.herokuapp.com/api/auth/\";\r\n//const API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password, name, surname, phoneNumber, description, skiing, snowboarding) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      name,\r\n      surname,\r\n      phoneNumber,\r\n      description,\r\n      skiing,\r\n      snowboarding\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();"," export const Colors = {\r\n    background: '#FFFFFF',\r\n    primary: '#608FFF',\r\n    secondary: '#B3F3FD'\r\n}","import React, { Component } from \"react\";\r\nimport { Grid, GridRow, GridColumn, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { BsDot } from 'react-icons/bs';\r\n\r\nexport default class HelloPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"left\">\r\n        <Grid.Column mobile={16} tablet={16} computer={16}>\r\n          <Segment padded>\r\n              <Container>\r\n                <Grid.Column>\r\n                    <h1 title=\"Logowanie\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20, color: Colors.primary }}>Witaj na stronie SkiWithMe!</h1>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"left\" style={{paddingLeft: 20}}>\r\n                    <h4 style={{ width: \"90%\", margin: 0, marginLeft: 0 }}><BsDot size=\"30\"></BsDot>Znajdź najlepsze ośrodki narciarskie dostosowane do Twoich preferencji!</h4>\r\n                    <h4 style={{ width: \"90%\", margin: 0, marginLeft: 0 }}><BsDot size=\"30\"></BsDot>Twórz wyjazdy ze swoimi znajomymi!</h4>\r\n                    <h4 style={{ width: \"90%\", margin: 0, marginLeft: 0 }}><BsDot size=\"30\"></BsDot>Chwal się zdobytymi osiągnięciami!</h4>\r\n                    <h4 style={{ width: \"90%\", margin: 0, marginLeft: 0 }}><BsDot size=\"30\"></BsDot>Podziwiaj widoki jak na obrazku poniżej!</h4>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <img src={require('../../Home mountains.png')}\r\n                    alt=\"Obraz gór\" style={{ textAlign: \"center\", padding: 20, paddingBottom: 30, width: \"90%\", opacity: 0.9 }}/>\r\n                </Grid.Column>\r\n                <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 0, width: \"90%\", margin: 0}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                        <Button id=\"login\" style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background, fontWeight: \"bold\", marginBottom: 5, height: 45 }} size=\"small\" onClick={() => this.props.history.push(\"/login\")}>\r\n                            Zaloguj się\r\n                        </Button>\r\n                    </GridColumn>\r\n                    <GridColumn style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                        <Button id=\"resorts\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5, height: 45 }} size=\"small\" onClick={() => this.props.history.push(\"/resorts\")}>\r\n                            Szukaj ośrodka narciarskiego\r\n                        </Button>\r\n                    </GridColumn>\r\n                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                        <Button id=\"register\" style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background, fontWeight: \"bold\", marginBottom: 5, height: 45 }} size=\"small\" onClick={() => this.props.history.push(\"/register\")}>\r\n                            Zarejestruj się\r\n                        </Button>\r\n                    </GridColumn>\r\n                </GridRow>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","export const validation = {\r\n    validatePassword,\r\n    validateSuccess,\r\n    validateNotBlank,\r\n    validateUsername,\r\n    validateName,\r\n    validateSurname,\r\n    validateEmail,\r\n    validatePhoneNumber,\r\n    validateDescription,\r\n    validateNumberGreater\r\n};\r\n\r\nfunction validatePhoneNumber (phoneNumber) {\r\n    const PHONEPL_REGEX = RegExp(\r\n      \"(?:1[2-8]|2[2-69]|3[2-49]|4[1-68]|5[0-9]|6[0-35-9]|[7-8][1-9]|9[145])\\\\d{7}\"\r\n    );\r\n  \r\n    if (!PHONEPL_REGEX.test(phoneNumber)) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: \"Niepoprawny format numeru telefonu!\",\r\n      };\r\n    } else if (phoneNumber.length > 30) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Długość numer telefonu jest zbyt długa - może mieć maksymalnie 30 znaków!`,\r\n      };\r\n    } else {\r\n      return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null,\r\n      };\r\n    }\r\n  }\r\n\r\nfunction validateDescription(description) {\r\n    if (description.length > 255) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Opis jest zbyt długi - może mieć maksymalnie 255 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateNumberGreater(number) {\r\n    if (number < 0) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Wprowadzona wartość nie jest liczbą większą lub równą 0!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateSurname(surname) {\r\n    if (surname.length > 60) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Nazwisko jest zbyt długie - może mieć maksymalnie 60 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateName(name) {\r\n    if (name.length > 60) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Imię jest zbyt długie - może mieć maksymalnie 60 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateUsername(username) {\r\n    if (username.length < 7) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Nazwa użytkownika jest zbyt krótka, wymagane jest 7 znaków!`\r\n        };\r\n    } else if (username.length > 60) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Nazwa użytkownika jest zbyt długa - może mieć maksymalnie 60 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateEmail (email) {\r\n    if (!email) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: \"Email nie może być pusty!\"\r\n      };\r\n    }\r\n  \r\n    const EMAIL_REGEX = RegExp(\r\n      /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    if (!EMAIL_REGEX.test(email)) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: \"Niepoprawny format emaila!\"\r\n      };\r\n    }\r\n  \r\n    if (email.length > 60) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Email jest zbyt długi - może mieć maksymalnie 60 znaków!`\r\n      };\r\n    }\r\n  \r\n    return {\r\n      validateStatus: \"success\",\r\n      errorMsg: null\r\n    };\r\n}\r\n\r\nfunction validatePassword(password) {\r\n    const pattern = new RegExp(\"[0-9]\");\r\n\r\n    if (password.length < 7) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Hasło jest zbyt krótkie, wymagane jest 7 znaków!`\r\n        };\r\n    } else if (!pattern.test(password)) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Hasło powinno zawierać co najmniej jedną cyfrę!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateNotBlank(input) {\r\n    if (input.length < 1) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Pole nie powinno być puste!`\r\n        };\r\n    } else {\r\n        return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n    }\r\n}\r\n\r\nfunction validateSuccess(request) {\r\n    return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form } from \"antd\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { IoIosPerson } from 'react-icons/io';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n\r\n    this.state = {\r\n      username: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      password: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.password.value === \"\" || this.state.username.value === \"\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    AuthService.login(this.state.username.value, this.state.password.value)\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Zalogowano!\",\r\n          description:\r\n              \"Udana próba logowania!\",\r\n        });\r\n\r\n        this.props.history.push(\"/profile\");\r\n        window.location.reload();\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Logowanie nieudane!\",\r\n          description:\r\n              \"Nieudana próba logowania!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={12} tablet={9} computer={6}>\r\n          <Segment padded>\r\n              <Container>\r\n                  <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                      <Grid.Column>\r\n                          {/* <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                            alt=\"start-img\" style={{ textAlign: \"center\", padding: 20, paddingBottom: 30 }}/> */}\r\n                          <h4 title=\"Logowanie\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20 }}><IoIosPerson size=\"100px\" tooltip=\"Logowanie\"/></h4>\r\n                      </Grid.Column>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.username.validateStatus}\r\n                          help={this.state.username.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"username\"\r\n                              value={this.state.username.value}\r\n                              placeholder=\"Nazwa użytkownika\"\r\n                              onChange={(username) => {\r\n                                  this.onChange(\r\n                                      username,\r\n                                      validation.validateNotBlank\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.password.validateStatus}\r\n                          help={this.state.password.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"password\"\r\n                              type=\"password\"\r\n                              value={this.state.password.value}\r\n                              placeholder=\"Hasło\"\r\n                              onChange={(password) => {\r\n                                  this.onChange(\r\n                                      password,\r\n                                      validation.validateNotBlank\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem style={{ marginBottom: 6 }}>\r\n                          <Button\r\n                              disabled={this.isFormInvalid()}\r\n                              size=\"small\"\r\n                              onClick={this.handleLogin}\r\n                              style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                              Zaloguj\r\n                          </Button>\r\n                      </FormItem>\r\n                  </Form>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form, Checkbox } from \"antd\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { FaSkiing, FaSnowboarding } from 'react-icons/fa';\r\nimport { IoIosPersonAdd } from 'react-icons/io';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.toggleSkiing = this.toggleSkiing.bind(this);\r\n    this.toggleSnowboarding = this.toggleSnowboarding.bind(this);\r\n\r\n    this.state = {\r\n      username: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      email: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      password: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      name: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      surname: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      phoneNumber: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      description: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      skiing: false,\r\n      snowboarding: false,\r\n      successful: false\r\n    };\r\n  }\r\n\r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  toggleSkiing() {\r\n    var actualValue = this.state.skiing;\r\n\r\n    this.setState({\r\n      skiing: !actualValue\r\n    });\r\n  }\r\n\r\n  toggleSnowboarding() {\r\n    var actualValue = this.state.snowboarding;\r\n\r\n    this.setState({\r\n      snowboarding: !actualValue\r\n    });\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.password.validateStatus === \"error\" || this.state.username.validateStatus === \"error\" || this.state.email.validateStatus === \"error\" || this.state.name.validateStatus === \"error\"\r\n    || this.state.surname.validateStatus === \"error\" || this.state.phoneNumber.validateStatus === \"error\" || this.state.description.validateStatus === \"error\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false\r\n    });\r\n    \r\n    AuthService.register(\r\n      this.state.username.value,\r\n      this.state.email.value,\r\n      this.state.password.value,\r\n      this.state.name.value,\r\n      this.state.surname.value,\r\n      this.state.phoneNumber.value,\r\n      this.state.description.value,\r\n      this.state.skiing,\r\n      this.state.snowboarding\r\n    )\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Zarejestrowano!\",\r\n          description:\r\n              \"Udana próba rejestracji, spróbuj się teraz zalogować!\",\r\n        });\r\n\r\n        this.props.history.push(\"/login\");\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Rejestracja nieudana!\",\r\n          description:\r\n              \"Nieudana próba rejestracji!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={12} tablet={9} computer={6}>\r\n          <Segment padded>\r\n              <Container>\r\n                  <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                      <Grid.Column>\r\n                          <h4 title=\"Rejestracja\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20 }}><IoIosPersonAdd size=\"100px\" tooltip=\"Rejestracja\"/></h4>\r\n                      </Grid.Column>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.username.validateStatus}\r\n                          help={this.state.username.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"username\"\r\n                              value={this.state.username.value}\r\n                              placeholder=\"Nazwa użytkownika\"\r\n                              onChange={(username) => {\r\n                                  this.onChange(\r\n                                      username,\r\n                                      validation.validateUsername\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.password.validateStatus}\r\n                          help={this.state.password.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"password\"\r\n                              type=\"password\"\r\n                              value={this.state.password.value}\r\n                              placeholder=\"Hasło\"\r\n                              onChange={(password) => {\r\n                                  this.onChange(\r\n                                      password,\r\n                                      validation.validatePassword\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.email.validateStatus}\r\n                          help={this.state.email.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"email\"\r\n                              value={this.state.email.value}\r\n                              placeholder=\"Email\"\r\n                              onChange={(email) => {\r\n                                  this.onChange(\r\n                                    email,\r\n                                      validation.validateEmail\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.name.validateStatus}\r\n                          help={this.state.name.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"name\"\r\n                              value={this.state.name.value}\r\n                              placeholder=\"Imię\"\r\n                              onChange={(name) => {\r\n                                  this.onChange(\r\n                                      name,\r\n                                      validation.validateName\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.surname.validateStatus}\r\n                          help={this.state.surname.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"surname\"\r\n                              value={this.state.surname.value}\r\n                              placeholder=\"Nazwisko\"\r\n                              onChange={(surname) => {\r\n                                  this.onChange(\r\n                                      surname,\r\n                                      validation.validateSurname\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.phoneNumber.validateStatus}\r\n                          help={this.state.phoneNumber.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"phoneNumber\"\r\n                              value={this.state.phoneNumber.value}\r\n                              placeholder=\"Numer telefonu\"\r\n                              onChange={(phoneNumber) => {\r\n                                  this.onChange(\r\n                                      phoneNumber,\r\n                                      validation.validatePhoneNumber\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.description.validateStatus}\r\n                          help={this.state.description.errorMsg}>\r\n                          <TextArea\r\n                              autoComplete=\"off\"\r\n                              rows=\"3\"\r\n                              name=\"description\"\r\n                              value={this.state.description.value}\r\n                              placeholder=\"Opis\"\r\n                              onChange={(description) => {\r\n                                  this.onChange(\r\n                                      description,\r\n                                      validation.validateDescription\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <Grid textAlign=\"left\">\r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 6 }}>\r\n                          <Checkbox onChange={this.toggleSnowboarding} name=\"snowboarding\" checked={this.state.snowboarding}>Umiejętność jeżdżenia na snowboardzie <FaSnowboarding/></Checkbox>\r\n                        </FormItem>  \r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 26 }}>\r\n                          <Checkbox onChange={this.toggleSkiing} name=\"skiing\" checked={this.state.skiing}>Umiejętność jeżdżenia na nartach <FaSkiing/></Checkbox>\r\n                        </FormItem>  \r\n                      </Grid>\r\n                      <FormItem style={{ marginBottom: 6 }}>\r\n                          <Button\r\n                              disabled={this.isFormInvalid()}\r\n                              size=\"small\"\r\n                              onClick={this.handleRegister}\r\n                              style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                              Zarejestruj się\r\n                          </Button>\r\n                      </FormItem>\r\n                  </Form>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { Authorization: 'Bearer ' + user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/test/';\r\nconst USER_URL = 'https://ski-with-me.herokuapp.com/api/user/';\r\n//const API_URL = 'http://localhost:8080/api/test/';\r\n//const USER_URL = 'http://localhost:8080/api/user/';\r\n\r\nclass UserService {\r\n\r\n  getTripsFromUsername(username) {\r\n    return axios.get(USER_URL + 'trips/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  addAcquaintance(username, usernameAccept) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'addAcquaintance/' + username, usernameAccept, { headers: headers });\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  getAchievementsFromUsername(username) {\r\n    return axios.get(USER_URL + 'achievements/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAcquaintancesFromUsername(username) {\r\n    return axios.get(USER_URL + 'acquaintances/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getUserFromUsername(username) {\r\n    return axios.get(USER_URL + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAcquaintancesToAddFromUsername(username, usernameInput) {\r\n    return axios.get(USER_URL + 'acquaintancesToAdd?username=' + username + \"&usernameInput=\" + usernameInput, { headers: authHeader() });\r\n  }\r\n\r\n  getParticipants(tripId) {\r\n    return axios.get(USER_URL + 'getParticipants/' + tripId, { headers: authHeader() });\r\n  }\r\n\r\n  changePassword(passwordChangeRequest, username) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'changePassword/' + username, JSON.stringify(passwordChangeRequest), { headers: headers });\r\n  }\r\n\r\n  sendEmail(username) {\r\n    return axios.post(USER_URL + 'sendPasswordEmail/' + username, JSON.stringify(), { headers: authHeader() });\r\n  }\r\n\r\n  updateUserData(userDataRequest, username) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'updateUserData/' + username, JSON.stringify(userDataRequest), { headers: headers });\r\n  }\r\n\r\n  deleteAcquaintance(username, usernameAccept) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'deleteAcquaintance/' + username, usernameAccept, { headers: headers });\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nexport default function LoadingIndicator () {\r\n\r\n  return (\r\n    <Loader active inline=\"centered\" size=\"massive\" />\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Grid, GridRow, GridColumn, Button } from \"semantic-ui-react\";\r\nimport { FaSnowboarding, FaSkiing } from 'react-icons/fa';\r\nimport { MdNotInterested } from 'react-icons/md';\r\nimport { Colors } from \"../../constants\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { notification } from \"antd\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaUser } from 'react-icons/fa';\r\n\r\nexport default class UserInfo extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n        \r\n      document.title = \"SkiWithMe\";\r\n  \r\n      this.state = {\r\n        currentUser: \"\",\r\n        uppercase: \"\",\r\n        resortImage: null\r\n      };\r\n\r\n      this.handleSendEmail = this.handleSendEmail.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => ({\r\n            currentUser: this.props.currentUser,\r\n            resortImage: this.props.resortImage\r\n          }), () => {\r\n              var username = this.state.currentUser.username;\r\n              var uppercase = username.toUpperCase();\r\n              this.setState(() => ({\r\n                uppercase: uppercase\r\n              }))\r\n          }\r\n        );\r\n    }\r\n\r\n    handleSendEmail() {\r\n        UserService\r\n            .sendEmail(AuthService.getCurrentUser().username)\r\n            .then(() => {\r\n                notification.success({\r\n                    message: \"Wysłano emaila!\",\r\n                    description:\r\n                        \"Wysłanie email z nowym hasłem zakończone powodzeniem!\",\r\n                });\r\n            })\r\n            .catch(() => {\r\n                notification.error({\r\n                    message: \"Nieudana wysyłka emaila!\",\r\n                    description:\r\n                        \"Wysłanie email z nowym hasłem zakończone niepowodzeniem!\",\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.resortImage === null) {\r\n            return <LoadingIndicator/>\r\n        } else {\r\n        return (\r\n            <Grid columns=\"equal\">\r\n                <GridRow columns={10} stretched style={{padding: 5}}>\r\n                    <GridRow columns={10} style={{padding: 5, paddingLeft: 50}}>\r\n                        <Grid.Column floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{paddingTop: 7, marginLeft: 20}}>\r\n                            <FaUser size=\"100px\"/>\r\n                        </Grid.Column>\r\n                    </GridRow>\r\n                    <GridRow verticalAlign=\"middle\" columns={10} style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h3 style={{ fontWeight: \"bold\", color: Colors.primary }}>{this.state.uppercase}</h3>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={10} style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"right\" textAlign=\"left\" style={{padding: 3}}>\r\n                            <Link style={{ width: 160 }} to={{ pathname: `/userDataChange/${this.state.currentUser.username}`,\r\n                                state: { userData: this.state.currentUser }, }}>\r\n                                <Button \r\n                                    floated=\"right\"\r\n                                    size=\"small\"\r\n                                    basic\r\n                                    style={{ width: 155, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }}>\r\n                                    Zmień dane\r\n                                </Button>\r\n                            </Link>\r\n                            <Link style={{width: 160}} to={\"/passwordChange/\" + this.state.currentUser.username}>\r\n                                <Button floated=\"right\" style={{backgroundColor: Colors.primary, width: 155}} size=\"small\">\r\n                                    <Button.Content visible style={{color: Colors.background}}>Zmień hasło</Button.Content>\r\n                                </Button>\r\n                            </Link>\r\n                            <Button \r\n                                floated=\"right\"\r\n                                size=\"small\"\r\n                                basic\r\n                                onClick={this.handleSendEmail}\r\n                                style={{ width: 155, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n                                Zapomniałem hasła\r\n                            </Button>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={10} stretched style={{padding: 5}}>\r\n                    <GridRow columns={3} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Imię i nazwisko: {this.props.currentUser.name} {this.state.currentUser.surname}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Numer telefonu: {this.state.currentUser.phoneNumber}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Email: {this.state.currentUser.email}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={3} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                            {this.state.currentUser.snowboarder === true &&\r\n                                <h4 title=\"Umiejętność jazdy na snowboardzie\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na snowboardzie: {this.state.currentUser.snowboarder} <FaSnowboarding tooltip=\"Umiejętność jazdy na snowboardzie\"/></h4>\r\n                            }\r\n                            {this.state.currentUser.snowboarder === false &&\r\n                                <h4 title=\"Brak umiejętności jazdy na snowboardzie\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na snowboardzie: {this.state.currentUser.snowboarder} <MdNotInterested tooltip=\"Brak umiejętności jazdy na snowboardzie\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            {this.state.currentUser.skier === true &&\r\n                                <h4 title=\"Umiejętność jazdy na nartach\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na nartach: {this.state.currentUser.skier} <FaSkiing tooltip=\"Umiejętność jazdy na nartach\"/></h4>\r\n                            }\r\n                            {this.state.currentUser.skier === false &&\r\n                                <h4 title=\"Brak umiejętności jazdy na nartach\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na nartach: {this.state.currentUser.skier} <MdNotInterested tooltip=\"Brak umiejętności jazdy na nartach\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>&nbsp;</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={10} stretched style={{padding: 5}}>\r\n                    <GridRow columns={10} stretched style={{padding: 5, paddingLeft: 35}}>\r\n                        <h5>{this.state.currentUser.description}</h5>\r\n                    </GridRow>\r\n                </GridRow>\r\n            </Grid>\r\n  );\r\n  }\r\n}\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/resort/';\r\n//const API_URL = 'http://localhost:8080/api/resort/';\r\n\r\nclass ResortService {\r\n  getResorts(activePage, size, filtering, sorting, name, latitude, longitude) {\r\n    return axios.get(API_URL + 'all?activePage=' + activePage + \"&size=\" + size + \"&filtering=\" + filtering + \"&sorting=\" + \r\n    sorting + \"&name=\" + name + \"&latitude=\" + latitude  + \"&longitude=\" + longitude, { headers: authHeader() });\r\n  }\r\n  \r\n  getClosestResorts(latitude, longitude) {\r\n    return axios.get(API_URL + 'closestResorts?latitude=' + latitude  + \"&longitude=\" + longitude, { headers: authHeader() });\r\n  }\r\n\r\n  getResortImage(id) {\r\n    return axios.get(API_URL + 'resortImage/' + id, { headers: authHeader() }, { responseType: 'blob' });\r\n  }\r\n\r\n  getResortImageApi(id) {\r\n    return axios.get('https://skimap.org/SkiAreas/view/' + id + '.json');\r\n  }\r\n\r\n  getResortRatings(id) {\r\n    return axios.get(API_URL + 'rating/' + id, { headers: authHeader() });\r\n  }\r\n\r\n  getResortFromTripId(tripId) {\r\n    return axios.get(API_URL + 'fromTripId/' + tripId, { headers: authHeader() });\r\n  }\r\n\r\n  submitGrade(resortGradeRequest, username) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(API_URL + 'submitGrade/' + username, JSON.stringify(resortGradeRequest), { headers: headers });\r\n  }\r\n\r\n  editResort(resortObject) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.put(API_URL + 'editResort', JSON.stringify(resortObject), { headers: headers });\r\n  }\r\n}\r\n\r\nexport default new ResortService();","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport UserInfo from \"./user.info.component\";\r\nimport { Grid, Segment, GridRow, GridColumn, Button } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { Colors } from \"../../constants\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport { notification } from \"antd\";\r\nimport { GiAchievement, GiMountaintop } from 'react-icons/gi';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      username: AuthService.getCurrentUser().username,\r\n      currentUser: null,\r\n      achievements: null,\r\n      acquaintances: null,\r\n      acquaintanceNumber: 0,\r\n      trips: null,\r\n      resortImage: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCurrentUser(this.state.username).then(user => {\r\n      this.setState({\r\n        currentUser: user.data\r\n      })\r\n    });\r\n\r\n    this.getAchievements(this.state.username).then(achievements => {\r\n      this.setState({\r\n        achievements: achievements.data\r\n      })});\r\n\r\n    this.getAcquaintances(this.state.username).then(acquaintances => {\r\n      this.setState({\r\n        acquaintances: acquaintances.data.userDTO,\r\n        acquaintanceNumber: acquaintances.data.countAcquaintances\r\n      })});\r\n\r\n    this.getTrips(this.state.username).then(trips => {\r\n      this.setState({\r\n        trips: trips.data\r\n      })});\r\n  }\r\n\r\n  handleDeleteAcquaintance(username) {\r\n    UserService\r\n    .deleteAcquaintance(AuthService.getCurrentUser().username, username)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Znajomy został usunięty!\",\r\n            description:\r\n                \"Usunięto znajomego o loginie \" + username + \"!\",\r\n        });\r\n    })\r\n    .then((response) => {\r\n        this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n            acquaintances: acquaintances.data.userDTO,\r\n            acquaintanceNumber: acquaintances.data.countAcquaintances\r\n          })});\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się usunąć znajomego!\",\r\n            description:\r\n                \"Użytkownik o loginie \" + username + \" nie został usunięty ze znajomych!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  getCurrentUser (username) {\r\n    return UserService.getUserFromUsername(username);\r\n  }\r\n\r\n  getAchievements (username) {\r\n    return UserService.getAchievementsFromUsername(username);\r\n  }\r\n\r\n  getAcquaintances (username) {\r\n    return UserService.getAcquaintancesFromUsername(username);\r\n  }\r\n\r\n  getTrips (username) {\r\n    return UserService.getTripsFromUsername(username);\r\n  }\r\n\r\n  getResortImage (id) {\r\n    return resortService.getResortImage(id);\r\n  }\r\n\r\n  render () {\r\n    if (this.state.currentUser === null || this.state.achievements === null || this.state.acquaintances === null || this.state.trips === null) {\r\n      return <LoadingIndicator />\r\n    } else {\r\n      return (\r\n        <Grid textAlign=\"center\">\r\n          <Grid.Column mobile={16} tablet={13} computer={10}>\r\n            <Segment padded>\r\n              <UserInfo\r\n                currentUser={this.state.currentUser}\r\n                userImage={this.state.resortImage}\r\n              />\r\n            </Segment>\r\n            <Segment padded>\r\n              <Grid textAlign=\"left\">\r\n                <GridRow style={{ padding: 5 }}>\r\n                  <GridColumn floated=\"left\" textAlign=\"left\" style={{ padding: 3, paddingLeft: 20 }}>\r\n                    <h2 style={{ width: 150 }}>Znajomi: </h2>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={this.state.acquaintances.length + 1} style={{ padding: 5, paddingLeft: 15 }}>\r\n                  <React.Fragment>\r\n                  {this.state.acquaintances.length === 0 ? (\r\n                        <h4 style={{ padding: 3, paddingLeft: 10 }}>Brak znajomych do wyświetlenia</h4>\r\n                    ) : (\r\n                    this.state.acquaintances\r\n                      .map((user) => (\r\n                        <Segment style={{ margin: 3 }} key={user.username}>\r\n                          <Grid textAlign=\"center\">\r\n                              <Grid.Row stretched columns={3} style={{ padding: 8 }}>\r\n                                  <Grid.Column style={{ margin: 0 }} width=\"2\" floated=\"left\">\r\n                                      <FaUser size=\"35px\"/>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                      <h3 style={{ margin: 5, marginBottom: 0 }}>{user.username}</h3>\r\n                                      <h4 style={{ margin: 5 }}>{user.email}</h4>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column width=\"5\" floated=\"right\" verticalAlign=\"middle\" style={{ height: 40 }}>\r\n                                      <Button\r\n                                          size=\"small\"\r\n                                          onClick={() => this.handleDeleteAcquaintance(user.username)}\r\n                                          style={{ backgroundColor: '#ff5f57', color: Colors.background }}>\r\n                                          Usuń ze znajomych\r\n                                      </Button>\r\n                                  </Grid.Column>\r\n                              </Grid.Row>\r\n                          </Grid>\r\n                        </Segment>\r\n                      ))\r\n                    )\r\n                      }\r\n                  </React.Fragment>\r\n                </GridRow>\r\n              </Grid>\r\n            </Segment>\r\n            <Segment padded>\r\n              <Grid textAlign=\"left\">\r\n                <GridRow style={{ padding: 5 }}>\r\n                  <GridColumn floated=\"left\" textAlign=\"left\" style={{ padding: 3, paddingLeft: 20 }}>\r\n                    <h2>Wyjazdy: </h2>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={this.state.trips.length + 1} style={{ padding: 5, paddingLeft: 15 }}>\r\n                  <React.Fragment>\r\n                  {this.state.trips.length === 0 ? (\r\n                        <h4 style={{ padding: 3, paddingLeft: 10 }}>Brak wyjazdów do wyświetlenia</h4>\r\n                    ) : (\r\n                    this.state.trips\r\n                      .map((trip) => (\r\n                        <Segment style={{ margin: 3 }} key={trip.tripId}>\r\n                          <Link to={{ pathname: `../tripView/${trip.tripId}`, state: { trip: trip } }}>\r\n                            <Grid textAlign=\"center\">\r\n                                <Grid.Row stretched columns={3} style={{ padding: 8 }}>\r\n                                    <Grid.Column style={{ margin: 0 }} width=\"2\" floated=\"left\">\r\n                                        <GiMountaintop style={{ color: 'black' }} size=\"40px\"/>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                        <h4 style={{ margin: 5 }}>{trip.resortName}</h4>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width=\"8\" floated=\"right\" verticalAlign=\"middle\">\r\n                                        <h5 style={{ margin: 5, textAlign: \"left\" }}>{trip.description}</h5>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                          </Link>\r\n                        </Segment>\r\n                      ))\r\n                    )\r\n                  }\r\n                  </React.Fragment>\r\n                </GridRow>\r\n              </Grid>\r\n            </Segment>\r\n            <Segment padded>\r\n              <Grid textAlign=\"left\">\r\n                <GridRow style={{ padding: 5 }}>\r\n                  <GridColumn floated=\"left\" textAlign=\"left\" style={{ padding: 3, paddingLeft: 20 }}>\r\n                    <h2>Osiągnięcia: </h2>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={this.state.achievements.length + 1} style={{ padding: 5, paddingLeft: 15 }}>\r\n                  <React.Fragment>\r\n                  {this.state.achievements.length === 0 ? (\r\n                        <h4 style={{ padding: 3, paddingLeft: 10 }}>Brak osiągnięć do wyświetlenia</h4>\r\n                    ) : (\r\n                    this.state.achievements\r\n                      .map((achievement) => (\r\n                        <Segment style={{ margin: 3 }} key={achievement.achievementId}>\r\n                          <Grid textAlign=\"center\">\r\n                              <Grid.Row stretched columns={3} style={{ padding: 8 }}>\r\n                                  <Grid.Column style={{ margin: 0 }} width=\"2\" floated=\"left\">\r\n                                      <GiAchievement size=\"40px\"/>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                      <h4 style={{ margin: 5 }}>{achievement.achievementName}</h4>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column width=\"8\" floated=\"right\" verticalAlign=\"middle\">\r\n                                      <h5 style={{ margin: 5, textAlign: \"left\" }}>{achievement.achievementDescription}</h5>\r\n                                  </Grid.Column>\r\n                              </Grid.Row>\r\n                          </Grid>\r\n                        </Segment>\r\n                      ))\r\n                    )\r\n                  }\r\n                  </React.Fragment>\r\n                </GridRow>\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  Header,\r\n  Dropdown,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\nimport {Colors} from \"../../constants\";\r\n\r\n\r\nconst itemsOnPageOptions = [\r\n  { key: \"1\", value: 10, text: \"10\" },\r\n  { key: \"2\", value: 25, text: \"25\" },\r\n  { key: \"3\", value: 50, text: \"50\" },\r\n];\r\n\r\nconst sortingOptions = [\r\n  { id: 1, key: \"1\", value: \"DESC_resortName\", text: \"Niealfabetycznie po nazwie ośrodka\" },\r\n  { id: 2, key: \"2\", value: \"ASC_resortName\", text: \"Alfabetycznie po nazwie ośrodka\" },\r\n  { id: 3, key: \"3\", value: \"DESC_distance\", text: \"Malejąco po odległości od obecnej pozycji\" },\r\n  { id: 4, key: \"4\", value: \"ASC_temperature\", text: \"Rosnąco po temperaturze\" },\r\n  { id: 5, key: \"5\", value: \"DESC_temperature\", text: \"Malejąco po temperaturze\" },\r\n  { id: 6, key: \"6\", value: \"ASC_snowThickness\", text: \"Rosnąco po grubości pokrywy śnieżnej\" },\r\n  { id: 7, key: \"7\", value: \"DESC_snowThickness\", text: \"Malejąco po grubości pokrywy śnieżnej\" },\r\n  { id: 8, key: \"8\", value: \"DESC_runCount\", text: \"Malejąco po liczbie otwartych tras\" },\r\n  { id: 9, key: \"9\", value: \"DESC_clouds\", text: \"Malejąco po zachmurzeniu\" },\r\n  { id: 10, key: \"10\", value: \"ASC_clouds\", text: \"Rosnąco po zachmurzeniu\" }\r\n];\r\n\r\nconst filteringOptions = [\r\n  { key: \"1\", value: \"ALL\", text: \"Wszystkie\" },\r\n  { key: \"2\", value: \"TER\", text: \"Jazda terenowa\" },\r\n  { key: \"3\", value: \"OTW\", text: \"Otwarte trasy\" },\r\n  { key: \"4\", value: \"NIG\", text: \"Nocne jazdy\" },\r\n];\r\n\r\nclass FilterBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      listOfResorts: null,\r\n      itemsOnPage: \"10\",\r\n    };\r\n  }\r\n\r\n  handleChange = (resort, { name, value }) => {\r\n    if (this.state.hasOwnProperty(name)) {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Header as=\"h1\" style={{color: Colors.primary, paddingBottom: 25}}>\r\n          Znajdź ośrodek narciarski dla siebie!\r\n        </Header>\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row columns={10} stretched style={{padding: 5}}>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Liczba ośrodków na stronie</label>\r\n                <Dropdown\r\n                  placeholder=\"Liczba ośrodków na stronie\"\r\n                  compact\r\n                  disabled={this.props.isLoading}\r\n                  selectOnNavigation={false}\r\n                  name=\"itemsCountPerPage\"\r\n                  selection\r\n                  value={this.props.itemsCountPerPage}\r\n                  options={itemsOnPageOptions}\r\n                  onChange={this.props.onChangeItemsOnPage}\r\n                />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form.Field>\r\n                <label>Wyszukaj po nazwie</label>\r\n                <Input\r\n                    placeholder=\"Nazwa ośrodka\"\r\n                    onChange={this.props.onChangeName}\r\n                    name=\"resortName\"\r\n                ></Input>\r\n                </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={10} stretched style={{padding: 5}}>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Filtrowanie</label>\r\n                <Dropdown\r\n                  placeholder=\"Filtrowanie ośrodków\"\r\n                  compact\r\n                  disabled={this.props.isLoading}\r\n                  selectOnNavigation={false}\r\n                  name=\"filtering\"\r\n                  selection\r\n                  value={this.props.filtering}\r\n                  options={filteringOptions}\r\n                  onChange={this.props.onChangeFiltering}\r\n                />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Sortowanie</label>\r\n                <Dropdown\r\n                  placeholder=\"Sortowanie ośrodków\"\r\n                  compact\r\n                  disabled={this.props.isLoading}\r\n                  selectOnNavigation={false}\r\n                  name=\"sorting\"\r\n                  selection\r\n                  value={this.props.sorting}\r\n                  options={sortingOptions}\r\n                  onChange={this.props.onChangeSorting}\r\n                />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={10} stretched style={{padding: 5}}>\r\n            <Grid.Column>\r\n                  <Form.Field>\r\n                    <label> </label>\r\n                    <Button\r\n                      fluid\r\n                      animated\r\n                      style={{backgroundColor: Colors.primary}}\r\n                      onClick={this.props.onSubmit}\r\n                      loading={this.props.isLoading}\r\n                    >\r\n                      <Button.Content visible style={{color: Colors.background}}>Wyszukaj</Button.Content>\r\n                      <Button.Content hidden>\r\n                        <Icon name=\"search\" />\r\n                      </Button.Content>\r\n                    </Button>\r\n                  </Form.Field>\r\n                </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Form.Group widths=\"equal\"></Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterBar;","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { TiLightbulb } from \"react-icons/ti\";\r\nimport { FaLightbulb } from \"react-icons/fa\";\r\n\r\nclass ResortCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clouds: 70,\r\n      humidity: 90.36896897756206,\r\n      lastChange: \"2016-02-18T13:11:51.000+00:00\",\r\n      latitude: 52.977947,\r\n      liftCount: 0,\r\n      longitude: 52.977947,\r\n      nightSkiing: false,\r\n      region: \"Newfoundland and Labrador\",\r\n      resortId: 1,\r\n      resortName: \"Smokey Mountain Ski Club\",\r\n      runCount: 0,\r\n      sensedTemperature: -22.19486568548723,\r\n      snowThickness: 44,\r\n      temperature: 19.189346395452873,\r\n      terrainPark: false,\r\n      windSpeed: 10.054735036652962,\r\n      distance: 10.0,\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    var temp = this.props.resortDetails.temperature.toString();\r\n    var dotIndex = temp.indexOf('.');\r\n    var temperatureRounded = temp.substring(0, dotIndex + 2);\r\n\r\n    var senTemp = this.props.resortDetails.sensedTemperature.toString();\r\n    dotIndex = senTemp.indexOf('.');\r\n    var sensedTemperatureRounded = senTemp.substring(0, dotIndex + 2);\r\n\r\n    var disTemp = this.props.resortDetails.distance.toString();\r\n    dotIndex = disTemp.indexOf('.');\r\n    var distanceRounded = disTemp.substring(0, dotIndex + 3);\r\n\r\n    this.setState({\r\n      clouds: this.props.resortDetails.clouds,\r\n      humidity: this.props.resortDetails.humidity,\r\n      lastChange: this.props.resortDetails.lastChange,\r\n      latitude: this.props.resortDetails.latitude,\r\n      liftCount: this.props.resortDetails.liftCount,\r\n      longitude: this.props.resortDetails.longitude,\r\n      nightSkiing: this.props.resortDetails.nightSkiing,\r\n      region: this.props.resortDetails.region,\r\n      resortId: this.props.resortDetails.resortId,\r\n      resortName: this.props.resortDetails.resortName,\r\n      runCount: this.props.resortDetails.runCount,\r\n      sensedTemperature: sensedTemperatureRounded,\r\n      snowThickness: this.props.resortDetails.snowThickness,\r\n      temperature: temperatureRounded,\r\n      terrainPark: this.props.resortDetails.terrainPark,\r\n      windSpeed: this.props.resortDetails.windSpeed,\r\n      distance: distanceRounded\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid columns=\"equal\">\r\n        <GridRow columns={10} stretched style={{ padding: 5 }}>\r\n          <GridRow columns={10} stretched style={{ padding: 5, paddingLeft: 35 }}>\r\n            <GridColumn textAlign=\"center\" style={{ padding: 3 }}>\r\n              <h2 style={{ fontWeight: \"bold\" }}>{this.state.resortName}</h2>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Otwartych tras: {this.state.runCount}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Temperatura (odczuwalna): {this.state.temperature}℃ ({this.state.sensedTemperature}℃)</h5>\r\n            </GridColumn>\r\n          </GridRow>\r\n          <GridRow columns={10} stretched style={{ padding: 5, paddingLeft: 45 }}>\r\n            <GridColumn textAlign=\"center\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Odległość do przebycia: {this.state.distance}km</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Grubość pokrywy śnieżnej: {this.state.snowThickness}cm</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              {this.state.nightSkiing === true &&\r\n                <h5 title=\"Nocne jazdy możliwe\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.nightSkiing} <TiLightbulb tooltip=\"Nocne jazdy możliwe\" /></h5>\r\n              }\r\n              {this.state.nightSkiing === false &&\r\n                <h5 title=\"Brak nocnych jazd\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.nightSkiing} <FaLightbulb tooltip=\"Brak nocnych jazd\" /></h5>\r\n              }\r\n            </GridColumn>\r\n          </GridRow>\r\n          <GridColumn\r\n            centered=\"true\"\r\n            textAlign=\"center\"\r\n            verticalAlign=\"middle\"\r\n            mobile={4}\r\n            tablet={4}\r\n            computer={2}\r\n            padded=\"horizontally\"\r\n            style={{ padding: 5, paddingLeft: 25 }}\r\n          >\r\n            <Grid.Row centered={true} textAlign=\"center\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/resortView/${this.state.resortId}`,\r\n                  state: { resortDetails: this.props.resortDetails },\r\n                }}\r\n              >\r\n                <Button id={this.state.resortId} style={{ backgroundColor: Colors.primary }} size=\"small\">\r\n                  <Button.Content visible style={{ color: Colors.background }}>Więcej</Button.Content>\r\n                </Button>\r\n              </Link>\r\n            </Grid.Row>\r\n          </GridColumn>\r\n        </GridRow>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ResortCard);","import React, { Component } from \"react\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport { Grid, Segment, List, Pagination} from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport FilterBar from \"./filter-bar\";\r\nimport ResortCard from \"./resort-card\";\r\n\r\nexport default class SearchResorts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        document.title = \"SkiWithMe\";\r\n    \r\n        this.state = {\r\n            isLoading: true,\r\n            listOfResorts: null,\r\n            activePage: 1,\r\n            totalPages: 10,\r\n            itemsCountPerPage: 10,\r\n            totalItemsCount: null,\r\n            filtering: \"OTW\",\r\n            sorting: \"ASC_resortId\",\r\n            name: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\"\r\n          };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        navigator.geolocation.getCurrentPosition(\r\n          position => {\r\n            this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude });\r\n            this.getAllResorts(\r\n              this.state.activePage,\r\n              this.state.itemsCountPerPage,\r\n              this.state.filtering,\r\n              this.state.sorting,\r\n              this.state.name,\r\n              this.state.latitude,\r\n              this.state.longitude\r\n            );\r\n          },\r\n          error => console.log(error)\r\n        );\r\n      }\r\n    \r\n      handlePaginationChange = (e, { activePage }) => {\r\n        this.setState({ activePage });\r\n        this.getAllResorts(\r\n          activePage,\r\n          this.state.itemsCountPerPage,\r\n          this.state.filtering,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeItemsOnPage = (e, { value }) => {\r\n        this.setState({ itemsCountPerPage: value });\r\n        this.getAllResorts(\r\n          this.state.activePage,\r\n          value,\r\n          this.state.filtering,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeFiltering = (e, { value }) => {\r\n        this.setState({ filtering: value, activePage: 1 });\r\n        this.getAllResorts(\r\n          1,\r\n          this.state.itemsCountPerPage,\r\n          value,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeSorting = (e, { value }) => {\r\n        this.setState({ sorting: value });\r\n        this.getAllResorts(\r\n          this.state.activePage,\r\n          this.state.itemsCountPerPage,\r\n          this.state.filtering,\r\n          value,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeName = (e, { value }) => {\r\n        this.setState({ name: value });\r\n      };\r\n    \r\n      handleSubmit = () =>{\r\n        this.getAllResorts(\r\n          this.state.activePage,\r\n          this.state.itemsCountPerPage,\r\n          this.state.filtering,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      }\r\n    \r\n      handleChange(event, validationFunction) {\r\n        const target = event.target;\r\n        const inputValue = target.value;\r\n        const inputName = target.name;\r\n    \r\n        this.setState({\r\n          [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n          },\r\n        });\r\n      }\r\n    \r\n      getAllResorts(activePage, itemsOnSite, filtering, sorting, name, latitude, longitude) {\r\n        this.setState({ isLoading: true });\r\n        resortService\r\n          .getResorts(activePage, itemsOnSite, filtering, sorting, name, latitude, longitude)\r\n          .then((response) => {\r\n            this.setState({\r\n              totalPages: response.data.totalPages,\r\n              totalItemsCount: response.data.totalElements,\r\n            });\r\n    \r\n            const results = response.data.content;\r\n            const updatedResults = results.map((results) => {\r\n              return {\r\n                ...results,\r\n              };\r\n            });\r\n\r\n            this.setState({ listOfResorts: updatedResults });\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n              <Segment padded>\r\n                <FilterBar\r\n                  isLoading={this.state.isLoading}\r\n                  itemsCountPerPage={this.state.itemsCountPerPage}\r\n                  sorting={this.state.sorting}\r\n                  filtering={this.state.filtering}\r\n                  name={this.state.name}\r\n                  onChangeItemsOnPage={this.handleChangeItemsOnPage}\r\n                  onChangeSorting={this.handleChangeSorting}\r\n                  onChangeFiltering={this.handleChangeFiltering}\r\n                  onChangeName={this.handleChangeName}\r\n                  onSubmit={this.handleSubmit}\r\n                />\r\n              </Segment>\r\n              <Pagination\r\n                activePage={this.state.activePage}\r\n                boundaryRange={1}\r\n                onPageChange={this.handlePaginationChange}\r\n                size=\"mini\"\r\n                siblingRange={1}\r\n                totalPages={this.state.totalPages}\r\n              />\r\n              <Segment textAlign=\"left\">\r\n                {this.state.isLoading === true ? (\r\n                  <LoadingIndicator />\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                    {this.state.listOfResorts.length === 0 ? (\r\n                      <Segment>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Nie znaleziono ośrodków dla podanych parametrów</h4>\r\n                      </Segment>\r\n                    ) : (\r\n                      this.state.listOfResorts.map((resort) => (\r\n                        <Segment key={resort.resortId}>\r\n                          <ResortCard\r\n                            isAdmin={this.props.isAdmin}\r\n                            resortDetails={resort}\r\n                          ></ResortCard>\r\n                        </Segment>\r\n                      ))\r\n                    )}\r\n                    </List>\r\n                  </React.Fragment>\r\n                )}\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        );\r\n      }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/trip/';\r\n//const API_URL = 'http://localhost:8080/api/trip/';\r\n\r\nclass TripService {\r\n    createTrip(tripObject, username) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'createTrip/' + username, JSON.stringify(tripObject), { headers: headers });\r\n    }\r\n\r\n    updateTrip(tripIdObject, username) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.put(API_URL + 'updateTrip/' + username, JSON.stringify(tripIdObject), { headers: headers });\r\n    }\r\n\r\n    getTripActivity(tripId) {\r\n        return axios.get(API_URL + 'getTripActivity/' + tripId, { headers: authHeader() });\r\n    }\r\n\r\n    quitTrip(username, tripId) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'quitTrip/' + tripId, username, { headers: headers });\r\n    }\r\n\r\n    cancelTrip(username, tripId) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'cancelTrip/' + tripId, username, { headers: headers });\r\n    }\r\n\r\n    joinTrip(username, tripId) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'joinTrip/' + tripId, username, { headers: headers });\r\n    }\r\n}\r\n\r\nexport default new TripService();","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow,\r\n  Segment,\r\n  Button,\r\n  List,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport userService from \"../../services/user.service\";\r\nimport tripService from \"../../services/trip.service\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaUser } from 'react-icons/fa';\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { notification } from \"antd\";\r\n\r\nclass TripView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.state = {\r\n      trip: null,\r\n      resortDetails: null,\r\n      departureDate: null,\r\n      departureTime: null,\r\n      arrivalDate: null,\r\n      participants: null,\r\n      isTripActive: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n        trip: this.props.location.state.trip\r\n    });\r\n\r\n    this.getResortFromTripId(this.props.location.state.trip.tripId).then(resort => { this.setState({\r\n            resortDetails: resort.data\r\n        })\r\n    })\r\n\r\n    this.getParticipants(this.props.location.state.trip.tripId).then(participants => { this.setState({\r\n        participants: participants.data\r\n        })\r\n    })\r\n\r\n    this.getTripActivity(this.props.location.state.trip.tripId).then(trip => { \r\n        this.setState({\r\n            isTripActive: trip.data\r\n        })\r\n    })\r\n\r\n    var tripDate = this.props.location.state.trip.tripDate;\r\n    var daysNumber = this.props.location.state.trip.daysNumber;\r\n\r\n    var departureDate = tripDate.toString().substring(0, 10);\r\n    var departureTime = tripDate.toString().substring(11, 16);\r\n\r\n    var tripDateArrival = new Date(departureDate);\r\n    tripDateArrival.setDate(tripDateArrival.getDate() + parseInt(daysNumber));\r\n    let monthArrival = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(tripDateArrival.toString().substring(4, 7)) / 3 + 1;\r\n    if(monthArrival < 10)\r\n      monthArrival = \"0\" + monthArrival.toString();\r\n    var arrivalFormated = tripDateArrival.toString().substring(11, 15) + \"-\" + monthArrival + \"-\" + tripDateArrival.toString().substring(8, 10);\r\n\r\n    this.setState({\r\n      departureDate: departureDate,\r\n      departureTime: departureTime,\r\n      arrivalDate: arrivalFormated\r\n    });\r\n  }\r\n\r\n  getTripActivity(tripId) {\r\n    return tripService.getTripActivity(tripId);\r\n  }\r\n\r\n  getResortFromTripId(tripId) {\r\n    return resortService.getResortFromTripId(tripId);\r\n  }\r\n\r\n  getParticipants(tripId) {\r\n    return userService.getParticipants(tripId);\r\n  }\r\n\r\n  isEarlierThanNow() {\r\n      return new Date() < new Date(this.props.location.state.trip.tripDate);\r\n  }\r\n\r\n  isActive() {\r\n      return this.state.isTripActive;\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  currentUserParticipates() {\r\n    for(let i = 0; i < this.state.participants.length; i++) {\r\n        if(AuthService.getCurrentUser().username === this.state.participants[i].username) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  quitTrip() {\r\n    tripService\r\n    .quitTrip(AuthService.getCurrentUser().username, this.props.location.state.trip.tripId)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Zrezygnowałeś z wyjazdu!\",\r\n            description:\r\n                \"Wyjazd, na który byłeś zapisany odbędzie się bez Twojego udziału!\",\r\n        });\r\n\r\n        this.props.history.push(`../news`);\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się zrezygnować z wyjazdu!\",\r\n            description:\r\n                \"Rezygnacja nie powiodła się!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  cancelTrip() {\r\n    tripService\r\n    .cancelTrip(AuthService.getCurrentUser().username, this.props.location.state.trip.tripId)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Wyjazd został odwołany!\",\r\n            description:\r\n                \"Odwołano wyjazd!\",\r\n        });\r\n\r\n        this.props.history.push(`../news`);\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się odwołać wyjazdu!\",\r\n            description:\r\n                \"Wyjazd nie został odwołany!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  joinTrip() {\r\n    tripService\r\n    .joinTrip(AuthService.getCurrentUser().username, this.props.location.state.trip.tripId)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Dołączyłeś do wyjazdu!\",\r\n            description:\r\n                \"Zapisałeś się na wyjazd!\",\r\n        });\r\n\r\n        this.props.history.push(`../news`);\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się dołączyć do wyjazdu!\",\r\n            description:\r\n                \"Dołączenie do wyjazdu nie powiodło się!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  render () {\r\n    if(this.state.trip === null || this.state.resortDetails === null || this.state.participants === null || this.state.isTripActive === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid columns=\"equal\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n                <Segment padded>\r\n                    <Grid columns=\"equal\">\r\n                        <GridRow columns={3} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                            <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                    Powrót\r\n                                </Button>\r\n                            </GridColumn>\r\n                            <GridColumn textAlign=\"center\" style={{padding: 5, paddingBottom: 15}}>\r\n                                <h1 style={{ fontWeight: \"bold\", color: Colors.primary }}>{this.state.trip.resortName}</h1>\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                <Link\r\n                                    style={{ padding: 5 }}\r\n                                    to={{\r\n                                    pathname: `../resortView/${this.state.resortDetails.resortId}`,\r\n                                    state: { resortDetails: this.state.resortDetails },\r\n                                    }}\r\n                                >\r\n                                    <Button id={this.state.resortId} style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\">\r\n                                        <Button.Content visible style={{ color: Colors.background }}>Zobacz ośrodek</Button.Content>\r\n                                    </Button>\r\n                                </Link>\r\n                                {(this.currentUserParticipates()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `../tripForm/${this.state.trip.tripId}`, \r\n                                            state: { trip: this.state.trip, resort: this.state.resortDetails }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"settings\" style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\">\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Zmień ustawienia wyjazdu</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                                {(!this.currentUserParticipates() && this.isActive() && this.isEarlierThanNow()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `./${this.props.location.state.trip.tripId}`,\r\n                                            state: { trip: this.state.trip }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"join\" style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\"\r\n                                            onClick={() => this.joinTrip()}>\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Dołącz do wyjazdu</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                                {(this.currentUserParticipates() && this.isActive() && this.isEarlierThanNow()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `./${this.props.location.state.trip.tripId}`,\r\n                                            state: { trip: this.state.trip }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"cancel\" style={{ backgroundColor: '#ff5f57', color: Colors.background, width: 200 }} size=\"small\"\r\n                                            onClick={() => this.cancelTrip()}>\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Odwołaj wyjazd</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                                {(this.currentUserParticipates() && this.isActive() && this.isEarlierThanNow()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `./${this.props.location.state.trip.tripId}`,\r\n                                            state: { trip: this.state.trip }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"quit\" style={{ backgroundColor: '#ff5f57', color: Colors.background, width: 200 }} size=\"small\"\r\n                                            onClick={() => this.quitTrip()}>\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Zrezygnuj z wyjazdu</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                            </GridColumn>\r\n                        </GridRow>\r\n                    </Grid>\r\n                    <Grid columns=\"equal\" style={{paddingTop: 15}}>\r\n                        <GridRow columns={2} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                            <GridRow columns={1} stretched style={{padding: 5}}>\r\n                                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" style={{paddingBottom: 15}}>\r\n                                    <Header as=\"h2\" textAlign=\"center\">\r\n                                        Użytkownicy biorący udział w wyjeździe\r\n                                    </Header>\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <React.Fragment>\r\n                                        <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                                            {this.state.participants.length === 0 ? (\r\n                                                    <h3>Brak użytkowników biorących udział w wyjeździe</h3>\r\n                                                ) : (\r\n                                                this.state.participants.map((user) => (\r\n                                                    <Segment key={user.username}>\r\n                                                        <Grid textAlign=\"center\">\r\n                                                            <Grid.Row stretched columns={3}>\r\n                                                                <Grid.Column style={{ marginRight: 10, marginLeft: 10 }} width=\"2\" floated=\"left\">\r\n                                                                    <FaUser size=\"30px\"/>\r\n                                                                </Grid.Column>\r\n                                                                <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                                                    <h3>{user.username}</h3>\r\n                                                                </Grid.Column>\r\n                                                                <Grid.Column width=\"7\" style={{ marginLeft: 10 }} floated=\"right\">\r\n                                                                    <Header as=\"h4\" textAlign=\"left\" style={{ margin: 5 }}>\r\n                                                                        {user.name} {user.surname}\r\n                                                                    </Header>\r\n                                                                    <Header as=\"h5\" textAlign=\"left\" style={{ margin: 5 }}>\r\n                                                                        {user.email}\r\n                                                                    </Header>\r\n                                                                </Grid.Column>\r\n                                                            </Grid.Row>\r\n                                                        </Grid>\r\n                                                    </Segment>\r\n                                                )))\r\n                                            }\r\n                                        </List>\r\n                                    </React.Fragment>\r\n                                </Grid.Column>\r\n                            </GridRow>\r\n                            <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 150, paddingTop: 0}}>\r\n                                <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15}}>\r\n                                    <h4>Stan wyjazdu: Aktualny</h4>\r\n                                    <h4 style={{ marginTop: 0 }}>Data i godzina wyjazdu: {this.state.departureDate} {this.state.departureTime}</h4>\r\n                                    <h4 style={{ marginTop: 0 }}>Data powrotu: {this.state.arrivalDate}</h4>\r\n                                    <h3 style={{ fontWeight: \"bold\" }}>Opis wyjazdu:</h3>\r\n                                    <h4 style={{ fontStyle: \"italic\", marginTop: 0 }}>{this.state.trip.description}</h4>\r\n                                </GridColumn>\r\n                            </GridRow>\r\n                        </GridRow>\r\n                    </Grid>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(TripView);","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ResortService from \"../../services/resort.service\";\r\nimport TripService from \"../../services/trip.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { Grid, Segment, Button, Container, GridRow, GridColumn } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { DateTimeInput } from 'semantic-ui-calendar-react';\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class TripForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n        isEditionForm: null,\r\n        duration: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        dateTime: '',\r\n        description: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        chosenResortId: '',\r\n        resorts: null\r\n    };\r\n\r\n    this.handleSubmitAdd = this.handleSubmitAdd.bind(this);\r\n    this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.match.params.tripId === undefined) {\r\n        this.setState({\r\n            isEditionForm: false\r\n        });\r\n    } else {\r\n        this.setState({\r\n            isEditionForm: true,\r\n            latitude: 0,\r\n            longitude: 0,\r\n            chosenResortId: this.props.location.state.resort.resortId,\r\n            duration: {\r\n                value: this.props.location.state.trip.daysNumber,\r\n                validateStatus: ''\r\n            },\r\n            description: {\r\n                value: this.props.location.state.trip.description,\r\n                validateStatus: ''\r\n            },\r\n            dateTime: this.props.location.state.trip.tripDate.toString().substring(0, 10) + ' ' + this.props.location.state.trip.tripDate.toString().substring(11, 16)\r\n        });\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude });\r\n          this.getClosestResorts(\r\n            this.state.latitude,\r\n            this.state.longitude\r\n          );\r\n        },\r\n        error => console.log(error)\r\n      );\r\n  }\r\n\r\n  resortInList(resort, resorts) {\r\n      for(let i = 0; i < resorts.length; i++) {\r\n          if(resort.resortId === resorts[i].resortId) {\r\n              return true;\r\n          }\r\n      }\r\n      return false;\r\n  }\r\n\r\n  getClosestResorts(latitude, longitude) {\r\n    ResortService\r\n      .getClosestResorts(latitude, longitude)\r\n      .then((response) => {\r\n        var resorts = response.data.content;\r\n        if(this.props.location.state !== undefined && !this.resortInList(this.props.location.state.resort, resorts)) {\r\n            resorts.push(this.props.location.state.resort);\r\n        }\r\n        this.setState({ resorts: resorts });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  \r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n  \r\n  onChangeSelect(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: inputValue\r\n    })\r\n  }\r\n\r\n  handleChange = (event, {name, value}) => {\r\n    if (this.state.hasOwnProperty(name)) {\r\n      this.setState({ [name]: value });\r\n    }\r\n  }\r\n\r\n  handleSubmitAdd(e) {\r\n    e.preventDefault();\r\n\r\n    var tripObject = {\r\n        daysNumber: this.state.duration.value,\r\n        dateTime: this.state.dateTime.toString().substring(0, 10) + \"T\" + this.state.dateTime.toString().substring(11, 16) + \":00\",\r\n        description: this.state.description.value,\r\n        resortId: this.state.chosenResortId\r\n    }\r\n\r\n  TripService.createTrip(\r\n    tripObject,\r\n    AuthService.getCurrentUser().username\r\n  )\r\n  .then(\r\n    () => {\r\n      notification.success({\r\n        message: \"Stworzono wyjazd!\",\r\n        description:\r\n            \"Udane stworzenie wyjazdu!\",\r\n      });\r\n\r\n      this.props.history.push(`../news`);\r\n  })\r\n  .catch((error) => {\r\n    notification.error({\r\n        message: \"Tworzenie wyjazdu nieudane!\",\r\n        description:\r\n            \"Nieudane stworzenie wyjazdu!\",\r\n    });\r\n  });\r\n  }\r\n\r\n  handleSubmitEdit(e) {\r\n        e.preventDefault();\r\n\r\n        var tripObject = {\r\n            daysNumber: this.state.duration.value,\r\n            dateTime: this.state.dateTime.toString().substring(0, 10) + \"T\" + this.state.dateTime.toString().substring(11, 16) + \":00\",\r\n            description: this.state.description.value,\r\n            resortId: this.state.chosenResortId,\r\n            tripId: this.props.match.params.tripId\r\n        }\r\n    \r\n      TripService.updateTrip(\r\n        tripObject,\r\n        AuthService.getCurrentUser().username\r\n      )\r\n      .then(\r\n        () => {\r\n          notification.success({\r\n            message: \"Zmieniono dane!\",\r\n            description:\r\n                \"Udana zmiana danych wyjazdu!\",\r\n          });\r\n  \r\n          this.props.history.push(`../news`);\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n            message: \"Zmiana danych nieudana!\",\r\n            description:\r\n                \"Nieudana zmiana danych wyjazdu!\",\r\n        });\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.duration.validateStatus === \"error\" || this.state.description.validateStatus === \"error\" || this.state.chosenResortId === \"\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isEditionForm === null || this.state.duration === null || this.state.dateTime === null || this.state.description === null || this.state.resorts === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={12} tablet={10} computer={9}>\r\n                <Segment id=\"segmentId\" padded>\r\n                    <Container>\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid.Column>\r\n                                {this.state.isEditionForm === true && (\r\n                                    <h2 style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 30 }}>Edycja wyjazdu</h2>\r\n                                )}\r\n                                {this.state.isEditionForm === false && (\r\n                                    <h2 style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 30 }}>Tworzenie wyjazdu</h2>\r\n                                )}\r\n                            </Grid.Column>\r\n                            <FormItem \r\n                                hasFeedback\r\n                                autoComplete=\"off\">\r\n                                <Select\r\n                                    style={{ width: '100%' }}\r\n                                    value={this.state.chosenResortId}\r\n                                    name=\"chosenResortId\"\r\n                                    onChange={(event) => {\r\n                                        this.onChangeSelect(\r\n                                            event,\r\n                                            validation.validateSuccess\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    {this.state.resorts\r\n                                        .map((resort) => (\r\n                                            <MenuItem id={resort.resortId} key={resort.resortId} value={resort.resortId}>{resort.resortName}</MenuItem>\r\n                                        ))}\r\n                                </Select>\r\n                                <FormHelperText>Ośrodek narciarski</FormHelperText>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.duration.errorMsg}>\r\n                                <Input\r\n                                    style={{ textAlign: 'right', width: '100%' }}\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"duration\"\r\n                                    value={this.state.duration.value}\r\n                                    placeholder=\"Czas trwania wyjazdu  \"\r\n                                    onChange={(duration) => {\r\n                                        this.onChange(\r\n                                            duration,\r\n                                            validation.validateNumberGreater\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\">\r\n                                <DateTimeInput\r\n                                    style={{ width: '100%' }}\r\n                                    name=\"dateTime\"\r\n                                    startMode=\"year\"\r\n                                    initialDate={new Date()}\r\n                                    clearable={true}\r\n                                    dateFormat=\"YYYY-MM-DD\"\r\n                                    placeholder=\"Data i godzina wyjazdu\"\r\n                                    iconPosition='left'\r\n                                    value={this.state.dateTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.description.errorMsg}>\r\n                                <TextArea\r\n                                    autoComplete=\"off\"\r\n                                    rows=\"3\"\r\n                                    name=\"description\"\r\n                                    value={this.state.description.value}\r\n                                    placeholder=\"Opis\"\r\n                                    onChange={(description) => {\r\n                                        this.onChange(\r\n                                            description,\r\n                                            validation.validateDescription\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem style={{ marginBottom: 6 }}>\r\n                                {this.state.isEditionForm === true && (\r\n                                    <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                            <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                                Powrót\r\n                                            </Button>\r\n                                        </GridColumn>\r\n                                        <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                            <Button\r\n                                                disabled={this.isFormInvalid()}\r\n                                                size=\"small\"\r\n                                                onClick={this.handleSubmitEdit}\r\n                                                style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                                Zaktualizuj wyjazd\r\n                                            </Button>\r\n                                        </GridColumn>\r\n                                    </GridRow>\r\n                                )}\r\n                                {this.state.isEditionForm === false && (\r\n                                <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                        <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                            Powrót\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                        <Button\r\n                                            disabled={this.isFormInvalid()}\r\n                                            size=\"small\"\r\n                                            onClick={this.handleSubmitAdd}\r\n                                            style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                            Stwórz wyjazd\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                                )}\r\n                            </FormItem>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n        }\r\n    }   \r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/rating/';\r\n//const API_URL = 'http://localhost:8080/api/rating/';\r\n\r\nclass RatingService {\r\n  getRatings() {\r\n    return axios.get(API_URL + 'all', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new RatingService();","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow,\r\n  Segment,\r\n  Image,\r\n  Button\r\n} from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport ratingService from \"../../services/rating.service\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaMountain } from \"react-icons/fa\";\r\nimport { TiLightbulb } from \"react-icons/ti\";\r\nimport { MdNotInterested } from \"react-icons/md\";\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nclass ResortView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.state = {\r\n      resortDetails: null,\r\n      resortRating: null,\r\n      resortImageLink: null,\r\n      ratings: null,\r\n      lastChange: '',\r\n      avgRat1: 0,\r\n      avgRat2: 0,\r\n      avgRat3: 0,\r\n      avgRat4: 0,\r\n      avgRat5: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n        resortDetails: this.props.location.state.resortDetails\r\n    });\r\n\r\n    var lastChangeCustom = this.props.location.state.resortDetails.lastChange.substring(0, 10) + \" \" + this.props.location.state.resortDetails.lastChange.substring(11, 19);\r\n\r\n    this.setState({\r\n        lastChange: lastChangeCustom\r\n    });\r\n\r\n    this.getRatings().then(ratings => { this.setState({\r\n        ratings: ratings.data\r\n      })})\r\n\r\n    this.getResortApi(this.props.match.params.resortId).then(resort => { if(resort.data.ski_maps[0] !== undefined) { this.setState({\r\n        resortImageLink: resort.data.ski_maps[0].media.original.url\r\n        })\r\n        }\r\n    })\r\n    \r\n    this.getResortRating(this.props.match.params.resortId).then(resortRating => { this.setState({\r\n        resortRating: resortRating.data\r\n      })\r\n\r\n    var counter1 = 0;\r\n    var counter2 = 0;\r\n    var counter3 = 0;\r\n    var counter4 = 0;\r\n    var counter5 = 0;\r\n\r\n    var sum1 = 0;\r\n    var sum2 = 0;\r\n    var sum3 = 0;\r\n    var sum4 = 0;\r\n    var sum5 = 0;\r\n\r\n    var resortArr = this.state.resortRating;\r\n    for(var i = 0; i < resortArr.length; i++) {\r\n        switch(resortArr[i].ratingCategoryId) {\r\n            case 1:\r\n                counter1++;\r\n                sum1 += resortArr[i].grade;\r\n                break;\r\n            case 2:\r\n                counter2++;\r\n                sum2 += resortArr[i].grade;\r\n                break;\r\n            case 3:\r\n                counter3++;\r\n                sum3 += resortArr[i].grade;\r\n                break;\r\n            case 4:\r\n                counter4++;\r\n                sum4 += resortArr[i].grade;\r\n                break;\r\n            case 5:\r\n                counter5++;\r\n                sum5 += resortArr[i].grade;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    var rat1, rat2, rat3, rat4, rat5;\r\n\r\n    if(counter1 === 0) {\r\n        rat1 = 3;\r\n    } else {\r\n        rat1 = sum1/counter1;\r\n    }\r\n\r\n    if(counter2 === 0) {\r\n        rat2 = 3;\r\n    } else {\r\n        rat2 = sum2/counter2;\r\n    }\r\n\r\n    if(counter3 === 0) {\r\n        rat3 = 3;\r\n    } else {\r\n        rat3 = sum3/counter3;\r\n    }\r\n\r\n    if(counter4 === 0) {\r\n        rat4 = 3;\r\n    } else {\r\n        rat4 = sum4/counter4;\r\n    }\r\n\r\n    if(counter5 === 0) {\r\n        rat5 = 3;\r\n    } else {\r\n        rat5 = sum5/counter5;\r\n    }\r\n\r\n    this.setState({\r\n        avgRat1: rat1,\r\n        avgRat2: rat2,\r\n        avgRat3: rat3,\r\n        avgRat4: rat4,\r\n        avgRat5: rat5\r\n    })\r\n    \r\n    var tempDetails = this.state.resortDetails;\r\n\r\n    var temp = tempDetails.temperature.toString();\r\n    var dotIndex = temp.indexOf('.');\r\n    tempDetails.temperature = temp.substring(0, dotIndex + 2);\r\n\r\n    var senTemp = tempDetails.sensedTemperature.toString();\r\n    dotIndex = senTemp.indexOf('.');\r\n    tempDetails.sensedTemperature = senTemp.substring(0, dotIndex + 2);\r\n\r\n    var disTemp = tempDetails.distance.toString();\r\n    dotIndex = disTemp.indexOf('.');\r\n    tempDetails.distance = disTemp.substring(0, dotIndex + 2);\r\n\r\n    var latTemp = tempDetails.latitude.toString();\r\n    dotIndex = latTemp.indexOf('.');\r\n    tempDetails.latitude = latTemp.substring(0, dotIndex + 2);\r\n\r\n    var longTemp = tempDetails.longitude.toString();\r\n    dotIndex = longTemp.indexOf('.');\r\n    tempDetails.longitude = longTemp.substring(0, dotIndex + 2);\r\n\r\n    var windTemp = tempDetails.windSpeed.toString();\r\n    dotIndex = windTemp.indexOf('.');\r\n    tempDetails.windSpeed = windTemp.substring(0, dotIndex + 2);\r\n\r\n    var humTemp = tempDetails.humidity.toString();\r\n    dotIndex = humTemp.indexOf('.');\r\n    tempDetails.humidity = humTemp.substring(0, dotIndex + 2);\r\n\r\n    this.setState({\r\n        resortDetails: tempDetails\r\n    })})\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  getResortApi(id) {\r\n    return resortService.getResortImageApi(id);\r\n  }\r\n\r\n  getResortRating(id) {\r\n    return resortService.getResortRatings(id);\r\n  }\r\n\r\n  getRatings() {\r\n      return ratingService.getRatings();\r\n  }\r\n\r\n  userHasAdminPrivileges() {\r\n    if(AuthService.getCurrentUser() === null) {\r\n        return false;\r\n    }\r\n    if(AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\")) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if(!this.state.resortImage === null || this.state.resortDetails === null || this.state.resortRating === null || this.state.ratings === null || this.state.resortImage === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid columns=\"equal\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n            <Segment padded>\r\n            <Grid columns=\"equal\">\r\n                <GridRow columns={3} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                        <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                            Powrót\r\n                        </Button>\r\n                    </GridColumn>\r\n                    <GridColumn textAlign=\"center\" style={{padding: 5, paddingBottom: 15}}>\r\n                        <h1 style={{ fontWeight: \"bold\", color: Colors.primary }}>{this.state.resortDetails.resortName}</h1>\r\n                    </GridColumn>\r\n                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                        {(this.userHasAdminPrivileges()) && (\r\n                            <Link\r\n                                style={{ padding: 5 }}\r\n                                to={{\r\n                                    pathname: `../resortForm/${this.state.resortDetails.resortId}`, \r\n                                    state: { resort: this.state.resortDetails }\r\n                                }}\r\n                            >\r\n                                <Button id=\"settings\" style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\">\r\n                                    <Button.Content visible style={{ color: Colors.background }}>Zmień dane ośrodka</Button.Content>\r\n                                </Button>\r\n                            </Link>\r\n                        )}\r\n                    </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={2} stretched style={{padding: 5}}>\r\n                    <GridRow columns={9} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Dane o ośrodku:</h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Odległość od obecnej lokalizacji: {this.state.resortDetails.distance}km</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Długość geograficzna: {this.state.resortDetails.longitude}°</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Szerokość geograficzna: {this.state.resortDetails.latitude}°</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Liczba wyciągów: {this.state.resortDetails.liftCount}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Liczba tras: {this.state.resortDetails.runCount}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            {this.state.resortDetails.nightSkiing === true &&\r\n                                <h4 title=\"Nocne jazdy możliwe\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.resortDetails.nightSkiing} <TiLightbulb tooltip=\"Nocne jazdy możliwe\"/></h4>\r\n                            }\r\n                            {this.state.resortDetails.nightSkiing === false &&\r\n                                <h4 title=\"Brak nocnych jazd\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.resortDetails.nightSkiing} <MdNotInterested tooltip=\"Brak nocnych jazd\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            {this.state.resortDetails.terrainPark === true &&\r\n                                <h4 title=\"Jazda terenowa dostępna\" style={{ fontWeight: \"bold\" }}>Jazdy terenowe: {this.state.resortDetails.terrainPark} <FaMountain tooltip=\"Jazda terenowa dostępna\"/></h4>\r\n                            }\r\n                            {this.state.resortDetails.terrainPark === false &&\r\n                                <h4 title=\"Brak jazd terenowych\" style={{ fontWeight: \"bold\" }}>Jazdy terenowe: {this.state.resortDetails.terrainPark} <MdNotInterested tooltip=\"Brak jazd terenowych\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Region: {this.state.resortDetails.region}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={9} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Warunki pogodowe: </h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Temperatura: {this.state.resortDetails.temperature}℃</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Temperatura odczuwalna: {this.state.resortDetails.sensedTemperature}℃</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Grubość pokrywy śnieżnej: {this.state.resortDetails.snowThickness}cm</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Prędkość wiatru: {this.state.resortDetails.windSpeed}m/s</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Wilgotność: {this.state.resortDetails.humidity}%</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Zachmurzenie: {this.state.resortDetails.clouds}%</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}><h4 style={{ fontWeight: \"bold\", color: \"white\" }}>&nbsp;</h4></GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>Ostatnia aktualizacja: {this.state.lastChange}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={2} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                    <GridRow columns={6} stretched style={{padding: 5}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Oceny: </h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[0].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[1].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[2].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[3].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[4].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={6} stretched style={{padding: 5, paddingLeft: 30}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15}}>\r\n                        {(AuthService.getCurrentUser() !== null) && \r\n                            <Link\r\n                                to={{\r\n                                pathname: `../gradeResort/${this.props.location.state.resortDetails.resortId}`,\r\n                                state: { resortDetails: this.props.location.state.resortDetails },\r\n                                }}\r\n                            >\r\n                                <Button id={this.state.resortId} style={{ backgroundColor: Colors.primary, color: Colors.background, width: 240 }} size=\"small\">\r\n                                    <Button.Content visible style={{ color: Colors.background }}>Oceń ośrodek</Button.Content>\r\n                                </Button>\r\n                            </Link>\r\n                        }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat1}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat2}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat3}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat4}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat5}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                    <GridRow columns={1} stretched style={{padding: 5}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Mapa tras: </h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 5}}>\r\n                            { this.state.resortImageLink === null ? \r\n                            (\r\n                                <h4 style={{ fontWeight: \"bold\" }}>Brak mapy tras dla tego ośrodka</h4>\r\n                            ) : (\r\n                            <Image\r\n                                fluid\r\n                                bordered\r\n                                rounded\r\n                                centered\r\n                                alt=\"Mapa tras\" \r\n                                src={this.state.resortImageLink}/>\r\n                            )}\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                    <GridRow columns={1} stretched textAlign=\"center\" style={{padding: 5}}>\r\n                        <div xmlns=\"http://creativecommons.org/ns#\" about=\"https://skimap.org/\"><a rel=\"cc:attributionURL\" property=\"cc:attributionName\" href=\"https://skimap.org/\">\r\n                        Maps provided by Skimap.org</a> / <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/us/\">CC BY-NC-SA 3.0</a></div>\r\n                    </GridRow>\r\n                </GridRow>\r\n            </Grid>\r\n            </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ResortView);","import React, { Component } from \"react\";\r\nimport ResortService from \"../../services/resort.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form, Checkbox } from \"antd\";\r\nimport { Grid, Segment, Button, Container, GridColumn, GridRow } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaSkiing, FaSnowboarding } from 'react-icons/fa';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ResortForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n        resortName: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        runCount: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        liftCount: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        terrainPark: '',\r\n        nightSkiing: ''\r\n    };\r\n    this.handleEditResort = this.handleEditResort.bind(this);\r\n    this.toggleTerrainPark = this.toggleTerrainPark.bind(this);\r\n    this.toggleNightSkiing = this.toggleNightSkiing.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n        resortName: {\r\n            value: this.props.location.state.resort.resortName,\r\n            validateStatus: ''\r\n        },\r\n        runCount: {\r\n            value: this.props.location.state.resort.runCount,\r\n            validateStatus: ''\r\n        },\r\n        liftCount: {\r\n            value: this.props.location.state.resort.liftCount,\r\n            validateStatus: ''\r\n        },\r\n        terrainPark: this.props.location.state.resort.terrainPark,\r\n        nightSkiing: this.props.location.state.resort.nightSkiing\r\n    });\r\n  }\r\n  \r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  toggleTerrainPark() {\r\n    var actualValue = this.state.terrainPark;\r\n\r\n    this.setState({\r\n        terrainPark: !actualValue\r\n    });\r\n  }\r\n\r\n  toggleNightSkiing() {\r\n    var actualValue = this.state.nightSkiing;\r\n\r\n    this.setState({\r\n        nightSkiing: !actualValue\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  handleEditResort(e) {\r\n    e.preventDefault();\r\n\r\n    var resortObject = {\r\n        resortName: this.state.resortName.value,\r\n        runCount: this.state.runCount.value,\r\n        liftCount: this.state.liftCount.value,\r\n        terrainPark: this.state.terrainPark,\r\n        nightSkiing: this.state.nightSkiing,\r\n        resortId: this.props.location.state.resort.resortId\r\n    }\r\n\r\n  ResortService.editResort(\r\n    resortObject\r\n  )\r\n  .then(\r\n    () => {\r\n      notification.success({\r\n        message: \"Zmieniono dane ośrodka!\",\r\n        description:\r\n            \"Dane ośrodka narciarskiego zostały zmienione!\",\r\n      });\r\n\r\n      this.props.history.push(`../resorts`);\r\n  })\r\n  .catch((error) => {\r\n    notification.error({\r\n        message: \"Nieudana zmiana danych ośrodka!\",\r\n        description:\r\n            \"Dane ośrodka narciarskiego nie zostały zmienione!\",\r\n    });\r\n  });\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.resortName.validateStatus === \"error\" || this.state.runCount.validateStatus === \"error\" || this.state.liftCount.validateStatus === \"error\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isEditionForm === null || this.state.duration === null || this.state.dateTime === null || this.state.description === null || this.state.resorts === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={12} tablet={10} computer={8}>\r\n                <Segment id=\"segmentId\" padded>\r\n                    <Container>\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid.Column>\r\n                                <h2 style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 30 }}>Edycja ośrodka</h2>\r\n                            </Grid.Column>\r\n                            <FormItem\r\n                                style={{ marginBottom: 10 }}\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.resortName.errorMsg}>\r\n                                <label style={{ textAlign: 'left', margin: 0, marginBottom: 5 }}>Nazwa ośrodka narciarskiego</label>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"resortName\"\r\n                                    value={this.state.resortName.value}\r\n                                    placeholder=\"Nazwa ośrodka narciarskiego\"\r\n                                    onChange={(resortName) => {\r\n                                        this.onChange(\r\n                                            resortName,\r\n                                            validation.validateDescription\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                style={{ marginBottom: 10 }}\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.runCount.errorMsg}>\r\n                                <label style={{ textAlign: 'left', margin: 0, marginBottom: 5 }}>Liczba tras zjazdowych</label>\r\n                                <Input\r\n                                    style={{ textAlign: 'right', width: '100%' }}\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"runCount\"\r\n                                    value={this.state.runCount.value}\r\n                                    placeholder=\"Liczba tras zjazdowych  \"\r\n                                    onChange={(runCount) => {\r\n                                        this.onChange(\r\n                                            runCount,\r\n                                            validation.validateNumberGreater\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                style={{ marginBottom: 10 }}\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.liftCount.errorMsg}>\r\n                                <label style={{ textAlign: 'left', margin: 0, marginBottom: 5 }}>Liczba wyciągów</label>\r\n                                <Input\r\n                                    style={{ textAlign: 'right', width: '100%' }}\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"liftCount\"\r\n                                    value={this.state.liftCount.value}\r\n                                    placeholder=\"Liczba wyciągów  \"\r\n                                    onChange={(liftCount) => {\r\n                                        this.onChange(\r\n                                            liftCount,\r\n                                            validation.validateNumberGreater\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <Grid columns=\"equal\" textAlign=\"left\">\r\n                                <GridRow columns={2} verticalAlign=\"middle\" centered stretched style={{paddingBottom: 10, padding: 5, marginTop: 10}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingLeft: 11}}>\r\n                                        <FormItem autoComplete=\"off\">\r\n                                            <Checkbox onChange={this.toggleTerrainPark} name=\"terrainPark\" checked={this.state.terrainPark}>Ski Park <FaSnowboarding/></Checkbox>\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingLeft: 11}}>\r\n                                        <FormItem autoComplete=\"off\">\r\n                                            <Checkbox onChange={this.toggleNightSkiing} name=\"nightSkiing\" checked={this.state.nightSkiing}>Nocne jazdy <FaSkiing/></Checkbox>\r\n                                        </FormItem>  \r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <FormItem style={{ marginBottom: 6 }}>\r\n                                <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                        <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                            Powrót\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                        <Button\r\n                                            disabled={this.isFormInvalid()}\r\n                                            size=\"small\"\r\n                                            onClick={this.handleEditResort}\r\n                                            style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                            Zaktualizuj dane ośrodka\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n        }\r\n    }   \r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ResortService from \"../../services/resort.service\";\r\nimport RatingService from \"../../services/rating.service\";\r\nimport { Form } from \"antd\";\r\nimport { GridColumn, GridRow, Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class GradeResort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.submitGrade = this.submitGrade.bind(this);\r\n\r\n    this.state = {\r\n      category1: 3,\r\n      category2: 3,\r\n      category3: 3,\r\n      category4: 3,\r\n      category5: 3,\r\n      resortDetails: null,\r\n      ratings: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n        resortDetails: this.props.location.state.resortDetails\r\n    });\r\n\r\n    this.getRatings().then(ratings => { this.setState({\r\n        ratings: ratings.data\r\n      })})\r\n  }\r\n\r\n  getRatings() {\r\n    return RatingService.getRatings();\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  submitGrade(e) {\r\n    e.preventDefault();\r\n\r\n    var resortGradeRequest = {\r\n        resortId: this.state.resortDetails.resortId,\r\n        category1: this.state.category1,\r\n        category2: this.state.category2,\r\n        category3: this.state.category3,\r\n        category4: this.state.category4,\r\n        category5: this.state.category5\r\n    }\r\n    \r\n    ResortService.submitGrade(\r\n      resortGradeRequest,\r\n      AuthService.getCurrentUser().username\r\n    )\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Oceniono!\",\r\n          description:\r\n              \"Udana próba ocenienia ośrodka!\",\r\n        });\r\n\r\n        this.props.history.goBack();\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Ocena nieudana!\",\r\n          description:\r\n              \"Nieudana próba ocenienia ośrodka!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.resortDetails === null || this.state.ratings === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={12} tablet={10} computer={9}>\r\n            <Segment padded>\r\n                <Container>\r\n                    <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                        <Grid.Column>\r\n                            <h2 title=\"Rejestracja\" style={{ fontWeight: \"bold\", textAlign: \"center\", marginBottom: 30 }}>Ocena ośrodka {this.state.resortDetails.resortName}</h2>\r\n                        </Grid.Column>\r\n                        <Grid columns=\"equal\">\r\n                            <GridRow columns={2} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                                <GridRow columns={1} stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[0].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[1].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[2].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[3].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[4].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                                <GridRow columns={1} stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category1}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category1': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category1'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category2}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category2': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category2'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category3}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category3': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category3'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category4}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category4': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category4'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category5}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category5': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category5'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </GridRow>\r\n                        </Grid>\r\n                        <FormItem style={{ marginBottom: 1, marginTop: 20 }}>\r\n                            <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                    <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                        Powrót\r\n                                    </Button>\r\n                                </GridColumn>\r\n                                <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        onClick={this.submitGrade}\r\n                                        style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                        Oceń ośrodek\r\n                                    </Button>\r\n                                </GridColumn>\r\n                            </GridRow>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Container>\r\n            </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n        }\r\n    }   \r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form } from \"antd\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class PasswordChange extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      currentUser: '',\r\n      password: {\r\n        value: '',\r\n        validateStatus: \"error\"\r\n      },\r\n      passwordConfirmation: {\r\n        value: '',\r\n        validateStatus: \"error\"\r\n      },\r\n      oldPassword: {\r\n        value: '',\r\n        validateStatus: \"error\"\r\n      }\r\n    };\r\n    \r\n    this.validatePasswordConfirmation = this.validatePasswordConfirmation.bind(this);\r\n    this.validatePassword = this.validatePassword.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleGoBack = this.handleGoBack.bind(this);\r\n  }\r\n\r\n  handleGoBack() {\r\n    this.props.history.push(`../profile`);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const passwordChangeRequest = {\r\n        password: this.state.password.value,\r\n        oldPassword: this.state.oldPassword.value\r\n    };\r\n\r\n    UserService\r\n        .changePassword(passwordChangeRequest, AuthService.getCurrentUser().username)\r\n        .then((response) => {\r\n            notification.success({\r\n                message: \"Hasło zostało zmienione!\",\r\n                description:\r\n                    \"Udana zmiana hasła!\",\r\n            });\r\n\r\n            this.props.history.push(`../profile`);\r\n        })\r\n        .catch((error) => {\r\n            notification.error({\r\n                message: \"Nieudana zmiana hasła!\",\r\n                description:\r\n                    \"Podano niepoprawne hasło!\",\r\n            });\r\n        });\r\n    }\r\n\r\n    onChange (event, validationFunction) {\r\n        const target = event.target;\r\n        const inputValue = target.value;\r\n        const inputName = target.name;\r\n\r\n        this.getCurrentUser(AuthService.getCurrentUser().username).then(user => { this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFunction(inputValue),\r\n            },\r\n        })\r\n\r\n        if(inputName === \"password\") {\r\n            const passwordConfirmation = {\r\n                target: {\r\n                  value: this.state.passwordConfirmation.value,\r\n                  name: \"passwordConfirmation\",\r\n                },\r\n              };\r\n            \r\n            this.onChange(passwordConfirmation, this.validatePasswordConfirmation); \r\n        }\r\n    })\r\n    }\r\n\r\n    isFormInvalid() {\r\n        if(!this.state.password === this.state.passwordConfirmation) {\r\n            return true;\r\n        }\r\n\r\n        if(this.state.password.validateStatus === \"error\" || this.state.oldPassword.validateStatus === \"error\" || this.state.passwordConfirmation.validateStatus === \"error\") {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validatePassword (password) {\r\n        const pattern = new RegExp(\"[0-9]\");\r\n    \r\n        if (password.length < 7) {\r\n            return {\r\n                validateStatus: \"error\",\r\n                errorMsg: `Hasło jest zbyt krótkie, wymagane jest 7 znaków!`,\r\n            };\r\n        } else if (!pattern.test(password)) {\r\n            return {\r\n                validateStatus: \"error\",\r\n                errorMsg: `Hasło powinno zawierać co najmniej jedną cyfrę!`,\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: \"success\",\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    }\r\n\r\n    validatePasswordConfirmation(confirmPassword) {\r\n        if (confirmPassword !== this.state.password.value) {\r\n            return {\r\n              validateStatus: \"error\",\r\n              errorMsg: `Hasła się nie zgadzają!`,\r\n            };\r\n          }\r\n          return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n          };\r\n      }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser(AuthService.getCurrentUser().username).then(user => { this.setState({\r\n      currentUser: user.data\r\n    })});\r\n  }\r\n\r\n  getCurrentUser(username) {\r\n    return UserService.getUserFromUsername(username);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <Grid>\r\n            <Grid.Column mobile={16} tablet={14} computer={12}>\r\n                <Segment padded>\r\n                    <Container text>\r\n                        <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                            <Grid.Column>\r\n                                <h3 style={{ fontWeight: \"bold\", color: Colors.primary, textAlign: \"center\", padding: 20 }}>Zmiana hasła </h3>\r\n                            </Grid.Column>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                validateStatus={this.state.oldPassword.validateStatus}\r\n                                help={this.state.oldPassword.errorMsg}>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"oldPassword\"\r\n                                    type=\"password\"\r\n                                    value={this.state.oldPassword.value}\r\n                                    placeholder=\"Stare hasło\"\r\n                                    onChange={(oldPassword) => {\r\n                                        this.onChange(\r\n                                            oldPassword,\r\n                                            validation.validateSuccess\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                validateStatus={this.state.password.validateStatus}\r\n                                help={this.state.password.errorMsg}>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.password.value}\r\n                                    placeholder=\"Nowe hasło\"\r\n                                    onChange={(password) => {\r\n                                        this.onChange(\r\n                                            password,\r\n                                            this.validatePassword\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                validateStatus={this.state.passwordConfirmation.validateStatus}\r\n                                help={this.state.passwordConfirmation.errorMsg}>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"passwordConfirmation\"\r\n                                    type=\"password\"\r\n                                    value={this.state.passwordConfirmation.value}\r\n                                    placeholder=\"Potwierdź nowe hasło\"\r\n                                    onChange={(passwordConfirmation) => {\r\n                                        this.onChange(\r\n                                            passwordConfirmation,\r\n                                            this.validatePasswordConfirmation\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem style={{ marginBottom: 6 }}>\r\n                                <Button\r\n                                    floated=\"right\"\r\n                                    disabled={this.isFormInvalid()}\r\n                                    size=\"small\"\r\n                                    onClick={this.handleSubmit}\r\n                                    style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                    Zatwierdź\r\n                                </Button>\r\n                                <Button\r\n                                    floated=\"right\"\r\n                                    size=\"small\"\r\n                                    basic\r\n                                    onClick={this.handleGoBack}\r\n                                    style={{ backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginRight: 15 }}>\r\n                                    Powrót\r\n                                </Button>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form, Checkbox } from \"antd\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { FaSkiing, FaSnowboarding } from 'react-icons/fa';\r\nimport { IoIosPerson } from 'react-icons/io';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class UserDataChange extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.handleDataChange = this.handleDataChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.toggleSkiing = this.toggleSkiing.bind(this);\r\n    this.toggleSnowboarding = this.toggleSnowboarding.bind(this);\r\n\r\n    this.state = {\r\n      username: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      email: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      name: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      surname: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      phoneNumber: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      description: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      skiing: false,\r\n      snowboarding: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var usernameObj = {\r\n        value: this.props.location.state.userData.username,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var emailObj = {\r\n        value: this.props.location.state.userData.email,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var nameObj = {\r\n        value: this.props.location.state.userData.name,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var surnameObj = {\r\n        value: this.props.location.state.userData.surname,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var phoneNumberObj = {\r\n        value: this.props.location.state.userData.phoneNumber,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var descriptionObj = {\r\n        value: this.props.location.state.userData.description,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    this.setState(() => ({\r\n        username: usernameObj,\r\n        email: emailObj,\r\n        name: nameObj,\r\n        surname: surnameObj,\r\n        phoneNumber: phoneNumberObj,\r\n        description: descriptionObj,\r\n        skiing: this.props.location.state.userData.skier,\r\n        snowboarding: this.props.location.state.userData.snowboarder\r\n      })\r\n    );\r\n}\r\n\r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  toggleSkiing() {\r\n    var actualValue = this.state.skiing;\r\n\r\n    this.setState({\r\n      skiing: !actualValue\r\n    });\r\n  }\r\n\r\n  toggleSnowboarding() {\r\n    var actualValue = this.state.snowboarding;\r\n\r\n    this.setState({\r\n      snowboarding: !actualValue\r\n    });\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.username.validateStatus === \"error\" || this.state.email.validateStatus === \"error\" || this.state.name.validateStatus === \"error\"\r\n    || this.state.surname.validateStatus === \"error\" || this.state.phoneNumber.validateStatus === \"error\" || this.state.description.validateStatus === \"error\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleDataChange(e) {\r\n    e.preventDefault();\r\n\r\n    var userDataRequest= {\r\n        username: this.state.username.value,\r\n        email: this.state.email.value,\r\n        name: this.state.name.value,\r\n        surname: this.state.surname.value,\r\n        phoneNumber: this.state.phoneNumber.value,\r\n        description: this.state.description.value,\r\n        skiing: this.state.skiing,\r\n        snowboarding: this.state.snowboarding\r\n    }\r\n    \r\n    UserService.updateUserData(\r\n      userDataRequest,\r\n      this.state.username.value\r\n    )\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Zmieniono dane!\",\r\n          description:\r\n              \"Udana zmiana danych użytkownika!\",\r\n        });\r\n\r\n        this.props.history.push(`../profile`);\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Zmiana danych nieudana!\",\r\n          description:\r\n              \"Nieudana zmiana danych użytkownika!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={12} tablet={9} computer={6}>\r\n          <Segment padded>\r\n              <Container>\r\n                  <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                      <Grid.Column>\r\n                          <h4 title=\"Zmiana danych\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20 }}><IoIosPerson size=\"100px\" tooltip=\"Zmiana danych\"/></h4>\r\n                      </Grid.Column>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.username.validateStatus}\r\n                          help={this.state.username.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              disabled\r\n                              name=\"username\"\r\n                              value={this.state.username.value}\r\n                              placeholder=\"Nazwa użytkownika\"\r\n                              onChange={(username) => {\r\n                                  this.onChange(\r\n                                      username,\r\n                                      validation.validateUsername\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.email.validateStatus}\r\n                          help={this.state.email.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"email\"\r\n                              value={this.state.email.value}\r\n                              placeholder=\"Email\"\r\n                              onChange={(email) => {\r\n                                  this.onChange(\r\n                                    email,\r\n                                      validation.validateEmail\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.name.validateStatus}\r\n                          help={this.state.name.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"name\"\r\n                              value={this.state.name.value}\r\n                              placeholder=\"Imię\"\r\n                              onChange={(name) => {\r\n                                  this.onChange(\r\n                                      name,\r\n                                      validation.validateName\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.surname.validateStatus}\r\n                          help={this.state.surname.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"surname\"\r\n                              value={this.state.surname.value}\r\n                              placeholder=\"Nazwisko\"\r\n                              onChange={(surname) => {\r\n                                  this.onChange(\r\n                                      surname,\r\n                                      validation.validateSurname\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.phoneNumber.validateStatus}\r\n                          help={this.state.phoneNumber.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"phoneNumber\"\r\n                              value={this.state.phoneNumber.value}\r\n                              placeholder=\"Numer telefonu\"\r\n                              onChange={(phoneNumber) => {\r\n                                  this.onChange(\r\n                                      phoneNumber,\r\n                                      validation.validatePhoneNumber\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.description.validateStatus}\r\n                          help={this.state.description.errorMsg}>\r\n                          <TextArea\r\n                              autoComplete=\"off\"\r\n                              rows=\"3\"\r\n                              name=\"description\"\r\n                              value={this.state.description.value}\r\n                              placeholder=\"Opis\"\r\n                              onChange={(description) => {\r\n                                  this.onChange(\r\n                                      description,\r\n                                      validation.validateDescription\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <Grid textAlign=\"left\">\r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 6 }}>\r\n                          <Checkbox onChange={this.toggleSnowboarding} name=\"snowboarding\" checked={this.state.snowboarding}>Umiejętność jeżdżenia na snowboardzie <FaSnowboarding/></Checkbox>\r\n                        </FormItem>  \r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 26 }}>\r\n                          <Checkbox onChange={this.toggleSkiing} name=\"skiing\" checked={this.state.skiing}>Umiejętność jeżdżenia na nartach <FaSkiing/></Checkbox>\r\n                        </FormItem>  \r\n                      </Grid>\r\n                      <FormItem style={{ marginBottom: 6 }}>\r\n                          <Button\r\n                              disabled={this.isFormInvalid()}\r\n                              size=\"small\"\r\n                              onClick={this.handleDataChange}\r\n                              style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                              Zmień dane\r\n                          </Button>\r\n                      </FormItem>\r\n                  </Form>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst NEWS_URL = 'https://ski-with-me.herokuapp.com/api/news/';\r\n//const NEWS_URL = 'http://localhost:8080/api/news/';\r\n\r\nclass NewsService {\r\n  getUpcomingTrips(username) {\r\n    return axios.get(NEWS_URL + 'upcoming/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getPastTrips(username) {\r\n    return axios.get(NEWS_URL + 'past/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getUpcomingAcquaintancesTrips(username) {\r\n    return axios.get(NEWS_URL + 'upcomingAcquaintancesTrips/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAcquaintancesTripsReports(username) {\r\n    return axios.get(NEWS_URL + 'acquaintancesTripsReports/' + username, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new NewsService();","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow\r\n} from \"semantic-ui-react\";\r\n\r\nclass TripCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resortName: null,\r\n      departureDate: null,\r\n      departureTime: null,\r\n      arrivalDate: null,\r\n      description: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    var tripDate = this.props.trip.tripDate;\r\n    var daysNumber = this.props.trip.daysNumber;\r\n\r\n    var departureDate = tripDate.toString().substring(0, 10);\r\n    var departureTime = tripDate.toString().substring(11, 16);\r\n\r\n    var tripDateArrival = new Date(departureDate);\r\n    tripDateArrival.setDate(tripDateArrival.getDate() + parseInt(daysNumber));\r\n    let monthArrival = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(tripDateArrival.toString().substring(4, 7)) / 3 + 1;\r\n    if(monthArrival < 10)\r\n      monthArrival = \"0\" + monthArrival.toString();\r\n    var arrivalFormated = tripDateArrival.toString().substring(11, 15) + \"-\" + monthArrival + \"-\" + tripDateArrival.toString().substring(8, 10);\r\n\r\n    this.setState({\r\n      resortName: this.props.trip.resortName,\r\n      departureDate: departureDate,\r\n      departureTime: departureTime,\r\n      arrivalDate: arrivalFormated,\r\n      description: this.props.trip.description\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid columns=\"equal\" style={{ height: 150 }}>\r\n        <GridRow columns={1} stretched style={{ padding: 5 }}>\r\n          <GridRow columns={1} stretched style={{ padding: 5, paddingLeft: 35 }}>\r\n            <GridColumn textAlign=\"center\" width={12} style={{ padding: 3 }}>\r\n              <h4 style={{ fontWeight: \"bold\", width: 430 }}>{this.state.resortName}</h4>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Data wyjazdu: {this.state.departureDate}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Godzina wyjazdu: {this.state.departureTime}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Data powrotu: {this.state.arrivalDate}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\", width: \"90%\" }}>{this.state.description}</h5>\r\n            </GridColumn>\r\n          </GridRow>\r\n        </GridRow>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TripCard);","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow\r\n} from \"semantic-ui-react\";\r\n\r\nclass ReportCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resortName: null,\r\n      daysNumber: null,\r\n      name: null,\r\n      userTripDescription: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      resortName: this.props.report.resortName,\r\n      daysNumber: this.props.report.daysNumber,\r\n      name: this.props.report.name,\r\n      userTripDescription: this.props.report.userTripDescription\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid style={{ height: 150 }}>\r\n        <GridRow columns={1} stretched style={{ padding: 5 }}>\r\n          <GridRow columns={1} stretched style={{ padding: 5, paddingLeft: 35 }}>\r\n            <GridColumn textAlign=\"center\" style={{ padding: 3 }}>\r\n              <h4 style={{ fontWeight: \"bold\", width: 430, marginBottom: 3 }}>{this.state.name} brał(a) udział w {this.state.daysNumber} dniowym wyjeździe w ośrodku</h4>\r\n              <h4 style={{ fontWeight: \"bold\", width: 430, marginTop: 3 }}>{this.state.resortName}</h4>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>\"{this.state.userTripDescription}\"</h5>\r\n            </GridColumn>\r\n          </GridRow>\r\n        </GridRow>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ReportCard);","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport NewsService from \"../../services/news.service\";\r\nimport { Grid, Segment, GridRow, GridColumn } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { Colors } from \"../../constants\";\r\nimport TripCard from \"./trip-card\";\r\nimport ReportCard from \"./report-card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class News extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      username: AuthService.getCurrentUser().username,\r\n      upcomingTrips: null,\r\n      pastTrips: null,\r\n      upcomingAcquaintancesTrips: null,\r\n      acquaintancesTripsReports: null,\r\n      tripReportMax: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUpcomingTrips(AuthService.getCurrentUser().username).then(upcomingTrips => { this.setState({\r\n        upcomingTrips: upcomingTrips.data.content\r\n    })});\r\n    \r\n    this.getPastTrips(AuthService.getCurrentUser().username).then(pastTrips => { this.setState({\r\n        pastTrips: pastTrips.data.content\r\n    })});\r\n\r\n    let maxTripReports = 1;\r\n\r\n    this.getUpcomingAcquaintancesTrips(AuthService.getCurrentUser().username).then(upcomingAcquaintancesTrips => { this.setState({\r\n        upcomingAcquaintancesTrips: upcomingAcquaintancesTrips.data.content\r\n    })\r\n        if(maxTripReports < this.state.upcomingAcquaintancesTrips.length) {\r\n            maxTripReports = this.state.upcomingAcquaintancesTrips.length;\r\n        }\r\n    });\r\n\r\n    this.getAcquaintancesTripsReports(AuthService.getCurrentUser().username).then(acquaintancesTripsReports => { this.setState({\r\n        acquaintancesTripsReports: acquaintancesTripsReports.data.content\r\n    })\r\n        if(maxTripReports < this.state.acquaintancesTripsReports.length) {\r\n            maxTripReports = this.state.acquaintancesTripsReports.length;\r\n        }\r\n    });\r\n\r\n    this.setState({\r\n        tripReportMax: maxTripReports\r\n    })\r\n  }\r\n\r\n  getUpcomingTrips(username) {\r\n    return NewsService.getUpcomingTrips(username);\r\n  }\r\n\r\n  getPastTrips(username) {\r\n    return NewsService.getPastTrips(username);\r\n  }\r\n\r\n  getUpcomingAcquaintancesTrips(username) {\r\n    return NewsService.getUpcomingAcquaintancesTrips(username);\r\n  }\r\n\r\n  getAcquaintancesTripsReports(username) {\r\n    return NewsService.getAcquaintancesTripsReports(username);\r\n  }\r\n\r\n  render() {\r\n    if(this.state.upcomingTrips === null || this.state.pastTrips === null || this.state.upcomingAcquaintancesTrips === null || this.state.acquaintancesTripsReports === null) {\r\n      return <LoadingIndicator/>\r\n    } else {\r\n      return (\r\n        <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={16} tablet={16} computer={14}>\r\n          <Segment padded>\r\n            <Grid textAlign=\"left\">\r\n              <GridRow columns={1} style={{padding: 5}}>\r\n                <GridColumn textAlign=\"center\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                    <h2 style={{ fontWeight: \"bold\", color: Colors.primary }}>Tablica aktualności</h2>\r\n                </GridColumn>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5}}>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Ostatnie wyjazdy:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Zaplanowane wyjazdy:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5}}>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.pastTrips.length === 0 ? (\r\n                            <h3>Brak przeszłych wyjazdów do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            <GridColumn floated=\"left\" stretched width={12} style={{padding: 3}}>\r\n                                {this.state.pastTrips[0] !== undefined && (\r\n                                <Link to={{ pathname: `/tripView/${this.state.pastTrips[0].tripId}`, state: { trip: this.state.pastTrips[0] } }}>\r\n                                    <Segment key={this.state.pastTrips[0].tripId} color=\"red\" inverted tertiary>\r\n                                        <TripCard trip={this.state.pastTrips[0]}/>\r\n                                    </Segment>\r\n                                </Link>\r\n                                )}\r\n                                {this.state.pastTrips[0] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.pastTrips[1] !== undefined && (\r\n                                    <Link to={{ pathname: `/tripView/${this.state.pastTrips[1].tripId}`, state: { trip: this.state.pastTrips[1] } }}>\r\n                                    <Segment key={this.state.pastTrips[1].tripId} color=\"red\" inverted tertiary>\r\n                                        <TripCard trip={this.state.pastTrips[1]}/>\r\n                                    </Segment>\r\n                                </Link>\r\n                                )}\r\n                                {this.state.pastTrips[1] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.pastTrips[2] !== undefined && (\r\n                                    <Link to={{ pathname: `/tripView/${this.state.pastTrips[2].tripId}`, state: { trip: this.state.pastTrips[2] } }}>\r\n                                        <Segment key={this.state.pastTrips[2].tripId} color=\"red\" inverted tertiary>\r\n                                            <TripCard trip={this.state.pastTrips[2]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.pastTrips[2] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.upcomingTrips.length === 0 ? (\r\n                            <h3>Brak nadchodzących wyjazdów do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.upcomingTrips[0] !== undefined && (\r\n                                    <Link id={this.state.upcomingTrips[0].tripId} to={{ pathname: `/tripView/${this.state.upcomingTrips[0].tripId}`, state: { trip: this.state.upcomingTrips[0] } }}>\r\n                                        <Segment key={this.state.upcomingTrips[0].tripId} color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={this.state.upcomingTrips[0]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.upcomingTrips[0] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.upcomingTrips[1] !== undefined && (\r\n                                    <Link id={this.state.upcomingTrips[1].tripId} to={{ pathname: `/tripView/${this.state.upcomingTrips[1].tripId}`, state: { trip: this.state.upcomingTrips[1] } }}>\r\n                                        <Segment key={this.state.upcomingTrips[1].tripId} color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={this.state.upcomingTrips[1]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.upcomingTrips[1] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.upcomingTrips[2] !== undefined && (\r\n                                    <Link id={this.state.upcomingTrips[2].tripId} to={{ pathname: `/tripView/${this.state.upcomingTrips[2].tripId}`, state: { trip: this.state.upcomingTrips[2] } }}>\r\n                                        <Segment key={this.state.upcomingTrips[2].tripId} color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={this.state.upcomingTrips[2]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.upcomingTrips[2] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5, paddingTop: 20}}>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Relacje z wyjazdów Twoich znajomych:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Nadchodzące wyjazdy Twoich znajomych:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5}}>\r\n                <GridRow columns={this.state.acquaintancesTripsReports.length + 1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.acquaintancesTripsReports.length === 0 ? (\r\n                            <h3>Brak relacji z wyjazdów znajomych do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            {this.state.acquaintancesTripsReports\r\n                            .map((report) => (\r\n                                <GridColumn key={report.tripId} floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                    <Link to={{ pathname: `/tripView/${report.tripId}`, state: { trip: report } }}>\r\n                                        <Segment color=\"yellow\" inverted tertiary>\r\n                                            <ReportCard report={report}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                </GridColumn>\r\n                            ))}\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n                <GridRow columns={this.state.upcomingAcquaintancesTrips.length + 1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.upcomingAcquaintancesTrips.length === 0 ? (\r\n                            <h3>Brak nadchodzących wyjazdów znajomych do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            {this.state.upcomingAcquaintancesTrips\r\n                            .map((trip) => (\r\n                                <GridColumn key={trip.tripId} floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                    <Link id={trip.tripId} to={{ pathname: `/tripView/${trip.tripId}`, state: { trip: trip } }}>\r\n                                        <Segment color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={trip}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                </GridColumn>\r\n                            ))}\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n              </GridRow>\r\n            </Grid>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n    }\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Grid, Segment, List, Header, Form, Input, Button, Icon } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { notification } from \"antd\";\r\nimport {Colors} from \"../../constants\";\r\nimport { FaUser } from 'react-icons/fa';\r\n\r\nexport default class Acquaintances extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        document.title = \"SkiWithMe\";\r\n    \r\n        this.state = {\r\n            username: AuthService.getCurrentUser().username,\r\n            acquaintances: [],\r\n            acquaintancesToAdd: null,\r\n            usernameInput: \"\",\r\n            isLoading: true\r\n          };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n            acquaintances: acquaintances.data.userDTO\r\n          })});\r\n\r\n        this.getAcquaintancesToAdd(this.state.username, this.state.usernameInput);\r\n      }\r\n    \r\n      getAcquaintances(username) {\r\n        return UserService.getAcquaintancesFromUsername(username);\r\n      }\r\n\r\n      getAcquaintancesToAdd(username, usernameInput) {\r\n        this.setState({ isLoading: true });\r\n        UserService\r\n          .getAcquaintancesToAddFromUsername(username, usernameInput)\r\n          .then((response) => {\r\n            this.setState({ acquaintancesToAdd: response.data.content });\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      onSubmit = () => {\r\n          this.getAcquaintancesToAdd(AuthService.getCurrentUser().username, this.state.usernameInput);\r\n      }\r\n\r\n      onChangeUsername(event) {\r\n        this.setState({\r\n            usernameInput: event.target.value\r\n        })\r\n      }\r\n\r\n      handleAddAcquaintance(username) {\r\n        UserService\r\n        .addAcquaintance(AuthService.getCurrentUser().username, username)\r\n        .then((response) => {\r\n            notification.success({\r\n                message: \"Znajomy został dodany!\",\r\n                description:\r\n                    \"Dodano znajomego o loginie \" + username + \"!\",\r\n            });\r\n        })\r\n        .then((response) => {\r\n            this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n                acquaintances: acquaintances.data.userDTO\r\n              })});\r\n\r\n              this.getAcquaintancesToAdd(this.state.username, this.state.usernameInput);\r\n        })\r\n        .catch((error) => {\r\n            notification.error({\r\n                message: \"Nie udało się dodać znajomego!\",\r\n                description:\r\n                    \"Użytkownik o loginie \" + username + \" nie został dodany do znajomych!\",\r\n            });\r\n        });\r\n      }\r\n\r\n      handleDeleteAcquaintance(username) {\r\n        UserService\r\n        .deleteAcquaintance(AuthService.getCurrentUser().username, username)\r\n        .then((response) => {\r\n            notification.success({\r\n                message: \"Znajomy został usunięty!\",\r\n                description:\r\n                    \"Usunięto znajomego o loginie \" + username + \"!\",\r\n            });\r\n        })\r\n        .then((response) => {\r\n            this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n                acquaintances: acquaintances.data.userDTO\r\n              })});\r\n\r\n              this.getAcquaintancesToAdd(this.state.username, this.state.usernameInput);\r\n        })\r\n        .catch((error) => {\r\n            notification.error({\r\n                message: \"Nie udało się usunąć znajomego!\",\r\n                description:\r\n                    \"Użytkownik o loginie \" + username + \" nie został usunięty ze znajomych!\",\r\n            });\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <Grid columns=\"equal\" textAlign=\"center\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n              <Segment padded>\r\n                <Header as=\"h2\" style={{color: Colors.primary, paddingBottom: 25}}>\r\n                    Znajomi\r\n                </Header>\r\n                <Grid columns=\"equal\" textAlign=\"center\">\r\n                    <Grid.Row stretched columns={2}>\r\n                        <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" >\r\n                            <Header as=\"h2\">\r\n                                Lista znajomych\r\n                            </Header>\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" >\r\n                            <Header as=\"h2\">\r\n                                Szukaj znajomych\r\n                            </Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row stretched columns={2}>\r\n                        <Grid.Column>\r\n                            <React.Fragment>\r\n                                <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                                    {this.state.acquaintances.length === 0 ? (\r\n                                            <h3>Brak znajomych do wyświetlenia</h3>\r\n                                        ) : (\r\n                                        this.state.acquaintances.map((user) => (\r\n                                            <Segment key={user.username}>\r\n                                                <Grid textAlign=\"center\">\r\n                                                    <Grid.Row stretched columns={3}>\r\n                                                        <Grid.Column style={{ marginRight: 10, marginLeft: 10 }} width=\"2\" floated=\"left\">\r\n                                                            <FaUser size=\"30px\"/>\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                                            <h3 style={{ margin: 5, marginBottom: 0 }}>{user.username}</h3>\r\n                                                            <h4 style={{ margin: 5 }}>{user.email}</h4>\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width=\"5\" floated=\"right\" style={{ height: 50 }}>\r\n                                                            <Button\r\n                                                                size=\"small\"\r\n                                                                onClick={() => this.handleDeleteAcquaintance(user.username)}\r\n                                                                style={{ backgroundColor: '#ff5f57', color: Colors.background }}>\r\n                                                                Usuń ze znajomych\r\n                                                            </Button>\r\n                                                        </Grid.Column>\r\n                                                    </Grid.Row>\r\n                                                </Grid>\r\n                                            </Segment>\r\n                                        )))\r\n                                    }\r\n                                </List>\r\n                            </React.Fragment>\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" >\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <Input\r\n                                        placeholder=\"Wpisz nazwę użytkownika\"\r\n                                        onChange={(user) => {\r\n                                            this.onChangeUsername(user);\r\n                                        }}\r\n                                        name=\"usernameInput\" />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Button\r\n                                    fluid\r\n                                    animated\r\n                                    style={{backgroundColor: Colors.primary}}\r\n                                    onClick={this.onSubmit}\r\n                                    loading={this.isLoading}>\r\n                                        <Button.Content visible style={{color: Colors.background}}>Wyszukaj</Button.Content>\r\n                                        <Button.Content hidden>\r\n                                            <Icon name=\"search\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </Form.Field>\r\n                            </Form>\r\n                            {this.state.isLoading === true ? (\r\n                            <LoadingIndicator />\r\n                            ) : (\r\n                            <React.Fragment>\r\n                                <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                                {this.state.acquaintancesToAdd.length === 0 ? (\r\n                                    <h3>Brak użytkowników o loginie z podanym ciągiem znaków</h3>\r\n                                ) : (\r\n                                this.state.acquaintancesToAdd.map((user) => (\r\n                                    <Segment key={user.username}>\r\n                                        <Grid textAlign=\"center\">\r\n                                            <Grid.Row stretched columns={3}>\r\n                                                <Grid.Column style={{ marginRight: 10, marginLeft: 10 }} width=\"2\" floated=\"left\">\r\n                                                    <FaUser size=\"30px\"/>\r\n                                                </Grid.Column>\r\n                                                <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                                    <h3 style={{ margin: 5, marginBottom: 0 }}>{user.username}</h3>\r\n                                                    <h4 style={{ margin: 5 }}>{user.email}</h4>\r\n                                                </Grid.Column>\r\n                                                <Grid.Column width=\"5\" floated=\"right\" style={{ height: 50 }}>\r\n                                                    <Button\r\n                                                        size=\"small\"\r\n                                                        onClick={() => this.handleAddAcquaintance(user.username)}\r\n                                                        style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                                        Dodaj do znajomych\r\n                                                    </Button>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Segment>\r\n                                )))\r\n                                }\r\n                                </List>\r\n                            </React.Fragment>\r\n                            )}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        );\r\n      }\r\n}","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\nimport HelloPage from \"./components/logging/hello.page.component\";\r\nimport Login from \"./components/logging/login.component\";\r\nimport Register from \"./components/logging/register.component\";\r\nimport Profile from \"./components/userProfile/profile.component\";\r\nimport SearchResorts from \"./components/searchResorts/search-resorts.component\";\r\nimport TripView from \"./components/tripView/trip-view\";\r\nimport TripForm from \"./components/tripView/trip-form\";\r\nimport ResortView from \"./components/resortView/resort-view\";\r\nimport ResortForm from \"./components/resortView/resort-form\";\r\nimport GradeResort from \"./components/resortView/grade-resort\";\r\nimport PasswordChange from \"./components/userProfile/password.change.component\";\r\nimport UserDataChange from \"./components/userProfile/user.data.change.component\";\r\nimport News from \"./components/news/news.component\";\r\nimport Acquaintances from \"./components/acquaintances/acquaintances.component\";\r\nimport {Colors} from \"./constants\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\r\n      });\r\n    }\r\n\r\n    this.setState(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n    const size = 18;\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div style={{backgroundColor: Colors.background}}>\r\n          <nav className=\"navbar navbar-expand navbar-dark\" style={{backgroundColor: Colors.primary}}>\r\n            <Link to={\"/resorts\"} className=\"navbar-brand\" style={{ fontSize: 24, fontWeight: \"bold\"}}>\r\n              SkiWithMe\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-news\" to={\"/news\"} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    Aktualności\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              <li className=\"nav-item\">\r\n                <Link id=\"nav-resort\" to={\"/resorts\"} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                  Szukaj ośrodka\r\n                </Link>\r\n              </li>\r\n\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/acquaintances/\" + this.state.currentUser.username} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    Znajomi\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              \r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-new-trip\" to={\"/tripForm/\"} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    Nowy wyjazd\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-user\" to={\"/profile\"} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    {currentUser.username}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-user-logout\" to={\"/login\"} onClick={this.logOut} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    Wyloguj się\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    Zaloguj się\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\" style={{ fontSize: size, fontWeight: \"bold\"}}>\r\n                    Zarejestruj się\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\" style={{backgroundColor: Colors.background}}>\r\n            <Switch>\r\n              <Route path=\"/news\" component={News} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/profile\" component={Profile} />\r\n              <Route path=\"/passwordChange/:username\" component={PasswordChange} />\r\n              <Route path=\"/userDataChange/:username\" component={UserDataChange} />\r\n              <Route path=\"/acquaintances/:username\" component={Acquaintances} />\r\n              <Route path=\"/resorts\" component={SearchResorts} />\r\n              <Route path=\"/resortView/:resortId\" component={ResortView} />\r\n              <Route path=\"/gradeResort/:resortId\" component={GradeResort} />\r\n              <Route path=\"/tripView/:tripId\" component={TripView} />\r\n              <Route path=\"/tripForm/:tripId\" component={TripForm} />\r\n              <Route path=\"/tripForm\" component={TripForm} />\r\n              <Route path=\"/resortForm/:resortId\" component={ResortForm} />\r\n              <Route path=\"/\" component={HelloPage} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App/>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}