{"version":3,"sources":["services/auth.service.js","common/validation-rules.js","constants.js","components/logging/login.component.js","components/logging/register.component.js","services/auth-header.js","services/user.service.js","common/LoadingIndicator.js","components/userProfile/user.info.component.js","services/resort.service.js","components/userProfile/profile.component.js","components/searchResorts/filter-bar.js","components/searchResorts/resort-card.js","components/searchResorts/search-resorts.component.js","services/trip.service.js","components/tripView/trip-view.js","components/tripView/trip-form.js","services/rating.service.js","components/resortView/resort-view.js","components/resortView/resort-form.js","components/resortView/grade-resort.js","components/userProfile/password.change.component.js","components/userProfile/user.data.change.component.js","services/news.service.js","components/news/trip-card.js","components/news/report-card.js","components/news/news.component.js","components/acquaintances/acquaintances.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","name","surname","phoneNumber","description","skiing","snowboarding","parse","getItem","validation","pattern","RegExp","length","validateStatus","errorMsg","test","request","input","number","Colors","FormItem","Form","Item","Login","props","document","title","handleLogin","bind","onChange","state","value","loading","event","validationFunction","target","inputValue","inputName","this","setState","e","preventDefault","AuthService","login","notification","success","message","history","push","window","location","reload","catch","error","Grid","textAlign","Column","mobile","tablet","computer","Segment","padded","Container","onSubmit","autoComplete","style","fontWeight","paddingBottom","size","tooltip","hasFeedback","help","placeholder","type","marginBottom","Button","disabled","isFormInvalid","onClick","backgroundColor","color","Component","Register","handleRegister","toggleSkiing","toggleSnowboarding","successful","actualValue","register","rows","checked","authHeader","user","Authorization","USER_URL","get","headers","usernameInput","tripId","passwordChangeRequest","userDataRequest","usernameAccept","LoadingIndicator","Loader","active","inline","UserInfo","currentUser","uppercase","resortImage","handleSendEmail","toUpperCase","UserService","sendEmail","getCurrentUser","columns","GridRow","stretched","padding","paddingLeft","floated","verticalAlign","paddingTop","marginLeft","GridColumn","width","to","pathname","userData","basic","Content","visible","marginTop","snowboarder","skier","activePage","filtering","sorting","latitude","longitude","id","responseType","resortGradeRequest","resortObject","put","Profile","achievements","acquaintances","acquaintanceNumber","trips","getAchievements","getAcquaintances","userDTO","countAcquaintances","getTrips","deleteAcquaintance","getUserFromUsername","getAchievementsFromUsername","getAcquaintancesFromUsername","getTripsFromUsername","resortService","getResortImage","userImage","Fragment","map","margin","key","Row","height","handleDeleteAcquaintance","trip","resortName","achievement","achievementId","achievementName","achievementDescription","itemsOnPageOptions","text","sortingOptions","filteringOptions","FilterBar","handleChange","resort","hasOwnProperty","isLoading","listOfResorts","itemsOnPage","Header","as","Field","Dropdown","compact","selectOnNavigation","selection","itemsCountPerPage","options","onChangeItemsOnPage","Input","onChangeName","onChangeFiltering","onChangeSorting","fluid","animated","hidden","Icon","Group","widths","ResortCard","clouds","humidity","lastChange","liftCount","nightSkiing","region","resortId","runCount","sensedTemperature","snowThickness","temperature","terrainPark","windSpeed","distance","temp","resortDetails","toString","dotIndex","indexOf","temperatureRounded","substring","senTemp","sensedTemperatureRounded","disTemp","distanceRounded","centered","withRouter","SearchResorts","handlePaginationChange","getAllResorts","handleChangeItemsOnPage","handleChangeFiltering","handleChangeSorting","handleChangeName","handleSubmit","totalPages","totalItemsCount","navigator","geolocation","getCurrentPosition","position","coords","console","log","itemsOnSite","getResorts","totalElements","updatedResults","content","results","Pagination","boundaryRange","onPageChange","siblingRange","List","divided","isAdmin","tripObject","tripIdObject","TripView","departureDate","departureTime","arrivalDate","participants","isTripActive","getResortFromTripId","getParticipants","getTripActivity","tripDate","daysNumber","tripDateArrival","Date","setDate","getDate","parseInt","monthArrival","arrivalFormated","tripService","userService","goBack","i","quitTrip","cancelTrip","joinTrip","paddingRight","currentUserParticipates","isActive","isEarlierThanNow","marginRight","fontStyle","TripForm","isEditionForm","duration","dateTime","chosenResortId","resorts","handleSubmitAdd","handleSubmitEdit","undefined","match","params","getClosestResorts","ResortService","resortInList","TripService","createTrip","updateTrip","Select","onChangeSelect","MenuItem","FormHelperText","startMode","initialDate","clearable","dateFormat","iconPosition","ResortView","resortRating","resortImageLink","ratings","avgRat1","avgRat2","avgRat3","avgRat4","avgRat5","lastChangeCustom","getRatings","getResortApi","ski_maps","media","original","url","getResortRating","rat1","rat2","rat3","rat4","rat5","counter1","counter2","counter3","counter4","counter5","sum1","sum2","sum3","sum4","sum5","resortArr","ratingCategoryId","grade","tempDetails","latTemp","longTemp","windTemp","humTemp","getResortImageApi","getResortRatings","ratingService","roles","includes","userHasAdminPrivileges","ratingCategoryName","rating","starRatedColor","numberOfStars","starSpacing","starDimension","Image","bordered","rounded","src","xmlns","about","rel","property","href","ResortForm","handleEditResort","toggleTerrainPark","toggleNightSkiing","editResort","GradeResort","submitGrade","category1","category2","category3","category4","category5","RatingService","starHoverColor","changeRating","PasswordChange","passwordConfirmation","oldPassword","validatePasswordConfirmation","validatePassword","handleGoBack","changePassword","confirmPassword","UserDataChange","handleDataChange","usernameObj","emailObj","nameObj","surnameObj","phoneNumberObj","descriptionObj","updateUserData","NEWS_URL","TripCard","ReportCard","userTripDescription","report","News","upcomingTrips","pastTrips","upcomingAcquaintancesTrips","acquaintancesTripsReports","tripReportMax","getUpcomingTrips","getPastTrips","maxTripReports","getUpcomingAcquaintancesTrips","getAcquaintancesTripsReports","NewsService","inverted","tertiary","Acquaintances","getAcquaintancesToAdd","acquaintancesToAdd","getAcquaintancesToAddFromUsername","addAcquaintance","onChangeUsername","handleAddAcquaintance","App","logOut","showAdminBoard","logout","className","exact","path","component","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b45b535.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://ski-with-me.herokuapp.com/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password, name, surname, phoneNumber, description, skiing, snowboarding) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      name,\r\n      surname,\r\n      phoneNumber,\r\n      description,\r\n      skiing,\r\n      snowboarding\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","export const validation = {\r\n    validatePassword,\r\n    validateSuccess,\r\n    validateNotBlank,\r\n    validateUsername,\r\n    validateName,\r\n    validateSurname,\r\n    validateEmail,\r\n    validatePhoneNumber,\r\n    validateDescription,\r\n    validateNumberGreater\r\n};\r\n\r\nfunction validatePhoneNumber (phoneNumber) {\r\n    const PHONEPL_REGEX = RegExp(\r\n      \"(?:1[2-8]|2[2-69]|3[2-49]|4[1-68]|5[0-9]|6[0-35-9]|[7-8][1-9]|9[145])\\\\d{7}\"\r\n    );\r\n  \r\n    if (!PHONEPL_REGEX.test(phoneNumber)) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: \"Niepoprawny format numeru telefonu!\",\r\n      };\r\n    } else if (phoneNumber.length > 30) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Długość numer telefonu jest zbyt długa - może mieć maksymalnie 30 znaków!`,\r\n      };\r\n    } else {\r\n      return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null,\r\n      };\r\n    }\r\n  }\r\n\r\nfunction validateDescription(description) {\r\n    if (description.length > 255) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Opis jest zbyt długi - może mieć maksymalnie 255 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateNumberGreater(number) {\r\n    if (number < 0) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Wprowadzona wartość nie jest liczbą większą lub równą 0!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateSurname(surname) {\r\n    if (surname.length > 60) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Nazwisko jest zbyt długie - może mieć maksymalnie 60 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateName(name) {\r\n    if (name.length > 60) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Imię jest zbyt długie - może mieć maksymalnie 60 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateUsername(username) {\r\n    if (username.length < 7) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Nazwa użytkownika jest zbyt krótka, wymagane jest 7 znaków!`\r\n        };\r\n    } else if (username.length > 60) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Nazwa użytkownika jest zbyt długa - może mieć maksymalnie 60 znaków!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateEmail (email) {\r\n    if (!email) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: \"Email nie może być pusty!\"\r\n      };\r\n    }\r\n  \r\n    const EMAIL_REGEX = RegExp(\r\n      /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    if (!EMAIL_REGEX.test(email)) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: \"Niepoprawny format emaila!\"\r\n      };\r\n    }\r\n  \r\n    if (email.length > 60) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Email jest zbyt długi - może mieć maksymalnie 60 znaków!`\r\n      };\r\n    }\r\n  \r\n    return {\r\n      validateStatus: \"success\",\r\n      errorMsg: null\r\n    };\r\n}\r\n\r\nfunction validatePassword(password) {\r\n    const pattern = new RegExp(\"[0-9]\");\r\n\r\n    if (password.length < 7) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Hasło jest zbyt krótkie, wymagane jest 7 znaków!`\r\n        };\r\n    } else if (!pattern.test(password)) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Hasło powinno zawierać co najmniej jedną cyfrę!`\r\n        };\r\n    } else {\r\n        return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null\r\n        };\r\n    }\r\n}\r\n\r\nfunction validateNotBlank(input) {\r\n    if (input.length < 1) {\r\n        return {\r\n            validateStatus: \"error\",\r\n            errorMsg: `Pole nie powinno być puste!`\r\n        };\r\n    } else {\r\n        return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n    }\r\n}\r\n\r\nfunction validateSuccess(request) {\r\n    return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n}"," export const Colors = {\r\n    background: '#FFFFFF',\r\n    primary: '#608FFF',\r\n    secondary: '#B3F3FD'\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form } from \"antd\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { IoIosPerson } from 'react-icons/io';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n\r\n    this.state = {\r\n      username: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      password: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.password.value === \"\" || this.state.username.value === \"\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    AuthService.login(this.state.username.value, this.state.password.value)\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Zalogowano!\",\r\n          description:\r\n              \"Udana próba logowania!\",\r\n        });\r\n\r\n        this.props.history.push(\"/profile\");\r\n        window.location.reload();\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Logowanie nieudane!\",\r\n          description:\r\n              \"Nieudana próba logowania!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={12} tablet={9} computer={6}>\r\n          <Segment padded>\r\n              <Container>\r\n                  <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                      <Grid.Column>\r\n                          {/* <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                            alt=\"start-img\" style={{ textAlign: \"center\", padding: 20, paddingBottom: 30 }}/> */}\r\n                          <h4 title=\"Logowanie\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20 }}><IoIosPerson size=\"100px\" tooltip=\"Logowanie\"/></h4>\r\n                      </Grid.Column>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.username.validateStatus}\r\n                          help={this.state.username.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"username\"\r\n                              value={this.state.username.value}\r\n                              placeholder=\"Nazwa użytkownika\"\r\n                              onChange={(username) => {\r\n                                  this.onChange(\r\n                                      username,\r\n                                      validation.validateNotBlank\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.password.validateStatus}\r\n                          help={this.state.password.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"password\"\r\n                              type=\"password\"\r\n                              value={this.state.password.value}\r\n                              placeholder=\"Hasło\"\r\n                              onChange={(password) => {\r\n                                  this.onChange(\r\n                                      password,\r\n                                      validation.validateNotBlank\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem style={{ marginBottom: 6 }}>\r\n                          <Button\r\n                              disabled={this.isFormInvalid()}\r\n                              size=\"small\"\r\n                              onClick={this.handleLogin}\r\n                              style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                              Zaloguj\r\n                          </Button>\r\n                      </FormItem>\r\n                  </Form>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form, Checkbox } from \"antd\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { FaSkiing, FaSnowboarding } from 'react-icons/fa';\r\nimport { IoIosPersonAdd } from 'react-icons/io';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.toggleSkiing = this.toggleSkiing.bind(this);\r\n    this.toggleSnowboarding = this.toggleSnowboarding.bind(this);\r\n\r\n    this.state = {\r\n      username: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      email: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      password: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      name: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      surname: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      phoneNumber: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      description: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      skiing: false,\r\n      snowboarding: false,\r\n      successful: false\r\n    };\r\n  }\r\n\r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  toggleSkiing() {\r\n    var actualValue = this.state.skiing;\r\n\r\n    this.setState({\r\n      skiing: !actualValue\r\n    });\r\n  }\r\n\r\n  toggleSnowboarding() {\r\n    var actualValue = this.state.snowboarding;\r\n\r\n    this.setState({\r\n      snowboarding: !actualValue\r\n    });\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.password.validateStatus === \"error\" || this.state.username.validateStatus === \"error\" || this.state.email.validateStatus === \"error\" || this.state.name.validateStatus === \"error\"\r\n    || this.state.surname.validateStatus === \"error\" || this.state.phoneNumber.validateStatus === \"error\" || this.state.description.validateStatus === \"error\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false\r\n    });\r\n    \r\n    AuthService.register(\r\n      this.state.username.value,\r\n      this.state.email.value,\r\n      this.state.password.value,\r\n      this.state.name.value,\r\n      this.state.surname.value,\r\n      this.state.phoneNumber.value,\r\n      this.state.description.value,\r\n      this.state.skiing,\r\n      this.state.snowboarding\r\n    )\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Zarejestrowano!\",\r\n          description:\r\n              \"Udana próba rejestracji, spróbuj się teraz zalogować!\",\r\n        });\r\n\r\n        this.props.history.push(\"/login\");\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Rejestracja nieudana!\",\r\n          description:\r\n              \"Nieudana próba rejestracji!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={12} tablet={9} computer={6}>\r\n          <Segment padded>\r\n              <Container>\r\n                  <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                      <Grid.Column>\r\n                          <h4 title=\"Rejestracja\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20 }}><IoIosPersonAdd size=\"100px\" tooltip=\"Rejestracja\"/></h4>\r\n                      </Grid.Column>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.username.validateStatus}\r\n                          help={this.state.username.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"username\"\r\n                              value={this.state.username.value}\r\n                              placeholder=\"Nazwa użytkownika\"\r\n                              onChange={(username) => {\r\n                                  this.onChange(\r\n                                      username,\r\n                                      validation.validateUsername\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.password.validateStatus}\r\n                          help={this.state.password.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"password\"\r\n                              type=\"password\"\r\n                              value={this.state.password.value}\r\n                              placeholder=\"Hasło\"\r\n                              onChange={(password) => {\r\n                                  this.onChange(\r\n                                      password,\r\n                                      validation.validatePassword\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.email.validateStatus}\r\n                          help={this.state.email.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"email\"\r\n                              value={this.state.email.value}\r\n                              placeholder=\"Email\"\r\n                              onChange={(email) => {\r\n                                  this.onChange(\r\n                                    email,\r\n                                      validation.validateEmail\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.name.validateStatus}\r\n                          help={this.state.name.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"name\"\r\n                              value={this.state.name.value}\r\n                              placeholder=\"Imię\"\r\n                              onChange={(name) => {\r\n                                  this.onChange(\r\n                                      name,\r\n                                      validation.validateName\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.surname.validateStatus}\r\n                          help={this.state.surname.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"surname\"\r\n                              value={this.state.surname.value}\r\n                              placeholder=\"Nazwisko\"\r\n                              onChange={(surname) => {\r\n                                  this.onChange(\r\n                                      surname,\r\n                                      validation.validateSurname\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.phoneNumber.validateStatus}\r\n                          help={this.state.phoneNumber.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"phoneNumber\"\r\n                              value={this.state.phoneNumber.value}\r\n                              placeholder=\"Numer telefonu\"\r\n                              onChange={(phoneNumber) => {\r\n                                  this.onChange(\r\n                                      phoneNumber,\r\n                                      validation.validatePhoneNumber\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.description.validateStatus}\r\n                          help={this.state.description.errorMsg}>\r\n                          <TextArea\r\n                              autoComplete=\"off\"\r\n                              rows=\"3\"\r\n                              name=\"description\"\r\n                              value={this.state.description.value}\r\n                              placeholder=\"Opis\"\r\n                              onChange={(description) => {\r\n                                  this.onChange(\r\n                                      description,\r\n                                      validation.validateDescription\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <Grid textAlign=\"left\">\r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 6 }}>\r\n                          <Checkbox onChange={this.toggleSnowboarding} name=\"snowboarding\" checked={this.state.snowboarding}>Umiejętność jeżdżenia na snowboardzie <FaSnowboarding/></Checkbox>\r\n                        </FormItem>  \r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 26 }}>\r\n                          <Checkbox onChange={this.toggleSkiing} name=\"skiing\" checked={this.state.skiing}>Umiejętność jeżdżenia na nartach <FaSkiing/></Checkbox>\r\n                        </FormItem>  \r\n                      </Grid>\r\n                      <FormItem style={{ marginBottom: 6 }}>\r\n                          <Button\r\n                              disabled={this.isFormInvalid()}\r\n                              size=\"small\"\r\n                              onClick={this.handleRegister}\r\n                              style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                              Zarejestruj się\r\n                          </Button>\r\n                      </FormItem>\r\n                  </Form>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { Authorization: 'Bearer ' + user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/test/';\r\nconst USER_URL = 'https://ski-with-me.herokuapp.com/api/user/';\r\n\r\nclass UserService {\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  getUserFromUsername(username) {\r\n    return axios.get(USER_URL + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAchievementsFromUsername(username) {\r\n    return axios.get(USER_URL + 'achievements/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAcquaintancesFromUsername(username) {\r\n    return axios.get(USER_URL + 'acquaintances/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAcquaintancesToAddFromUsername(username, usernameInput) {\r\n    return axios.get(USER_URL + 'acquaintancesToAdd?username=' + username + \"&usernameInput=\" + usernameInput, { headers: authHeader() });\r\n  }\r\n\r\n  getTripsFromUsername(username) {\r\n    return axios.get(USER_URL + 'trips/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getParticipants(tripId) {\r\n    return axios.get(USER_URL + 'getParticipants/' + tripId, { headers: authHeader() });\r\n  }\r\n\r\n  changePassword(passwordChangeRequest, username) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'changePassword/' + username, JSON.stringify(passwordChangeRequest), { headers: headers });\r\n  }\r\n\r\n  sendEmail(username) {\r\n    return axios.post(USER_URL + 'sendPasswordEmail/' + username, JSON.stringify(), { headers: authHeader() });\r\n  }\r\n\r\n  updateUserData(userDataRequest, username) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'updateUserData/' + username, JSON.stringify(userDataRequest), { headers: headers });\r\n  }\r\n\r\n  addAcquaintance(username, usernameAccept) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'addAcquaintance/' + username, usernameAccept, { headers: headers });\r\n  }\r\n\r\n  deleteAcquaintance(username, usernameAccept) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(USER_URL + 'deleteAcquaintance/' + username, usernameAccept, { headers: headers });\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nexport default function LoadingIndicator () {\r\n\r\n  return (\r\n    <Loader active inline=\"centered\" size=\"massive\" />\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Grid, GridRow, GridColumn, Button } from \"semantic-ui-react\";\r\nimport { FaSnowboarding, FaSkiing } from 'react-icons/fa';\r\nimport { MdNotInterested } from 'react-icons/md';\r\nimport { Colors } from \"../../constants\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { notification } from \"antd\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaUser } from 'react-icons/fa';\r\n\r\nexport default class UserInfo extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n        \r\n      document.title = \"SkiWithMe\";\r\n  \r\n      this.state = {\r\n        currentUser: \"\",\r\n        uppercase: \"\",\r\n        resortImage: null\r\n      };\r\n\r\n      this.handleSendEmail = this.handleSendEmail.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => ({\r\n            currentUser: this.props.currentUser,\r\n            resortImage: this.props.resortImage\r\n          }), () => {\r\n              var username = this.state.currentUser.username;\r\n              var uppercase = username.toUpperCase();\r\n              this.setState(() => ({\r\n                uppercase: uppercase\r\n              }))\r\n          }\r\n        );\r\n    }\r\n\r\n    handleSendEmail() {\r\n        UserService\r\n            .sendEmail(AuthService.getCurrentUser().username)\r\n            .then(() => {\r\n                notification.success({\r\n                    message: \"Wysłano emaila!\",\r\n                    description:\r\n                        \"Wysłanie email z nowym hasłem zakończone powodzeniem!\",\r\n                });\r\n            })\r\n            .catch(() => {\r\n                notification.error({\r\n                    message: \"Nieudana wysyłka emaila!\",\r\n                    description:\r\n                        \"Wysłanie email z nowym hasłem zakończone niepowodzeniem!\",\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.resortImage === null) {\r\n            return <LoadingIndicator/>\r\n        } else {\r\n        return (\r\n            <Grid columns=\"equal\">\r\n                <GridRow columns={10} stretched style={{padding: 5}}>\r\n                    <GridRow columns={10} style={{padding: 5, paddingLeft: 50}}>\r\n                        <Grid.Column floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{paddingTop: 7, marginLeft: 20}}>\r\n                            <FaUser size=\"100px\"/>\r\n                        </Grid.Column>\r\n                    </GridRow>\r\n                    <GridRow verticalAlign=\"middle\" columns={10} style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h3 style={{ fontWeight: \"bold\", color: Colors.primary }}>{this.state.uppercase}</h3>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={10} style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"right\" textAlign=\"left\" style={{padding: 3}}>\r\n                            <Link style={{ width: 160 }} to={{ pathname: `/userDataChange/${this.state.currentUser.username}`,\r\n                                state: { userData: this.state.currentUser }, }}>\r\n                                <Button \r\n                                    floated=\"right\"\r\n                                    size=\"small\"\r\n                                    basic\r\n                                    style={{ width: 155, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }}>\r\n                                    Zmień dane\r\n                                </Button>\r\n                            </Link>\r\n                            <Link style={{width: 160}} to={\"/passwordChange/\" + this.state.currentUser.username}>\r\n                                <Button floated=\"right\" style={{backgroundColor: Colors.primary, width: 155}} size=\"small\">\r\n                                    <Button.Content visible style={{color: Colors.background}}>Zmień hasło</Button.Content>\r\n                                </Button>\r\n                            </Link>\r\n                            <Button \r\n                                floated=\"right\"\r\n                                size=\"small\"\r\n                                basic\r\n                                onClick={this.handleSendEmail}\r\n                                style={{ width: 155, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n                                Zapomniałem hasła\r\n                            </Button>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={10} stretched style={{padding: 5}}>\r\n                    <GridRow columns={3} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Imię i nazwisko: {this.props.currentUser.name} {this.state.currentUser.surname}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Numer telefonu: {this.state.currentUser.phoneNumber}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Email: {this.state.currentUser.email}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={3} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                            {this.state.currentUser.snowboarder === true &&\r\n                                <h4 title=\"Umiejętność jazdy na snowboardzie\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na snowboardzie: {this.state.currentUser.snowboarder} <FaSnowboarding tooltip=\"Umiejętność jazdy na snowboardzie\"/></h4>\r\n                            }\r\n                            {this.state.currentUser.snowboarder === false &&\r\n                                <h4 title=\"Brak umiejętności jazdy na snowboardzie\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na snowboardzie: {this.state.currentUser.snowboarder} <MdNotInterested tooltip=\"Brak umiejętności jazdy na snowboardzie\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            {this.state.currentUser.skier === true &&\r\n                                <h4 title=\"Umiejętność jazdy na nartach\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na nartach: {this.state.currentUser.skier} <FaSkiing tooltip=\"Umiejętność jazdy na nartach\"/></h4>\r\n                            }\r\n                            {this.state.currentUser.skier === false &&\r\n                                <h4 title=\"Brak umiejętności jazdy na nartach\" style={{ fontWeight: \"bold\" }}>Umiejętność jazdy na nartach: {this.state.currentUser.skier} <MdNotInterested tooltip=\"Brak umiejętności jazdy na nartach\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>&nbsp;</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={10} stretched style={{padding: 5}}>\r\n                    <GridRow columns={10} stretched style={{padding: 5, paddingLeft: 35}}>\r\n                        <h5>{this.state.currentUser.description}</h5>\r\n                    </GridRow>\r\n                </GridRow>\r\n            </Grid>\r\n  );\r\n  }\r\n}\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/resort/';\r\n\r\nclass ResortService {\r\n  getResorts(activePage, size, filtering, sorting, name, latitude, longitude) {\r\n    return axios.get(API_URL + 'all?activePage=' + activePage + \"&size=\" + size + \"&filtering=\" + filtering + \"&sorting=\" + \r\n    sorting + \"&name=\" + name + \"&latitude=\" + latitude  + \"&longitude=\" + longitude, { headers: authHeader() });\r\n  }\r\n  \r\n  getClosestResorts(latitude, longitude) {\r\n    return axios.get(API_URL + 'closestResorts?latitude=' + latitude  + \"&longitude=\" + longitude, { headers: authHeader() });\r\n  }\r\n\r\n  getResortImage(id) {\r\n    return axios.get(API_URL + 'resortImage/' + id, { headers: authHeader() }, { responseType: 'blob' });\r\n  }\r\n\r\n  getResortImageApi(id) {\r\n    return axios.get('https://skimap.org/SkiAreas/view/' + id + '.json');\r\n  }\r\n\r\n  getResortRatings(id) {\r\n    return axios.get(API_URL + 'rating/' + id, { headers: authHeader() });\r\n  }\r\n\r\n  getResortFromTripId(tripId) {\r\n    return axios.get(API_URL + 'fromTripId/' + tripId, { headers: authHeader() });\r\n  }\r\n\r\n  submitGrade(resortGradeRequest, username) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.post(API_URL + 'submitGrade/' + username, JSON.stringify(resortGradeRequest), { headers: headers });\r\n  }\r\n\r\n  editResort(resortObject) {\r\n    var headers = authHeader();\r\n    headers = { ...headers, 'Content-Type': 'application/json'};\r\n    return axios.put(API_URL + 'editResort', JSON.stringify(resortObject), { headers: headers });\r\n  }\r\n}\r\n\r\nexport default new ResortService();","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport UserInfo from \"./user.info.component\";\r\nimport { Grid, Segment, GridRow, GridColumn, Button } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { Colors } from \"../../constants\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport { notification } from \"antd\";\r\nimport { GiAchievement, GiMountaintop } from 'react-icons/gi';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      username: AuthService.getCurrentUser().username,\r\n      currentUser: null,\r\n      achievements: null,\r\n      acquaintances: null,\r\n      acquaintanceNumber: 0,\r\n      trips: null,\r\n      resortImage: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCurrentUser(this.state.username).then(user => {\r\n      this.setState({\r\n        currentUser: user.data\r\n      })\r\n    });\r\n\r\n    this.getAchievements(this.state.username).then(achievements => {\r\n      this.setState({\r\n        achievements: achievements.data\r\n      })});\r\n\r\n    this.getAcquaintances(this.state.username).then(acquaintances => {\r\n      this.setState({\r\n        acquaintances: acquaintances.data.userDTO,\r\n        acquaintanceNumber: acquaintances.data.countAcquaintances\r\n      })});\r\n\r\n    this.getTrips(this.state.username).then(trips => {\r\n      this.setState({\r\n        trips: trips.data\r\n      })});\r\n  }\r\n\r\n  handleDeleteAcquaintance(username) {\r\n    UserService\r\n    .deleteAcquaintance(AuthService.getCurrentUser().username, username)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Znajomy został usunięty!\",\r\n            description:\r\n                \"Usunięto znajomego o loginie \" + username + \"!\",\r\n        });\r\n    })\r\n    .then((response) => {\r\n        this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n            acquaintances: acquaintances.data.userDTO,\r\n            acquaintanceNumber: acquaintances.data.countAcquaintances\r\n          })});\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się usunąć znajomego!\",\r\n            description:\r\n                \"Użytkownik o loginie \" + username + \" nie został usunięty ze znajomych!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  getCurrentUser (username) {\r\n    return UserService.getUserFromUsername(username);\r\n  }\r\n\r\n  getAchievements (username) {\r\n    return UserService.getAchievementsFromUsername(username);\r\n  }\r\n\r\n  getAcquaintances (username) {\r\n    return UserService.getAcquaintancesFromUsername(username);\r\n  }\r\n\r\n  getTrips (username) {\r\n    return UserService.getTripsFromUsername(username);\r\n  }\r\n\r\n  getResortImage (id) {\r\n    return resortService.getResortImage(id);\r\n  }\r\n\r\n  render () {\r\n    if (this.state.currentUser === null || this.state.achievements === null || this.state.acquaintances === null || this.state.trips === null) {\r\n      return <LoadingIndicator />\r\n    } else {\r\n      return (\r\n        <Grid textAlign=\"center\">\r\n          <Grid.Column mobile={16} tablet={13} computer={10}>\r\n            <Segment padded>\r\n              <UserInfo\r\n                currentUser={this.state.currentUser}\r\n                userImage={this.state.resortImage}\r\n              />\r\n            </Segment>\r\n            <Segment padded>\r\n              <Grid textAlign=\"left\">\r\n                <GridRow style={{ padding: 5 }}>\r\n                  <GridColumn floated=\"left\" textAlign=\"left\" style={{ padding: 3, paddingLeft: 20 }}>\r\n                    <h2 style={{ width: 150 }}>Znajomi: </h2>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={this.state.acquaintances.length + 1} style={{ padding: 5, paddingLeft: 15 }}>\r\n                  <React.Fragment>\r\n                  {this.state.acquaintances.length === 0 ? (\r\n                        <h4 style={{ padding: 3, paddingLeft: 10 }}>Brak znajomych do wyświetlenia</h4>\r\n                    ) : (\r\n                    this.state.acquaintances\r\n                      .map((user) => (\r\n                        <Segment style={{ margin: 3 }} key={user.username}>\r\n                          <Grid textAlign=\"center\">\r\n                              <Grid.Row stretched columns={3} style={{ padding: 8 }}>\r\n                                  <Grid.Column style={{ margin: 0 }} width=\"2\" floated=\"left\">\r\n                                      <FaUser size=\"35px\"/>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                      <h3 style={{ margin: 5, marginBottom: 0 }}>{user.username}</h3>\r\n                                      <h4 style={{ margin: 5 }}>{user.email}</h4>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column width=\"5\" floated=\"right\" verticalAlign=\"middle\" style={{ height: 40 }}>\r\n                                      <Button\r\n                                          size=\"small\"\r\n                                          onClick={() => this.handleDeleteAcquaintance(user.username)}\r\n                                          style={{ backgroundColor: '#ff5f57', color: Colors.background }}>\r\n                                          Usuń ze znajomych\r\n                                      </Button>\r\n                                  </Grid.Column>\r\n                              </Grid.Row>\r\n                          </Grid>\r\n                        </Segment>\r\n                      ))\r\n                    )\r\n                      }\r\n                  </React.Fragment>\r\n                </GridRow>\r\n              </Grid>\r\n            </Segment>\r\n            <Segment padded>\r\n              <Grid textAlign=\"left\">\r\n                <GridRow style={{ padding: 5 }}>\r\n                  <GridColumn floated=\"left\" textAlign=\"left\" style={{ padding: 3, paddingLeft: 20 }}>\r\n                    <h2>Wyjazdy: </h2>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={this.state.trips.length + 1} style={{ padding: 5, paddingLeft: 15 }}>\r\n                  <React.Fragment>\r\n                  {this.state.trips.length === 0 ? (\r\n                        <h4 style={{ padding: 3, paddingLeft: 10 }}>Brak wyjazdów do wyświetlenia</h4>\r\n                    ) : (\r\n                    this.state.trips\r\n                      .map((trip) => (\r\n                        <Segment style={{ margin: 3 }} key={trip.tripId}>\r\n                          <Link to={{ pathname: `../tripView/${trip.tripId}`, state: { trip: trip } }}>\r\n                            <Grid textAlign=\"center\">\r\n                                <Grid.Row stretched columns={3} style={{ padding: 8 }}>\r\n                                    <Grid.Column style={{ margin: 0 }} width=\"2\" floated=\"left\">\r\n                                        <GiMountaintop style={{ color: 'black' }} size=\"40px\"/>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                        <h4 style={{ margin: 5 }}>{trip.resortName}</h4>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width=\"8\" floated=\"right\" verticalAlign=\"middle\">\r\n                                        <h5 style={{ margin: 5, textAlign: \"left\" }}>{trip.description}</h5>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                          </Link>\r\n                        </Segment>\r\n                      ))\r\n                    )\r\n                  }\r\n                  </React.Fragment>\r\n                </GridRow>\r\n              </Grid>\r\n            </Segment>\r\n            <Segment padded>\r\n              <Grid textAlign=\"left\">\r\n                <GridRow style={{ padding: 5 }}>\r\n                  <GridColumn floated=\"left\" textAlign=\"left\" style={{ padding: 3, paddingLeft: 20 }}>\r\n                    <h2>Osiągnięcia: </h2>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={this.state.achievements.length + 1} style={{ padding: 5, paddingLeft: 15 }}>\r\n                  <React.Fragment>\r\n                  {this.state.achievements.length === 0 ? (\r\n                        <h4 style={{ padding: 3, paddingLeft: 10 }}>Brak osiągnięć do wyświetlenia</h4>\r\n                    ) : (\r\n                    this.state.achievements\r\n                      .map((achievement) => (\r\n                        <Segment style={{ margin: 3 }} key={achievement.achievementId}>\r\n                          <Grid textAlign=\"center\">\r\n                              <Grid.Row stretched columns={3} style={{ padding: 8 }}>\r\n                                  <Grid.Column style={{ margin: 0 }} width=\"2\" floated=\"left\">\r\n                                      <GiAchievement size=\"40px\"/>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                      <h4 style={{ margin: 5 }}>{achievement.achievementName}</h4>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column width=\"8\" floated=\"right\" verticalAlign=\"middle\">\r\n                                      <h5 style={{ margin: 5, textAlign: \"left\" }}>{achievement.achievementDescription}</h5>\r\n                                  </Grid.Column>\r\n                              </Grid.Row>\r\n                          </Grid>\r\n                        </Segment>\r\n                      ))\r\n                    )\r\n                  }\r\n                  </React.Fragment>\r\n                </GridRow>\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  Header,\r\n  Dropdown,\r\n  Button,\r\n  Input,\r\n  Icon,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\nimport {Colors} from \"../../constants\";\r\n\r\n\r\nconst itemsOnPageOptions = [\r\n  { key: \"1\", value: 10, text: \"10\" },\r\n  { key: \"2\", value: 25, text: \"25\" },\r\n  { key: \"3\", value: 50, text: \"50\" },\r\n];\r\n\r\nconst sortingOptions = [\r\n  { id: 1, key: \"1\", value: \"DESC_resortName\", text: \"Niealfabetycznie po nazwie ośrodka\" },\r\n  { id: 2, key: \"2\", value: \"ASC_resortName\", text: \"Alfabetycznie po nazwie ośrodka\" },\r\n  { id: 3, key: \"3\", value: \"DESC_distance\", text: \"Malejąco po odległości od obecnej pozycji\" },\r\n  { id: 4, key: \"4\", value: \"ASC_temperature\", text: \"Rosnąco po temperaturze\" },\r\n  { id: 5, key: \"5\", value: \"DESC_temperature\", text: \"Malejąco po temperaturze\" },\r\n  { id: 6, key: \"6\", value: \"ASC_snowThickness\", text: \"Rosnąco po grubości pokrywy śnieżnej\" },\r\n  { id: 7, key: \"7\", value: \"DESC_snowThickness\", text: \"Malejąco po grubości pokrywy śnieżnej\" },\r\n  { id: 8, key: \"8\", value: \"DESC_runCount\", text: \"Malejąco po liczbie otwartych tras\" },\r\n  { id: 9, key: \"9\", value: \"DESC_clouds\", text: \"Malejąco po zachmurzeniu\" },\r\n  { id: 10, key: \"10\", value: \"ASC_clouds\", text: \"Rosnąco po zachmurzeniu\" }\r\n];\r\n\r\nconst filteringOptions = [\r\n  { key: \"1\", value: \"ALL\", text: \"Wszystkie\" },\r\n  { key: \"2\", value: \"TER\", text: \"Jazda terenowa\" },\r\n  { key: \"3\", value: \"OTW\", text: \"Otwarte trasy\" },\r\n  { key: \"4\", value: \"NIG\", text: \"Nocne jazdy\" },\r\n];\r\n\r\nclass FilterBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      listOfResorts: null,\r\n      itemsOnPage: \"10\",\r\n    };\r\n  }\r\n\r\n  handleChange = (resort, { name, value }) => {\r\n    if (this.state.hasOwnProperty(name)) {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Header as=\"h1\" style={{color: Colors.primary, paddingBottom: 25}}>\r\n          Znajdź ośrodek narciarski dla siebie!\r\n        </Header>\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row columns={10} stretched style={{padding: 5}}>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Liczba ośrodków na stronie</label>\r\n                <Dropdown\r\n                  placeholder=\"Liczba ośrodków na stronie\"\r\n                  compact\r\n                  disabled={this.props.isLoading}\r\n                  selectOnNavigation={false}\r\n                  name=\"itemsCountPerPage\"\r\n                  selection\r\n                  value={this.props.itemsCountPerPage}\r\n                  options={itemsOnPageOptions}\r\n                  onChange={this.props.onChangeItemsOnPage}\r\n                />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form.Field>\r\n                <label>Wyszukaj po nazwie</label>\r\n                <Input\r\n                    placeholder=\"Nazwa ośrodka\"\r\n                    onChange={this.props.onChangeName}\r\n                    name=\"resortName\"\r\n                ></Input>\r\n                </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={10} stretched style={{padding: 5}}>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Filtrowanie</label>\r\n                <Dropdown\r\n                  placeholder=\"Filtrowanie ośrodków\"\r\n                  compact\r\n                  disabled={this.props.isLoading}\r\n                  selectOnNavigation={false}\r\n                  name=\"filtering\"\r\n                  selection\r\n                  value={this.props.filtering}\r\n                  options={filteringOptions}\r\n                  onChange={this.props.onChangeFiltering}\r\n                />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form.Field>\r\n                <label>Sortowanie</label>\r\n                <Dropdown\r\n                  placeholder=\"Sortowanie ośrodków\"\r\n                  compact\r\n                  disabled={this.props.isLoading}\r\n                  selectOnNavigation={false}\r\n                  name=\"sorting\"\r\n                  selection\r\n                  value={this.props.sorting}\r\n                  options={sortingOptions}\r\n                  onChange={this.props.onChangeSorting}\r\n                />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={10} stretched style={{padding: 5}}>\r\n            <Grid.Column>\r\n                  <Form.Field>\r\n                    <label> </label>\r\n                    <Button\r\n                      fluid\r\n                      animated\r\n                      style={{backgroundColor: Colors.primary}}\r\n                      onClick={this.props.onSubmit}\r\n                      loading={this.props.isLoading}\r\n                    >\r\n                      <Button.Content visible style={{color: Colors.background}}>Wyszukaj</Button.Content>\r\n                      <Button.Content hidden>\r\n                        <Icon name=\"search\" />\r\n                      </Button.Content>\r\n                    </Button>\r\n                  </Form.Field>\r\n                </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Form.Group widths=\"equal\"></Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterBar;","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { TiLightbulb } from \"react-icons/ti\";\r\nimport { FaLightbulb } from \"react-icons/fa\";\r\n\r\nclass ResortCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clouds: 70,\r\n      humidity: 90.36896897756206,\r\n      lastChange: \"2016-02-18T13:11:51.000+00:00\",\r\n      latitude: 52.977947,\r\n      liftCount: 0,\r\n      longitude: 52.977947,\r\n      nightSkiing: false,\r\n      region: \"Newfoundland and Labrador\",\r\n      resortId: 1,\r\n      resortName: \"Smokey Mountain Ski Club\",\r\n      runCount: 0,\r\n      sensedTemperature: -22.19486568548723,\r\n      snowThickness: 44,\r\n      temperature: 19.189346395452873,\r\n      terrainPark: false,\r\n      windSpeed: 10.054735036652962,\r\n      distance: 10.0,\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    var temp = this.props.resortDetails.temperature.toString();\r\n    var dotIndex = temp.indexOf('.');\r\n    var temperatureRounded = temp.substring(0, dotIndex + 2);\r\n\r\n    var senTemp = this.props.resortDetails.sensedTemperature.toString();\r\n    dotIndex = senTemp.indexOf('.');\r\n    var sensedTemperatureRounded = senTemp.substring(0, dotIndex + 2);\r\n\r\n    var disTemp = this.props.resortDetails.distance.toString();\r\n    dotIndex = disTemp.indexOf('.');\r\n    var distanceRounded = disTemp.substring(0, dotIndex + 3);\r\n\r\n    this.setState({\r\n      clouds: this.props.resortDetails.clouds,\r\n      humidity: this.props.resortDetails.humidity,\r\n      lastChange: this.props.resortDetails.lastChange,\r\n      latitude: this.props.resortDetails.latitude,\r\n      liftCount: this.props.resortDetails.liftCount,\r\n      longitude: this.props.resortDetails.longitude,\r\n      nightSkiing: this.props.resortDetails.nightSkiing,\r\n      region: this.props.resortDetails.region,\r\n      resortId: this.props.resortDetails.resortId,\r\n      resortName: this.props.resortDetails.resortName,\r\n      runCount: this.props.resortDetails.runCount,\r\n      sensedTemperature: sensedTemperatureRounded,\r\n      snowThickness: this.props.resortDetails.snowThickness,\r\n      temperature: temperatureRounded,\r\n      terrainPark: this.props.resortDetails.terrainPark,\r\n      windSpeed: this.props.resortDetails.windSpeed,\r\n      distance: distanceRounded\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid columns=\"equal\">\r\n        <GridRow columns={10} stretched style={{ padding: 5 }}>\r\n          <GridRow columns={10} stretched style={{ padding: 5, paddingLeft: 35 }}>\r\n            <GridColumn textAlign=\"center\" style={{ padding: 3 }}>\r\n              <h2 style={{ fontWeight: \"bold\" }}>{this.state.resortName}</h2>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Otwartych tras: {this.state.runCount}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Temperatura (odczuwalna): {this.state.temperature}℃ ({this.state.sensedTemperature}℃)</h5>\r\n            </GridColumn>\r\n          </GridRow>\r\n          <GridRow columns={10} stretched style={{ padding: 5, paddingLeft: 45 }}>\r\n            <GridColumn textAlign=\"center\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Odległość do przebycia: {this.state.distance}km</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Grubość pokrywy śnieżnej: {this.state.snowThickness}cm</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              {this.state.nightSkiing === true &&\r\n                <h5 title=\"Nocne jazdy możliwe\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.nightSkiing} <TiLightbulb tooltip=\"Nocne jazdy możliwe\" /></h5>\r\n              }\r\n              {this.state.nightSkiing === false &&\r\n                <h5 title=\"Brak nocnych jazd\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.nightSkiing} <FaLightbulb tooltip=\"Brak nocnych jazd\" /></h5>\r\n              }\r\n            </GridColumn>\r\n          </GridRow>\r\n          <GridColumn\r\n            centered=\"true\"\r\n            textAlign=\"center\"\r\n            verticalAlign=\"middle\"\r\n            mobile={4}\r\n            tablet={4}\r\n            computer={2}\r\n            padded=\"horizontally\"\r\n            style={{ padding: 5, paddingLeft: 25 }}\r\n          >\r\n            <Grid.Row centered={true} textAlign=\"center\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/resortView/${this.state.resortId}`,\r\n                  state: { resortDetails: this.props.resortDetails },\r\n                }}\r\n              >\r\n                <Button id={this.state.resortId} style={{ backgroundColor: Colors.primary }} size=\"small\">\r\n                  <Button.Content visible style={{ color: Colors.background }}>Więcej</Button.Content>\r\n                </Button>\r\n              </Link>\r\n            </Grid.Row>\r\n          </GridColumn>\r\n        </GridRow>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ResortCard);","import React, { Component } from \"react\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport { Grid, Segment, List, Pagination} from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport FilterBar from \"./filter-bar\";\r\nimport ResortCard from \"./resort-card\";\r\n\r\nexport default class SearchResorts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        document.title = \"SkiWithMe\";\r\n    \r\n        this.state = {\r\n            isLoading: true,\r\n            listOfResorts: null,\r\n            activePage: 1,\r\n            totalPages: 10,\r\n            itemsCountPerPage: 10,\r\n            totalItemsCount: null,\r\n            filtering: \"OTW\",\r\n            sorting: \"ASC_resortId\",\r\n            name: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\"\r\n          };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        navigator.geolocation.getCurrentPosition(\r\n          position => {\r\n            this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude });\r\n            this.getAllResorts(\r\n              this.state.activePage,\r\n              this.state.itemsCountPerPage,\r\n              this.state.filtering,\r\n              this.state.sorting,\r\n              this.state.name,\r\n              this.state.latitude,\r\n              this.state.longitude\r\n            );\r\n          },\r\n          error => console.log(error)\r\n        );\r\n      }\r\n    \r\n      handlePaginationChange = (e, { activePage }) => {\r\n        this.setState({ activePage });\r\n        this.getAllResorts(\r\n          activePage,\r\n          this.state.itemsCountPerPage,\r\n          this.state.filtering,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeItemsOnPage = (e, { value }) => {\r\n        this.setState({ itemsCountPerPage: value });\r\n        this.getAllResorts(\r\n          this.state.activePage,\r\n          value,\r\n          this.state.filtering,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeFiltering = (e, { value }) => {\r\n        this.setState({ filtering: value, activePage: 1 });\r\n        this.getAllResorts(\r\n          1,\r\n          this.state.itemsCountPerPage,\r\n          value,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeSorting = (e, { value }) => {\r\n        this.setState({ sorting: value });\r\n        this.getAllResorts(\r\n          this.state.activePage,\r\n          this.state.itemsCountPerPage,\r\n          this.state.filtering,\r\n          value,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      };\r\n    \r\n      handleChangeName = (e, { value }) => {\r\n        this.setState({ name: value });\r\n      };\r\n    \r\n      handleSubmit = () =>{\r\n        this.getAllResorts(\r\n          this.state.activePage,\r\n          this.state.itemsCountPerPage,\r\n          this.state.filtering,\r\n          this.state.sorting,\r\n          this.state.name,\r\n          this.state.latitude,\r\n          this.state.longitude\r\n        );\r\n      }\r\n    \r\n      handleChange(event, validationFunction) {\r\n        const target = event.target;\r\n        const inputValue = target.value;\r\n        const inputName = target.name;\r\n    \r\n        this.setState({\r\n          [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n          },\r\n        });\r\n      }\r\n    \r\n      getAllResorts(activePage, itemsOnSite, filtering, sorting, name, latitude, longitude) {\r\n        this.setState({ isLoading: true });\r\n        resortService\r\n          .getResorts(activePage, itemsOnSite, filtering, sorting, name, latitude, longitude)\r\n          .then((response) => {\r\n            this.setState({\r\n              totalPages: response.data.totalPages,\r\n              totalItemsCount: response.data.totalElements,\r\n            });\r\n    \r\n            const results = response.data.content;\r\n            const updatedResults = results.map((results) => {\r\n              return {\r\n                ...results,\r\n              };\r\n            });\r\n\r\n            this.setState({ listOfResorts: updatedResults });\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n              <Segment padded>\r\n                <FilterBar\r\n                  isLoading={this.state.isLoading}\r\n                  itemsCountPerPage={this.state.itemsCountPerPage}\r\n                  sorting={this.state.sorting}\r\n                  filtering={this.state.filtering}\r\n                  name={this.state.name}\r\n                  onChangeItemsOnPage={this.handleChangeItemsOnPage}\r\n                  onChangeSorting={this.handleChangeSorting}\r\n                  onChangeFiltering={this.handleChangeFiltering}\r\n                  onChangeName={this.handleChangeName}\r\n                  onSubmit={this.handleSubmit}\r\n                />\r\n              </Segment>\r\n              <Pagination\r\n                activePage={this.state.activePage}\r\n                boundaryRange={1}\r\n                onPageChange={this.handlePaginationChange}\r\n                size=\"mini\"\r\n                siblingRange={1}\r\n                totalPages={this.state.totalPages}\r\n              />\r\n              <Segment textAlign=\"left\">\r\n                {this.state.isLoading === true ? (\r\n                  <LoadingIndicator />\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                    {this.state.listOfResorts.length === 0 ? (\r\n                      <Segment>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Nie znaleziono ośrodków dla podanych parametrów</h4>\r\n                      </Segment>\r\n                    ) : (\r\n                      this.state.listOfResorts.map((resort) => (\r\n                        <Segment key={resort.resortId}>\r\n                          <ResortCard\r\n                            isAdmin={this.props.isAdmin}\r\n                            resortDetails={resort}\r\n                          ></ResortCard>\r\n                        </Segment>\r\n                      ))\r\n                    )}\r\n                    </List>\r\n                  </React.Fragment>\r\n                )}\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        );\r\n      }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/trip/';\r\n\r\nclass TripService {\r\n    createTrip(tripObject, username) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'createTrip/' + username, JSON.stringify(tripObject), { headers: headers });\r\n    }\r\n\r\n    updateTrip(tripIdObject, username) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.put(API_URL + 'updateTrip/' + username, JSON.stringify(tripIdObject), { headers: headers });\r\n    }\r\n\r\n    getTripActivity(tripId) {\r\n        return axios.get(API_URL + 'getTripActivity/' + tripId, { headers: authHeader() });\r\n    }\r\n\r\n    quitTrip(username, tripId) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'quitTrip/' + tripId, username, { headers: headers });\r\n    }\r\n\r\n    cancelTrip(username, tripId) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'cancelTrip/' + tripId, username, { headers: headers });\r\n    }\r\n\r\n    joinTrip(username, tripId) {\r\n        var headers = authHeader();\r\n        headers = { ...headers, 'Content-Type': 'application/json'};\r\n        return axios.post(API_URL + 'joinTrip/' + tripId, username, { headers: headers });\r\n    }\r\n}\r\n\r\nexport default new TripService();","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow,\r\n  Segment,\r\n  Button,\r\n  List,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport userService from \"../../services/user.service\";\r\nimport tripService from \"../../services/trip.service\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaUser } from 'react-icons/fa';\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { notification } from \"antd\";\r\n\r\nclass TripView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.state = {\r\n      trip: null,\r\n      resortDetails: null,\r\n      departureDate: null,\r\n      departureTime: null,\r\n      arrivalDate: null,\r\n      participants: null,\r\n      isTripActive: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n        trip: this.props.location.state.trip\r\n    });\r\n\r\n    this.getResortFromTripId(this.props.location.state.trip.tripId).then(resort => { this.setState({\r\n            resortDetails: resort.data\r\n        })\r\n    })\r\n\r\n    this.getParticipants(this.props.location.state.trip.tripId).then(participants => { this.setState({\r\n        participants: participants.data\r\n        })\r\n    })\r\n\r\n    this.getTripActivity(this.props.location.state.trip.tripId).then(trip => { \r\n        this.setState({\r\n            isTripActive: trip.data\r\n        })\r\n    })\r\n\r\n    var tripDate = this.props.location.state.trip.tripDate;\r\n    var daysNumber = this.props.location.state.trip.daysNumber;\r\n\r\n    var departureDate = tripDate.toString().substring(0, 10);\r\n    var departureTime = tripDate.toString().substring(11, 16);\r\n\r\n    var tripDateArrival = new Date(departureDate);\r\n    tripDateArrival.setDate(tripDateArrival.getDate() + parseInt(daysNumber));\r\n    let monthArrival = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(tripDateArrival.toString().substring(4, 7)) / 3 + 1;\r\n    if(monthArrival < 10)\r\n      monthArrival = \"0\" + monthArrival.toString();\r\n    var arrivalFormated = tripDateArrival.toString().substring(11, 15) + \"-\" + monthArrival + \"-\" + tripDateArrival.toString().substring(8, 10);\r\n\r\n    this.setState({\r\n      departureDate: departureDate,\r\n      departureTime: departureTime,\r\n      arrivalDate: arrivalFormated\r\n    });\r\n  }\r\n\r\n  getTripActivity(tripId) {\r\n    return tripService.getTripActivity(tripId);\r\n  }\r\n\r\n  getResortFromTripId(tripId) {\r\n    return resortService.getResortFromTripId(tripId);\r\n  }\r\n\r\n  getParticipants(tripId) {\r\n    return userService.getParticipants(tripId);\r\n  }\r\n\r\n  isEarlierThanNow() {\r\n      return new Date() < new Date(this.props.location.state.trip.tripDate);\r\n  }\r\n\r\n  isActive() {\r\n      return this.state.isTripActive;\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  currentUserParticipates() {\r\n    for(let i = 0; i < this.state.participants.length; i++) {\r\n        if(AuthService.getCurrentUser().username === this.state.participants[i].username) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  quitTrip() {\r\n    tripService\r\n    .quitTrip(AuthService.getCurrentUser().username, this.props.location.state.trip.tripId)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Zrezygnowałeś z wyjazdu!\",\r\n            description:\r\n                \"Wyjazd, na który byłeś zapisany odbędzie się bez Twojego udziału!\",\r\n        });\r\n\r\n        this.props.history.push(`../news`);\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się zrezygnować z wyjazdu!\",\r\n            description:\r\n                \"Rezygnacja nie powiodła się!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  cancelTrip() {\r\n    tripService\r\n    .cancelTrip(AuthService.getCurrentUser().username, this.props.location.state.trip.tripId)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Wyjazd został odwołany!\",\r\n            description:\r\n                \"Odwołano wyjazd!\",\r\n        });\r\n\r\n        this.props.history.push(`../news`);\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się odwołać wyjazdu!\",\r\n            description:\r\n                \"Wyjazd nie został odwołany!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  joinTrip() {\r\n    tripService\r\n    .joinTrip(AuthService.getCurrentUser().username, this.props.location.state.trip.tripId)\r\n    .then((response) => {\r\n        notification.success({\r\n            message: \"Dołączyłeś do wyjazdu!\",\r\n            description:\r\n                \"Zapisałeś się na wyjazd!\",\r\n        });\r\n\r\n        this.props.history.push(`../news`);\r\n    })\r\n    .catch((error) => {\r\n        notification.error({\r\n            message: \"Nie udało się dołączyć do wyjazdu!\",\r\n            description:\r\n                \"Dołączenie do wyjazdu nie powiodło się!\",\r\n        });\r\n    });\r\n  }\r\n\r\n  render () {\r\n    if(this.state.trip === null || this.state.resortDetails === null || this.state.participants === null || this.state.isTripActive === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid columns=\"equal\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n                <Segment padded>\r\n                    <Grid columns=\"equal\">\r\n                        <GridRow columns={3} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                            <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                    Powrót\r\n                                </Button>\r\n                            </GridColumn>\r\n                            <GridColumn textAlign=\"center\" style={{padding: 5, paddingBottom: 15}}>\r\n                                <h1 style={{ fontWeight: \"bold\", color: Colors.primary }}>{this.state.trip.resortName}</h1>\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                <Link\r\n                                    style={{ padding: 5 }}\r\n                                    to={{\r\n                                    pathname: `../resortView/${this.state.resortDetails.resortId}`,\r\n                                    state: { resortDetails: this.state.resortDetails },\r\n                                    }}\r\n                                >\r\n                                    <Button id={this.state.resortId} style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\">\r\n                                        <Button.Content visible style={{ color: Colors.background }}>Zobacz ośrodek</Button.Content>\r\n                                    </Button>\r\n                                </Link>\r\n                                {(this.currentUserParticipates()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `../tripForm/${this.state.trip.tripId}`, \r\n                                            state: { trip: this.state.trip, resort: this.state.resortDetails }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"settings\" style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\">\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Zmień ustawienia wyjazdu</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                                {(!this.currentUserParticipates() && this.isActive() && this.isEarlierThanNow()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `./${this.props.location.state.trip.tripId}`,\r\n                                            state: { trip: this.state.trip }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"join\" style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\"\r\n                                            onClick={() => this.joinTrip()}>\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Dołącz do wyjazdu</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                                {(this.currentUserParticipates() && this.isActive() && this.isEarlierThanNow()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `./${this.props.location.state.trip.tripId}`,\r\n                                            state: { trip: this.state.trip }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"cancel\" style={{ backgroundColor: '#ff5f57', color: Colors.background, width: 200 }} size=\"small\"\r\n                                            onClick={() => this.cancelTrip()}>\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Odwołaj wyjazd</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                                {(this.currentUserParticipates() && this.isActive() && this.isEarlierThanNow()) && (\r\n                                    <Link\r\n                                        style={{ padding: 5 }}\r\n                                        to={{\r\n                                            pathname: `./${this.props.location.state.trip.tripId}`,\r\n                                            state: { trip: this.state.trip }\r\n                                        }}\r\n                                    >\r\n                                        <Button id=\"quit\" style={{ backgroundColor: '#ff5f57', color: Colors.background, width: 200 }} size=\"small\"\r\n                                            onClick={() => this.quitTrip()}>\r\n                                            <Button.Content visible style={{ color: Colors.background }}>Zrezygnuj z wyjazdu</Button.Content>\r\n                                        </Button>\r\n                                    </Link>\r\n                                )}\r\n                            </GridColumn>\r\n                        </GridRow>\r\n                    </Grid>\r\n                    <Grid columns=\"equal\" style={{paddingTop: 15}}>\r\n                        <GridRow columns={2} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                            <GridRow columns={1} stretched style={{padding: 5}}>\r\n                                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" style={{paddingBottom: 15}}>\r\n                                    <Header as=\"h2\" textAlign=\"center\">\r\n                                        Użytkownicy biorący udział w wyjeździe\r\n                                    </Header>\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <React.Fragment>\r\n                                        <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                                            {this.state.participants.length === 0 ? (\r\n                                                    <h3>Brak użytkowników biorących udział w wyjeździe</h3>\r\n                                                ) : (\r\n                                                this.state.participants.map((user) => (\r\n                                                    <Segment key={user.username}>\r\n                                                        <Grid textAlign=\"center\">\r\n                                                            <Grid.Row stretched columns={3}>\r\n                                                                <Grid.Column style={{ marginRight: 10, marginLeft: 10 }} width=\"2\" floated=\"left\">\r\n                                                                    <FaUser size=\"30px\"/>\r\n                                                                </Grid.Column>\r\n                                                                <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                                                    <h3>{user.username}</h3>\r\n                                                                </Grid.Column>\r\n                                                                <Grid.Column width=\"7\" style={{ marginLeft: 10 }} floated=\"right\">\r\n                                                                    <Header as=\"h4\" textAlign=\"left\" style={{ margin: 5 }}>\r\n                                                                        {user.name} {user.surname}\r\n                                                                    </Header>\r\n                                                                    <Header as=\"h5\" textAlign=\"left\" style={{ margin: 5 }}>\r\n                                                                        {user.email}\r\n                                                                    </Header>\r\n                                                                </Grid.Column>\r\n                                                            </Grid.Row>\r\n                                                        </Grid>\r\n                                                    </Segment>\r\n                                                )))\r\n                                            }\r\n                                        </List>\r\n                                    </React.Fragment>\r\n                                </Grid.Column>\r\n                            </GridRow>\r\n                            <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 150, paddingTop: 0}}>\r\n                                <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15}}>\r\n                                    <h4>Stan wyjazdu: Aktualny</h4>\r\n                                    <h4 style={{ marginTop: 0 }}>Data i godzina wyjazdu: {this.state.departureDate} {this.state.departureTime}</h4>\r\n                                    <h4 style={{ marginTop: 0 }}>Data powrotu: {this.state.arrivalDate}</h4>\r\n                                    <h3 style={{ fontWeight: \"bold\" }}>Opis wyjazdu:</h3>\r\n                                    <h4 style={{ fontStyle: \"italic\", marginTop: 0 }}>{this.state.trip.description}</h4>\r\n                                </GridColumn>\r\n                            </GridRow>\r\n                        </GridRow>\r\n                    </Grid>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(TripView);","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ResortService from \"../../services/resort.service\";\r\nimport TripService from \"../../services/trip.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { Grid, Segment, Button, Container, GridRow, GridColumn } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { DateTimeInput } from 'semantic-ui-calendar-react';\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class TripForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n        isEditionForm: null,\r\n        duration: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        dateTime: '',\r\n        description: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        chosenResortId: '',\r\n        resorts: null\r\n    };\r\n\r\n    this.handleSubmitAdd = this.handleSubmitAdd.bind(this);\r\n    this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.match.params.tripId === undefined) {\r\n        this.setState({\r\n            isEditionForm: false\r\n        });\r\n    } else {\r\n        this.setState({\r\n            isEditionForm: true,\r\n            latitude: 0,\r\n            longitude: 0,\r\n            chosenResortId: this.props.location.state.resort.resortId,\r\n            duration: {\r\n                value: this.props.location.state.trip.daysNumber,\r\n                validateStatus: ''\r\n            },\r\n            description: {\r\n                value: this.props.location.state.trip.description,\r\n                validateStatus: ''\r\n            },\r\n            dateTime: this.props.location.state.trip.tripDate.toString().substring(0, 10) + ' ' + this.props.location.state.trip.tripDate.toString().substring(11, 16)\r\n        });\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude });\r\n          this.getClosestResorts(\r\n            this.state.latitude,\r\n            this.state.longitude\r\n          );\r\n        },\r\n        error => console.log(error)\r\n      );\r\n  }\r\n\r\n  resortInList(resort, resorts) {\r\n      for(let i = 0; i < resorts.length; i++) {\r\n          if(resort.resortId === resorts[i].resortId) {\r\n              return true;\r\n          }\r\n      }\r\n      return false;\r\n  }\r\n\r\n  getClosestResorts(latitude, longitude) {\r\n    ResortService\r\n      .getClosestResorts(latitude, longitude)\r\n      .then((response) => {\r\n        var resorts = response.data.content;\r\n        if(this.props.location.state !== undefined && !this.resortInList(this.props.location.state.resort, resorts)) {\r\n            resorts.push(this.props.location.state.resort);\r\n        }\r\n        this.setState({ resorts: resorts });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  \r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n  \r\n  onChangeSelect(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: inputValue\r\n    })\r\n  }\r\n\r\n  handleChange = (event, {name, value}) => {\r\n    if (this.state.hasOwnProperty(name)) {\r\n      this.setState({ [name]: value });\r\n    }\r\n  }\r\n\r\n  handleSubmitAdd(e) {\r\n    e.preventDefault();\r\n\r\n    var tripObject = {\r\n        daysNumber: this.state.duration.value,\r\n        dateTime: this.state.dateTime.toString().substring(0, 10) + \"T\" + this.state.dateTime.toString().substring(11, 16) + \":00\",\r\n        description: this.state.description.value,\r\n        resortId: this.state.chosenResortId\r\n    }\r\n\r\n  TripService.createTrip(\r\n    tripObject,\r\n    AuthService.getCurrentUser().username\r\n  )\r\n  .then(\r\n    () => {\r\n      notification.success({\r\n        message: \"Stworzono wyjazd!\",\r\n        description:\r\n            \"Udane stworzenie wyjazdu!\",\r\n      });\r\n\r\n      this.props.history.push(`../news`);\r\n  })\r\n  .catch((error) => {\r\n    notification.error({\r\n        message: \"Tworzenie wyjazdu nieudane!\",\r\n        description:\r\n            \"Nieudane stworzenie wyjazdu!\",\r\n    });\r\n  });\r\n  }\r\n\r\n  handleSubmitEdit(e) {\r\n        e.preventDefault();\r\n\r\n        var tripObject = {\r\n            daysNumber: this.state.duration.value,\r\n            dateTime: this.state.dateTime.toString().substring(0, 10) + \"T\" + this.state.dateTime.toString().substring(11, 16) + \":00\",\r\n            description: this.state.description.value,\r\n            resortId: this.state.chosenResortId,\r\n            tripId: this.props.match.params.tripId\r\n        }\r\n    \r\n      TripService.updateTrip(\r\n        tripObject,\r\n        AuthService.getCurrentUser().username\r\n      )\r\n      .then(\r\n        () => {\r\n          notification.success({\r\n            message: \"Zmieniono dane!\",\r\n            description:\r\n                \"Udana zmiana danych wyjazdu!\",\r\n          });\r\n  \r\n          this.props.history.push(`../news`);\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n            message: \"Zmiana danych nieudana!\",\r\n            description:\r\n                \"Nieudana zmiana danych wyjazdu!\",\r\n        });\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.duration.validateStatus === \"error\" || this.state.description.validateStatus === \"error\" || this.state.chosenResortId === \"\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isEditionForm === null || this.state.duration === null || this.state.dateTime === null || this.state.description === null || this.state.resorts === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={12} tablet={10} computer={9}>\r\n                <Segment id=\"segmentId\" padded>\r\n                    <Container>\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid.Column>\r\n                                {this.state.isEditionForm === true && (\r\n                                    <h2 style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 30 }}>Edycja wyjazdu</h2>\r\n                                )}\r\n                                {this.state.isEditionForm === false && (\r\n                                    <h2 style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 30 }}>Tworzenie wyjazdu</h2>\r\n                                )}\r\n                            </Grid.Column>\r\n                            <FormItem \r\n                                hasFeedback\r\n                                autoComplete=\"off\">\r\n                                <Select\r\n                                    style={{ width: '100%' }}\r\n                                    value={this.state.chosenResortId}\r\n                                    name=\"chosenResortId\"\r\n                                    onChange={(event) => {\r\n                                        this.onChangeSelect(\r\n                                            event,\r\n                                            validation.validateSuccess\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    {this.state.resorts\r\n                                        .map((resort) => (\r\n                                            <MenuItem id={resort.resortId} key={resort.resortId} value={resort.resortId}>{resort.resortName}</MenuItem>\r\n                                        ))}\r\n                                </Select>\r\n                                <FormHelperText>Ośrodek narciarski</FormHelperText>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.duration.errorMsg}>\r\n                                <Input\r\n                                    style={{ textAlign: 'right', width: '100%' }}\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"duration\"\r\n                                    value={this.state.duration.value}\r\n                                    placeholder=\"Czas trwania wyjazdu  \"\r\n                                    onChange={(duration) => {\r\n                                        this.onChange(\r\n                                            duration,\r\n                                            validation.validateNumberGreater\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\">\r\n                                <DateTimeInput\r\n                                    style={{ width: '100%' }}\r\n                                    name=\"dateTime\"\r\n                                    startMode=\"year\"\r\n                                    initialDate={new Date()}\r\n                                    clearable={true}\r\n                                    dateFormat=\"YYYY-MM-DD\"\r\n                                    placeholder=\"Data i godzina wyjazdu\"\r\n                                    iconPosition='left'\r\n                                    value={this.state.dateTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.description.errorMsg}>\r\n                                <TextArea\r\n                                    autoComplete=\"off\"\r\n                                    rows=\"3\"\r\n                                    name=\"description\"\r\n                                    value={this.state.description.value}\r\n                                    placeholder=\"Opis\"\r\n                                    onChange={(description) => {\r\n                                        this.onChange(\r\n                                            description,\r\n                                            validation.validateDescription\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem style={{ marginBottom: 6 }}>\r\n                                {this.state.isEditionForm === true && (\r\n                                    <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                            <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                                Powrót\r\n                                            </Button>\r\n                                        </GridColumn>\r\n                                        <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                            <Button\r\n                                                disabled={this.isFormInvalid()}\r\n                                                size=\"small\"\r\n                                                onClick={this.handleSubmitEdit}\r\n                                                style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                                Zaktualizuj wyjazd\r\n                                            </Button>\r\n                                        </GridColumn>\r\n                                    </GridRow>\r\n                                )}\r\n                                {this.state.isEditionForm === false && (\r\n                                <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                        <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                            Powrót\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                        <Button\r\n                                            disabled={this.isFormInvalid()}\r\n                                            size=\"small\"\r\n                                            onClick={this.handleSubmitAdd}\r\n                                            style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                            Stwórz wyjazd\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                                )}\r\n                            </FormItem>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n        }\r\n    }   \r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://ski-with-me.herokuapp.com/api/rating/';\r\n\r\nclass RatingService {\r\n  getRatings() {\r\n    return axios.get(API_URL + 'all', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new RatingService();","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow,\r\n  Segment,\r\n  Image,\r\n  Button\r\n} from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport resortService from \"../../services/resort.service\";\r\nimport ratingService from \"../../services/rating.service\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaMountain } from \"react-icons/fa\";\r\nimport { TiLightbulb } from \"react-icons/ti\";\r\nimport { MdNotInterested } from \"react-icons/md\";\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nclass ResortView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.state = {\r\n      resortDetails: null,\r\n      resortRating: null,\r\n      resortImageLink: null,\r\n      ratings: null,\r\n      lastChange: '',\r\n      avgRat1: 0,\r\n      avgRat2: 0,\r\n      avgRat3: 0,\r\n      avgRat4: 0,\r\n      avgRat5: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n        resortDetails: this.props.location.state.resortDetails\r\n    });\r\n\r\n    var lastChangeCustom = this.props.location.state.resortDetails.lastChange.substring(0, 10) + \" \" + this.props.location.state.resortDetails.lastChange.substring(11, 19);\r\n\r\n    this.setState({\r\n        lastChange: lastChangeCustom\r\n    });\r\n\r\n    this.getRatings().then(ratings => { this.setState({\r\n        ratings: ratings.data\r\n      })})\r\n\r\n    this.getResortApi(this.props.match.params.resortId).then(resort => { if(resort.data.ski_maps[0] !== undefined) { this.setState({\r\n        resortImageLink: resort.data.ski_maps[0].media.original.url\r\n        })\r\n        }\r\n    })\r\n    \r\n    this.getResortRating(this.props.match.params.resortId).then(resortRating => { this.setState({\r\n        resortRating: resortRating.data\r\n      })\r\n\r\n    var counter1 = 0;\r\n    var counter2 = 0;\r\n    var counter3 = 0;\r\n    var counter4 = 0;\r\n    var counter5 = 0;\r\n\r\n    var sum1 = 0;\r\n    var sum2 = 0;\r\n    var sum3 = 0;\r\n    var sum4 = 0;\r\n    var sum5 = 0;\r\n\r\n    var resortArr = this.state.resortRating;\r\n    for(var i = 0; i < resortArr.length; i++) {\r\n        switch(resortArr[i].ratingCategoryId) {\r\n            case 1:\r\n                counter1++;\r\n                sum1 += resortArr[i].grade;\r\n                break;\r\n            case 2:\r\n                counter2++;\r\n                sum2 += resortArr[i].grade;\r\n                break;\r\n            case 3:\r\n                counter3++;\r\n                sum3 += resortArr[i].grade;\r\n                break;\r\n            case 4:\r\n                counter4++;\r\n                sum4 += resortArr[i].grade;\r\n                break;\r\n            case 5:\r\n                counter5++;\r\n                sum5 += resortArr[i].grade;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    var rat1, rat2, rat3, rat4, rat5;\r\n\r\n    if(counter1 === 0) {\r\n        rat1 = 3;\r\n    } else {\r\n        rat1 = sum1/counter1;\r\n    }\r\n\r\n    if(counter2 === 0) {\r\n        rat2 = 3;\r\n    } else {\r\n        rat2 = sum2/counter2;\r\n    }\r\n\r\n    if(counter3 === 0) {\r\n        rat3 = 3;\r\n    } else {\r\n        rat3 = sum3/counter3;\r\n    }\r\n\r\n    if(counter4 === 0) {\r\n        rat4 = 3;\r\n    } else {\r\n        rat4 = sum4/counter4;\r\n    }\r\n\r\n    if(counter5 === 0) {\r\n        rat5 = 3;\r\n    } else {\r\n        rat5 = sum5/counter5;\r\n    }\r\n\r\n    this.setState({\r\n        avgRat1: rat1,\r\n        avgRat2: rat2,\r\n        avgRat3: rat3,\r\n        avgRat4: rat4,\r\n        avgRat5: rat5\r\n    })\r\n    \r\n    var tempDetails = this.state.resortDetails;\r\n\r\n    var temp = tempDetails.temperature.toString();\r\n    var dotIndex = temp.indexOf('.');\r\n    tempDetails.temperature = temp.substring(0, dotIndex + 2);\r\n\r\n    var senTemp = tempDetails.sensedTemperature.toString();\r\n    dotIndex = senTemp.indexOf('.');\r\n    tempDetails.sensedTemperature = senTemp.substring(0, dotIndex + 2);\r\n\r\n    var disTemp = tempDetails.distance.toString();\r\n    dotIndex = disTemp.indexOf('.');\r\n    tempDetails.distance = disTemp.substring(0, dotIndex + 2);\r\n\r\n    var latTemp = tempDetails.latitude.toString();\r\n    dotIndex = latTemp.indexOf('.');\r\n    tempDetails.latitude = latTemp.substring(0, dotIndex + 2);\r\n\r\n    var longTemp = tempDetails.longitude.toString();\r\n    dotIndex = longTemp.indexOf('.');\r\n    tempDetails.longitude = longTemp.substring(0, dotIndex + 2);\r\n\r\n    var windTemp = tempDetails.windSpeed.toString();\r\n    dotIndex = windTemp.indexOf('.');\r\n    tempDetails.windSpeed = windTemp.substring(0, dotIndex + 2);\r\n\r\n    var humTemp = tempDetails.humidity.toString();\r\n    dotIndex = humTemp.indexOf('.');\r\n    tempDetails.humidity = humTemp.substring(0, dotIndex + 2);\r\n\r\n    this.setState({\r\n        resortDetails: tempDetails\r\n    })})\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  getResortApi(id) {\r\n    return resortService.getResortImageApi(id);\r\n  }\r\n\r\n  getResortRating(id) {\r\n    return resortService.getResortRatings(id);\r\n  }\r\n\r\n  getRatings() {\r\n      return ratingService.getRatings();\r\n  }\r\n\r\n  userHasAdminPrivileges() {\r\n    if(AuthService.getCurrentUser() === null) {\r\n        return false;\r\n    }\r\n    if(AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\")) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if(!this.state.resortImage === null || this.state.resortDetails === null || this.state.resortRating === null || this.state.ratings === null || this.state.resortImage === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid columns=\"equal\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n            <Segment padded>\r\n            <Grid columns=\"equal\">\r\n                <GridRow columns={3} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                        <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                            Powrót\r\n                        </Button>\r\n                    </GridColumn>\r\n                    <GridColumn textAlign=\"center\" style={{padding: 5, paddingBottom: 15}}>\r\n                        <h1 style={{ fontWeight: \"bold\", color: Colors.primary }}>{this.state.resortDetails.resortName}</h1>\r\n                    </GridColumn>\r\n                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                        {(this.userHasAdminPrivileges()) && (\r\n                            <Link\r\n                                style={{ padding: 5 }}\r\n                                to={{\r\n                                    pathname: `../resortForm/${this.state.resortDetails.resortId}`, \r\n                                    state: { resort: this.state.resortDetails }\r\n                                }}\r\n                            >\r\n                                <Button id=\"settings\" style={{ backgroundColor: Colors.primary, color: Colors.background, width: 200 }} size=\"small\">\r\n                                    <Button.Content visible style={{ color: Colors.background }}>Zmień dane ośrodka</Button.Content>\r\n                                </Button>\r\n                            </Link>\r\n                        )}\r\n                    </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={2} stretched style={{padding: 5}}>\r\n                    <GridRow columns={9} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Dane o ośrodku:</h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Odległość od obecnej lokalizacji: {this.state.resortDetails.distance}km</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Długość geograficzna: {this.state.resortDetails.longitude}°</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Szerokość geograficzna: {this.state.resortDetails.latitude}°</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Liczba wyciągów: {this.state.resortDetails.liftCount}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Liczba tras: {this.state.resortDetails.runCount}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            {this.state.resortDetails.nightSkiing === true &&\r\n                                <h4 title=\"Nocne jazdy możliwe\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.resortDetails.nightSkiing} <TiLightbulb tooltip=\"Nocne jazdy możliwe\"/></h4>\r\n                            }\r\n                            {this.state.resortDetails.nightSkiing === false &&\r\n                                <h4 title=\"Brak nocnych jazd\" style={{ fontWeight: \"bold\" }}>Nocne jazdy: {this.state.resortDetails.nightSkiing} <MdNotInterested tooltip=\"Brak nocnych jazd\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            {this.state.resortDetails.terrainPark === true &&\r\n                                <h4 title=\"Jazda terenowa dostępna\" style={{ fontWeight: \"bold\" }}>Jazdy terenowe: {this.state.resortDetails.terrainPark} <FaMountain tooltip=\"Jazda terenowa dostępna\"/></h4>\r\n                            }\r\n                            {this.state.resortDetails.terrainPark === false &&\r\n                                <h4 title=\"Brak jazd terenowych\" style={{ fontWeight: \"bold\" }}>Jazdy terenowe: {this.state.resortDetails.terrainPark} <MdNotInterested tooltip=\"Brak jazd terenowych\"/></h4>\r\n                            }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Region: {this.state.resortDetails.region}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={9} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Warunki pogodowe: </h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Temperatura: {this.state.resortDetails.temperature}℃</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Temperatura odczuwalna: {this.state.resortDetails.sensedTemperature}℃</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Grubość pokrywy śnieżnej: {this.state.resortDetails.snowThickness}cm</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Prędkość wiatru: {this.state.resortDetails.windSpeed}m/s</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Wilgotność: {this.state.resortDetails.humidity}%</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>Zachmurzenie: {this.state.resortDetails.clouds}%</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}><h4 style={{ fontWeight: \"bold\", color: \"white\" }}>&nbsp;</h4></GridColumn>\r\n                        <GridColumn floated=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                            <h4 style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>Ostatnia aktualizacja: {this.state.lastChange}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={2} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                    <GridRow columns={6} stretched style={{padding: 5}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Oceny: </h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[0].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[1].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[2].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[3].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[4].ratingCategoryName}</h4>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow columns={6} stretched style={{padding: 5, paddingLeft: 30}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15}}>\r\n                        {(AuthService.getCurrentUser() !== null) && \r\n                            <Link\r\n                                to={{\r\n                                pathname: `../gradeResort/${this.props.location.state.resortDetails.resortId}`,\r\n                                state: { resortDetails: this.props.location.state.resortDetails },\r\n                                }}\r\n                            >\r\n                                <Button id={this.state.resortId} style={{ backgroundColor: Colors.primary, color: Colors.background, width: 240 }} size=\"small\">\r\n                                    <Button.Content visible style={{ color: Colors.background }}>Oceń ośrodek</Button.Content>\r\n                                </Button>\r\n                            </Link>\r\n                        }\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat1}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat2}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat3}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat4}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\">\r\n                            <StarRatings\r\n                                rating={this.state.avgRat5}\r\n                                starRatedColor={Colors.primary}\r\n                                numberOfStars={5}\r\n                                starSpacing=\"5px\"\r\n                                starDimension=\"40px\"/>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                    <GridRow columns={1} stretched style={{padding: 5}}>\r\n                        <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5}}>\r\n                            <h3 style={{ fontWeight: \"bold\" }}>Mapa tras: </h3>\r\n                        </GridColumn>\r\n                        <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 5}}>\r\n                            { this.state.resortImageLink === null ? \r\n                            (\r\n                                <h4 style={{ fontWeight: \"bold\" }}>Brak mapy tras dla tego ośrodka</h4>\r\n                            ) : (\r\n                            <Image\r\n                                fluid\r\n                                bordered\r\n                                rounded\r\n                                centered\r\n                                src={this.state.resortImageLink}/>\r\n                            )}\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                    <GridRow columns={1} stretched textAlign=\"center\" style={{padding: 5}}>\r\n                        <div xmlns=\"http://creativecommons.org/ns#\" about=\"https://skimap.org/\"><a rel=\"cc:attributionURL\" property=\"cc:attributionName\" href=\"https://skimap.org/\">\r\n                        Maps provided by Skimap.org</a> / <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/us/\">CC BY-NC-SA 3.0</a></div>\r\n                    </GridRow>\r\n                </GridRow>\r\n            </Grid>\r\n            </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ResortView);","import React, { Component } from \"react\";\r\nimport ResortService from \"../../services/resort.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form, Checkbox } from \"antd\";\r\nimport { Grid, Segment, Button, Container, GridColumn, GridRow } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { FaSkiing, FaSnowboarding } from 'react-icons/fa';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ResortForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n        resortName: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        runCount: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        liftCount: {\r\n            value: '',\r\n            validateStatus: ''\r\n        },\r\n        terrainPark: '',\r\n        nightSkiing: ''\r\n    };\r\n    this.handleEditResort = this.handleEditResort.bind(this);\r\n    this.toggleTerrainPark = this.toggleTerrainPark.bind(this);\r\n    this.toggleNightSkiing = this.toggleNightSkiing.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n        resortName: {\r\n            value: this.props.location.state.resort.resortName,\r\n            validateStatus: ''\r\n        },\r\n        runCount: {\r\n            value: this.props.location.state.resort.runCount,\r\n            validateStatus: ''\r\n        },\r\n        liftCount: {\r\n            value: this.props.location.state.resort.liftCount,\r\n            validateStatus: ''\r\n        },\r\n        terrainPark: this.props.location.state.resort.terrainPark,\r\n        nightSkiing: this.props.location.state.resort.nightSkiing\r\n    });\r\n  }\r\n  \r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  toggleTerrainPark() {\r\n    var actualValue = this.state.terrainPark;\r\n\r\n    this.setState({\r\n        terrainPark: !actualValue\r\n    });\r\n  }\r\n\r\n  toggleNightSkiing() {\r\n    var actualValue = this.state.nightSkiing;\r\n\r\n    this.setState({\r\n        nightSkiing: !actualValue\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  handleEditResort(e) {\r\n    e.preventDefault();\r\n\r\n    var resortObject = {\r\n        resortName: this.state.resortName.value,\r\n        runCount: this.state.runCount.value,\r\n        liftCount: this.state.liftCount.value,\r\n        terrainPark: this.state.terrainPark,\r\n        nightSkiing: this.state.nightSkiing,\r\n        resortId: this.props.location.state.resort.resortId\r\n    }\r\n\r\n  ResortService.editResort(\r\n    resortObject\r\n  )\r\n  .then(\r\n    () => {\r\n      notification.success({\r\n        message: \"Zmieniono dane ośrodka!\",\r\n        description:\r\n            \"Dane ośrodka narciarskiego zostały zmienione!\",\r\n      });\r\n\r\n      this.props.history.push(`../resorts`);\r\n  })\r\n  .catch((error) => {\r\n    notification.error({\r\n        message: \"Nieudana zmiana danych ośrodka!\",\r\n        description:\r\n            \"Dane ośrodka narciarskiego nie zostały zmienione!\",\r\n    });\r\n  });\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.resortName.validateStatus === \"error\" || this.state.runCount.validateStatus === \"error\" || this.state.liftCount.validateStatus === \"error\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isEditionForm === null || this.state.duration === null || this.state.dateTime === null || this.state.description === null || this.state.resorts === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={12} tablet={10} computer={8}>\r\n                <Segment id=\"segmentId\" padded>\r\n                    <Container>\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid.Column>\r\n                                <h2 style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 30 }}>Edycja ośrodka</h2>\r\n                            </Grid.Column>\r\n                            <FormItem\r\n                                style={{ marginBottom: 10 }}\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.resortName.errorMsg}>\r\n                                <label style={{ textAlign: 'left', margin: 0, marginBottom: 5 }}>Nazwa ośrodka narciarskiego</label>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"resortName\"\r\n                                    value={this.state.resortName.value}\r\n                                    placeholder=\"Nazwa ośrodka narciarskiego\"\r\n                                    onChange={(resortName) => {\r\n                                        this.onChange(\r\n                                            resortName,\r\n                                            validation.validateDescription\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                style={{ marginBottom: 10 }}\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.runCount.errorMsg}>\r\n                                <label style={{ textAlign: 'left', margin: 0, marginBottom: 5 }}>Liczba tras zjazdowych</label>\r\n                                <Input\r\n                                    style={{ textAlign: 'right', width: '100%' }}\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"runCount\"\r\n                                    value={this.state.runCount.value}\r\n                                    placeholder=\"Liczba tras zjazdowych  \"\r\n                                    onChange={(runCount) => {\r\n                                        this.onChange(\r\n                                            runCount,\r\n                                            validation.validateNumberGreater\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                style={{ marginBottom: 10 }}\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                help={this.state.liftCount.errorMsg}>\r\n                                <label style={{ textAlign: 'left', margin: 0, marginBottom: 5 }}>Liczba wyciągów</label>\r\n                                <Input\r\n                                    style={{ textAlign: 'right', width: '100%' }}\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"liftCount\"\r\n                                    value={this.state.liftCount.value}\r\n                                    placeholder=\"Liczba wyciągów  \"\r\n                                    onChange={(liftCount) => {\r\n                                        this.onChange(\r\n                                            liftCount,\r\n                                            validation.validateNumberGreater\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <Grid columns=\"equal\" textAlign=\"left\">\r\n                                <GridRow columns={2} verticalAlign=\"middle\" centered stretched style={{paddingBottom: 10, padding: 5, marginTop: 10}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingLeft: 11}}>\r\n                                        <FormItem autoComplete=\"off\">\r\n                                            <Checkbox onChange={this.toggleTerrainPark} name=\"terrainPark\" checked={this.state.terrainPark}>Ski Park <FaSnowboarding/></Checkbox>\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingLeft: 11}}>\r\n                                        <FormItem autoComplete=\"off\">\r\n                                            <Checkbox onChange={this.toggleNightSkiing} name=\"nightSkiing\" checked={this.state.nightSkiing}>Nocne jazdy <FaSkiing/></Checkbox>\r\n                                        </FormItem>  \r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <FormItem style={{ marginBottom: 6 }}>\r\n                                <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                        <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                            Powrót\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                        <Button\r\n                                            disabled={this.isFormInvalid()}\r\n                                            size=\"small\"\r\n                                            onClick={this.handleEditResort}\r\n                                            style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                            Zaktualizuj dane ośrodka\r\n                                        </Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n        }\r\n    }   \r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ResortService from \"../../services/resort.service\";\r\nimport RatingService from \"../../services/rating.service\";\r\nimport { Form } from \"antd\";\r\nimport { GridColumn, GridRow, Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class GradeResort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.submitGrade = this.submitGrade.bind(this);\r\n\r\n    this.state = {\r\n      category1: 3,\r\n      category2: 3,\r\n      category3: 3,\r\n      category4: 3,\r\n      category5: 3,\r\n      resortDetails: null,\r\n      ratings: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n        resortDetails: this.props.location.state.resortDetails\r\n    });\r\n\r\n    this.getRatings().then(ratings => { this.setState({\r\n        ratings: ratings.data\r\n      })})\r\n  }\r\n\r\n  getRatings() {\r\n    return RatingService.getRatings();\r\n  }\r\n\r\n  goBack() {\r\n      this.props.history.goBack();\r\n  }\r\n\r\n  submitGrade(e) {\r\n    e.preventDefault();\r\n\r\n    var resortGradeRequest = {\r\n        resortId: this.state.resortDetails.resortId,\r\n        category1: this.state.category1,\r\n        category2: this.state.category2,\r\n        category3: this.state.category3,\r\n        category4: this.state.category4,\r\n        category5: this.state.category5\r\n    }\r\n    \r\n    ResortService.submitGrade(\r\n      resortGradeRequest,\r\n      AuthService.getCurrentUser().username\r\n    )\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Oceniono!\",\r\n          description:\r\n              \"Udana próba ocenienia ośrodka!\",\r\n        });\r\n\r\n        this.props.history.goBack();\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Ocena nieudana!\",\r\n          description:\r\n              \"Nieudana próba ocenienia ośrodka!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.resortDetails === null || this.state.ratings === null) {\r\n        return <LoadingIndicator/>\r\n    } else {\r\n        return (\r\n        <Grid textAlign=\"center\">\r\n            <Grid.Column mobile={12} tablet={10} computer={9}>\r\n            <Segment padded>\r\n                <Container>\r\n                    <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                        <Grid.Column>\r\n                            <h2 title=\"Rejestracja\" style={{ fontWeight: \"bold\", textAlign: \"center\", marginBottom: 30 }}>Ocena ośrodka {this.state.resortDetails.resortName}</h2>\r\n                        </Grid.Column>\r\n                        <Grid columns=\"equal\">\r\n                            <GridRow columns={2} stretched style={{padding: 5, paddingLeft: 50, paddingTop: 0}}>\r\n                                <GridRow columns={1} stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[0].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[1].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[2].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[3].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5, paddingTop: 25}}>\r\n                                        <h4 style={{ fontWeight: \"bold\" }}>{this.state.ratings[4].ratingCategoryName}</h4>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                                <GridRow columns={1} stretched style={{padding: 5}}>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category1}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category1': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category1'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category2}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category2': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category2'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category3}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category3': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category3'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category4}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category4': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category4'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                    <GridColumn floated=\"left\" textAlign=\"left\" verticalAlign=\"middle\" style={{padding: 5}}>\r\n                                        <FormItem\r\n                                            style={{margin: 5}}\r\n                                            autoComplete=\"off\">\r\n                                                <StarRatings\r\n                                                    rating={this.state.category5}\r\n                                                    starRatedColor={Colors.primary}\r\n                                                    starHoverColor={Colors.primary}\r\n                                                    changeRating={(rating) => {\r\n                                                        this.setState({\r\n                                                            'category5': rating\r\n                                                        });\r\n                                                    }}\r\n                                                    numberOfStars={5}\r\n                                                    starSpacing=\"5px\"\r\n                                                    starDimension=\"40px\"\r\n                                                    name='category5'\r\n                                                    />\r\n                                        </FormItem>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </GridRow>\r\n                        </Grid>\r\n                        <FormItem style={{ marginBottom: 1, marginTop: 20 }}>\r\n                            <GridRow columns={2} textAlign=\"center\" verticalAlign=\"middle\" centered stretched style={{padding: 5}}>\r\n                                <GridColumn floated=\"left\" textAlign=\"left\" style={{padding: 5, paddingBottom: 15, paddingLeft: 20}}>\r\n                                    <Button id=\"goBack\" basic style={{ width: 200, backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginBottom: 5 }} size=\"small\" onClick={() => this.goBack()}>\r\n                                        Powrót\r\n                                    </Button>\r\n                                </GridColumn>\r\n                                <GridColumn floated=\"right\" textAlign=\"right\" style={{padding: 5, paddingBottom: 15, paddingRight: 20}}>\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        onClick={this.submitGrade}\r\n                                        style={{ width: 200, backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                        Oceń ośrodek\r\n                                    </Button>\r\n                                </GridColumn>\r\n                            </GridRow>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Container>\r\n            </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n        );\r\n        }\r\n    }   \r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form } from \"antd\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class PasswordChange extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      currentUser: '',\r\n      password: {\r\n        value: '',\r\n        validateStatus: \"error\"\r\n      },\r\n      passwordConfirmation: {\r\n        value: '',\r\n        validateStatus: \"error\"\r\n      },\r\n      oldPassword: {\r\n        value: '',\r\n        validateStatus: \"error\"\r\n      }\r\n    };\r\n    \r\n    this.validatePasswordConfirmation = this.validatePasswordConfirmation.bind(this);\r\n    this.validatePassword = this.validatePassword.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleGoBack = this.handleGoBack.bind(this);\r\n  }\r\n\r\n  handleGoBack() {\r\n    this.props.history.push(`../profile`);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const passwordChangeRequest = {\r\n        password: this.state.password.value,\r\n        oldPassword: this.state.oldPassword.value\r\n    };\r\n\r\n    UserService\r\n        .changePassword(passwordChangeRequest, AuthService.getCurrentUser().username)\r\n        .then((response) => {\r\n            notification.success({\r\n                message: \"Hasło zostało zmienione!\",\r\n                description:\r\n                    \"Udana zmiana hasła!\",\r\n            });\r\n\r\n            this.props.history.push(`../profile`);\r\n        })\r\n        .catch((error) => {\r\n            notification.error({\r\n                message: \"Nieudana zmiana hasła!\",\r\n                description:\r\n                    \"Podano niepoprawne hasło!\",\r\n            });\r\n        });\r\n    }\r\n\r\n    onChange (event, validationFunction) {\r\n        const target = event.target;\r\n        const inputValue = target.value;\r\n        const inputName = target.name;\r\n\r\n        this.getCurrentUser(AuthService.getCurrentUser().username).then(user => { this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFunction(inputValue),\r\n            },\r\n        })\r\n\r\n        if(inputName === \"password\") {\r\n            const passwordConfirmation = {\r\n                target: {\r\n                  value: this.state.passwordConfirmation.value,\r\n                  name: \"passwordConfirmation\",\r\n                },\r\n              };\r\n            \r\n            this.onChange(passwordConfirmation, this.validatePasswordConfirmation); \r\n        }\r\n    })\r\n    }\r\n\r\n    isFormInvalid() {\r\n        if(!this.state.password === this.state.passwordConfirmation) {\r\n            return true;\r\n        }\r\n\r\n        if(this.state.password.validateStatus === \"error\" || this.state.oldPassword.validateStatus === \"error\" || this.state.passwordConfirmation.validateStatus === \"error\") {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validatePassword (password) {\r\n        const pattern = new RegExp(\"[0-9]\");\r\n    \r\n        if (password.length < 7) {\r\n            return {\r\n                validateStatus: \"error\",\r\n                errorMsg: `Hasło jest zbyt krótkie, wymagane jest 7 znaków!`,\r\n            };\r\n        } else if (!pattern.test(password)) {\r\n            return {\r\n                validateStatus: \"error\",\r\n                errorMsg: `Hasło powinno zawierać co najmniej jedną cyfrę!`,\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: \"success\",\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    }\r\n\r\n    validatePasswordConfirmation(confirmPassword) {\r\n        if (confirmPassword !== this.state.password.value) {\r\n            return {\r\n              validateStatus: \"error\",\r\n              errorMsg: `Hasła się nie zgadzają!`,\r\n            };\r\n          }\r\n          return {\r\n            validateStatus: \"success\",\r\n            errorMsg: null,\r\n          };\r\n      }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser(AuthService.getCurrentUser().username).then(user => { this.setState({\r\n      currentUser: user.data\r\n    })});\r\n  }\r\n\r\n  getCurrentUser(username) {\r\n    return UserService.getUserFromUsername(username);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <Grid>\r\n            <Grid.Column mobile={16} tablet={14} computer={12}>\r\n                <Segment padded>\r\n                    <Container text>\r\n                        <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                            <Grid.Column>\r\n                                <h3 style={{ fontWeight: \"bold\", color: Colors.primary, textAlign: \"center\", padding: 20 }}>Zmiana hasła </h3>\r\n                            </Grid.Column>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                validateStatus={this.state.oldPassword.validateStatus}\r\n                                help={this.state.oldPassword.errorMsg}>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"oldPassword\"\r\n                                    type=\"password\"\r\n                                    value={this.state.oldPassword.value}\r\n                                    placeholder=\"Stare hasło\"\r\n                                    onChange={(oldPassword) => {\r\n                                        this.onChange(\r\n                                            oldPassword,\r\n                                            validation.validateSuccess\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                validateStatus={this.state.password.validateStatus}\r\n                                help={this.state.password.errorMsg}>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.password.value}\r\n                                    placeholder=\"Nowe hasło\"\r\n                                    onChange={(password) => {\r\n                                        this.onChange(\r\n                                            password,\r\n                                            this.validatePassword\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                hasFeedback\r\n                                autoComplete=\"off\"\r\n                                validateStatus={this.state.passwordConfirmation.validateStatus}\r\n                                help={this.state.passwordConfirmation.errorMsg}>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    name=\"passwordConfirmation\"\r\n                                    type=\"password\"\r\n                                    value={this.state.passwordConfirmation.value}\r\n                                    placeholder=\"Potwierdź nowe hasło\"\r\n                                    onChange={(passwordConfirmation) => {\r\n                                        this.onChange(\r\n                                            passwordConfirmation,\r\n                                            this.validatePasswordConfirmation\r\n                                        );\r\n                                    }}/>\r\n                            </FormItem>\r\n                            <FormItem style={{ marginBottom: 6 }}>\r\n                                <Button\r\n                                    floated=\"right\"\r\n                                    disabled={this.isFormInvalid()}\r\n                                    size=\"small\"\r\n                                    onClick={this.handleSubmit}\r\n                                    style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                    Zatwierdź\r\n                                </Button>\r\n                                <Button\r\n                                    floated=\"right\"\r\n                                    size=\"small\"\r\n                                    basic\r\n                                    onClick={this.handleGoBack}\r\n                                    style={{ backgroundColor: Colors.background, color: \"black\", fontWeight: \"bold\", marginRight: 15 }}>\r\n                                    Powrót\r\n                                </Button>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { validation } from \"../../common/validation-rules\";\r\nimport { Input, Form, Checkbox } from \"antd\";\r\nimport { Grid, Segment, Button, Container } from \"semantic-ui-react\";\r\nimport { Colors } from \"../../constants\";\r\nimport { notification } from \"antd\";\r\nimport { FaSkiing, FaSnowboarding } from 'react-icons/fa';\r\nimport { IoIosPerson } from 'react-icons/io';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst FormItem = Form.Item;\r\n\r\nexport default class UserDataChange extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n    \r\n    this.handleDataChange = this.handleDataChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.toggleSkiing = this.toggleSkiing.bind(this);\r\n    this.toggleSnowboarding = this.toggleSnowboarding.bind(this);\r\n\r\n    this.state = {\r\n      username: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      email: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      name: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      surname: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      phoneNumber: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      description: {\r\n        value: '',\r\n        validateStatus: \"\"\r\n      },\r\n      skiing: false,\r\n      snowboarding: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var usernameObj = {\r\n        value: this.props.location.state.userData.username,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var emailObj = {\r\n        value: this.props.location.state.userData.email,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var nameObj = {\r\n        value: this.props.location.state.userData.name,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var surnameObj = {\r\n        value: this.props.location.state.userData.surname,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var phoneNumberObj = {\r\n        value: this.props.location.state.userData.phoneNumber,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    var descriptionObj = {\r\n        value: this.props.location.state.userData.description,\r\n        validateStatus: \"\"\r\n    }\r\n\r\n    this.setState(() => ({\r\n        username: usernameObj,\r\n        email: emailObj,\r\n        name: nameObj,\r\n        surname: surnameObj,\r\n        phoneNumber: phoneNumberObj,\r\n        description: descriptionObj,\r\n        skiing: this.props.location.state.userData.skier,\r\n        snowboarding: this.props.location.state.userData.snowboarder\r\n      })\r\n    );\r\n}\r\n\r\n  onChange(event, validationFunction) {\r\n    const target = event.target;\r\n    const inputValue = target.value;\r\n    const inputName = target.name;\r\n\r\n    this.setState({\r\n        [inputName]: {\r\n            value: inputValue,\r\n            ...validationFunction(inputValue),\r\n        },\r\n    })\r\n  }\r\n\r\n  toggleSkiing() {\r\n    var actualValue = this.state.skiing;\r\n\r\n    this.setState({\r\n      skiing: !actualValue\r\n    });\r\n  }\r\n\r\n  toggleSnowboarding() {\r\n    var actualValue = this.state.snowboarding;\r\n\r\n    this.setState({\r\n      snowboarding: !actualValue\r\n    });\r\n  }\r\n\r\n  isFormInvalid() {\r\n    if(this.state.username.validateStatus === \"error\" || this.state.email.validateStatus === \"error\" || this.state.name.validateStatus === \"error\"\r\n    || this.state.surname.validateStatus === \"error\" || this.state.phoneNumber.validateStatus === \"error\" || this.state.description.validateStatus === \"error\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleDataChange(e) {\r\n    e.preventDefault();\r\n\r\n    var userDataRequest= {\r\n        username: this.state.username.value,\r\n        email: this.state.email.value,\r\n        name: this.state.name.value,\r\n        surname: this.state.surname.value,\r\n        phoneNumber: this.state.phoneNumber.value,\r\n        description: this.state.description.value,\r\n        skiing: this.state.skiing,\r\n        snowboarding: this.state.snowboarding\r\n    }\r\n    \r\n    UserService.updateUserData(\r\n      userDataRequest,\r\n      this.state.username.value\r\n    )\r\n    .then(\r\n      () => {\r\n        notification.success({\r\n          message: \"Zmieniono dane!\",\r\n          description:\r\n              \"Udana zmiana danych użytkownika!\",\r\n        });\r\n\r\n        this.props.history.push(`../profile`);\r\n    })\r\n    .catch((error) => {\r\n      notification.error({\r\n          message: \"Zmiana danych nieudana!\",\r\n          description:\r\n              \"Nieudana zmiana danych użytkownika!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={12} tablet={9} computer={6}>\r\n          <Segment padded>\r\n              <Container>\r\n                  <Form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                      <Grid.Column>\r\n                          <h4 title=\"Zmiana danych\" style={{ fontWeight: \"bold\", textAlign: \"center\", paddingBottom: 20 }}><IoIosPerson size=\"100px\" tooltip=\"Zmiana danych\"/></h4>\r\n                      </Grid.Column>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.username.validateStatus}\r\n                          help={this.state.username.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              disabled\r\n                              name=\"username\"\r\n                              value={this.state.username.value}\r\n                              placeholder=\"Nazwa użytkownika\"\r\n                              onChange={(username) => {\r\n                                  this.onChange(\r\n                                      username,\r\n                                      validation.validateUsername\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.email.validateStatus}\r\n                          help={this.state.email.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"email\"\r\n                              value={this.state.email.value}\r\n                              placeholder=\"Email\"\r\n                              onChange={(email) => {\r\n                                  this.onChange(\r\n                                    email,\r\n                                      validation.validateEmail\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.name.validateStatus}\r\n                          help={this.state.name.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"name\"\r\n                              value={this.state.name.value}\r\n                              placeholder=\"Imię\"\r\n                              onChange={(name) => {\r\n                                  this.onChange(\r\n                                      name,\r\n                                      validation.validateName\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.surname.validateStatus}\r\n                          help={this.state.surname.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"surname\"\r\n                              value={this.state.surname.value}\r\n                              placeholder=\"Nazwisko\"\r\n                              onChange={(surname) => {\r\n                                  this.onChange(\r\n                                      surname,\r\n                                      validation.validateSurname\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.phoneNumber.validateStatus}\r\n                          help={this.state.phoneNumber.errorMsg}>\r\n                          <Input\r\n                              autoComplete=\"off\"\r\n                              name=\"phoneNumber\"\r\n                              value={this.state.phoneNumber.value}\r\n                              placeholder=\"Numer telefonu\"\r\n                              onChange={(phoneNumber) => {\r\n                                  this.onChange(\r\n                                      phoneNumber,\r\n                                      validation.validatePhoneNumber\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <FormItem\r\n                          hasFeedback\r\n                          autoComplete=\"off\"\r\n                          validateStatus={this.state.description.validateStatus}\r\n                          help={this.state.description.errorMsg}>\r\n                          <TextArea\r\n                              autoComplete=\"off\"\r\n                              rows=\"3\"\r\n                              name=\"description\"\r\n                              value={this.state.description.value}\r\n                              placeholder=\"Opis\"\r\n                              onChange={(description) => {\r\n                                  this.onChange(\r\n                                      description,\r\n                                      validation.validateDescription\r\n                                  );\r\n                              }}/>\r\n                      </FormItem>\r\n                      <Grid textAlign=\"left\">\r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 6 }}>\r\n                          <Checkbox onChange={this.toggleSnowboarding} name=\"snowboarding\" checked={this.state.snowboarding}>Umiejętność jeżdżenia na snowboardzie <FaSnowboarding/></Checkbox>\r\n                        </FormItem>  \r\n                        <FormItem autoComplete=\"off\" style={{ marginBottom: 26 }}>\r\n                          <Checkbox onChange={this.toggleSkiing} name=\"skiing\" checked={this.state.skiing}>Umiejętność jeżdżenia na nartach <FaSkiing/></Checkbox>\r\n                        </FormItem>  \r\n                      </Grid>\r\n                      <FormItem style={{ marginBottom: 6 }}>\r\n                          <Button\r\n                              disabled={this.isFormInvalid()}\r\n                              size=\"small\"\r\n                              onClick={this.handleDataChange}\r\n                              style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                              Zmień dane\r\n                          </Button>\r\n                      </FormItem>\r\n                  </Form>\r\n              </Container>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst NEWS_URL = 'https://ski-with-me.herokuapp.com/api/news/';\r\n\r\nclass NewsService {\r\n  getUpcomingTrips(username) {\r\n    return axios.get(NEWS_URL + 'upcoming/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getPastTrips(username) {\r\n    return axios.get(NEWS_URL + 'past/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getUpcomingAcquaintancesTrips(username) {\r\n    return axios.get(NEWS_URL + 'upcomingAcquaintancesTrips/' + username, { headers: authHeader() });\r\n  }\r\n\r\n  getAcquaintancesTripsReports(username) {\r\n    return axios.get(NEWS_URL + 'acquaintancesTripsReports/' + username, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new NewsService();","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow\r\n} from \"semantic-ui-react\";\r\n\r\nclass TripCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resortName: null,\r\n      departureDate: null,\r\n      departureTime: null,\r\n      arrivalDate: null,\r\n      description: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    var tripDate = this.props.trip.tripDate;\r\n    var daysNumber = this.props.trip.daysNumber;\r\n\r\n    var departureDate = tripDate.toString().substring(0, 10);\r\n    var departureTime = tripDate.toString().substring(11, 16);\r\n\r\n    var tripDateArrival = new Date(departureDate);\r\n    tripDateArrival.setDate(tripDateArrival.getDate() + parseInt(daysNumber));\r\n    let monthArrival = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(tripDateArrival.toString().substring(4, 7)) / 3 + 1;\r\n    if(monthArrival < 10)\r\n      monthArrival = \"0\" + monthArrival.toString();\r\n    var arrivalFormated = tripDateArrival.toString().substring(11, 15) + \"-\" + monthArrival + \"-\" + tripDateArrival.toString().substring(8, 10);\r\n\r\n    this.setState({\r\n      resortName: this.props.trip.resortName,\r\n      departureDate: departureDate,\r\n      departureTime: departureTime,\r\n      arrivalDate: arrivalFormated,\r\n      description: this.props.trip.description\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid columns=\"equal\" style={{ height: 150 }}>\r\n        <GridRow columns={1} stretched style={{ padding: 5 }}>\r\n          <GridRow columns={1} stretched style={{ padding: 5, paddingLeft: 35 }}>\r\n            <GridColumn textAlign=\"center\" width={12} style={{ padding: 3 }}>\r\n              <h4 style={{ fontWeight: \"bold\", width: 430 }}>{this.state.resortName}</h4>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Data wyjazdu: {this.state.departureDate}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Godzina wyjazdu: {this.state.departureTime}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>Data powrotu: {this.state.arrivalDate}</h5>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" width={12} style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\", width: \"90%\" }}>{this.state.description}</h5>\r\n            </GridColumn>\r\n          </GridRow>\r\n        </GridRow>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TripCard);","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  GridRow\r\n} from \"semantic-ui-react\";\r\n\r\nclass ReportCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resortName: null,\r\n      daysNumber: null,\r\n      name: null,\r\n      userTripDescription: null\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      resortName: this.props.report.resortName,\r\n      daysNumber: this.props.report.daysNumber,\r\n      name: this.props.report.name,\r\n      userTripDescription: this.props.report.userTripDescription\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid style={{ height: 150 }}>\r\n        <GridRow columns={1} stretched style={{ padding: 5 }}>\r\n          <GridRow columns={1} stretched style={{ padding: 5, paddingLeft: 35 }}>\r\n            <GridColumn textAlign=\"center\" style={{ padding: 3 }}>\r\n              <h4 style={{ fontWeight: \"bold\", width: 430, marginBottom: 3 }}>{this.state.name} brał(a) udział w {this.state.daysNumber} dniowym wyjeździe w ośrodku</h4>\r\n              <h4 style={{ fontWeight: \"bold\", width: 430, marginTop: 3 }}>{this.state.resortName}</h4>\r\n            </GridColumn>\r\n            <GridColumn verticalAlign=\"middle\" style={{ padding: 3 }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>\"{this.state.userTripDescription}\"</h5>\r\n            </GridColumn>\r\n          </GridRow>\r\n        </GridRow>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ReportCard);","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport NewsService from \"../../services/news.service\";\r\nimport { Grid, Segment, GridRow, GridColumn } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { Colors } from \"../../constants\";\r\nimport TripCard from \"./trip-card\";\r\nimport ReportCard from \"./report-card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class News extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    document.title = \"SkiWithMe\";\r\n\r\n    this.state = {\r\n      username: AuthService.getCurrentUser().username,\r\n      upcomingTrips: null,\r\n      pastTrips: null,\r\n      upcomingAcquaintancesTrips: null,\r\n      acquaintancesTripsReports: null,\r\n      tripReportMax: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUpcomingTrips(AuthService.getCurrentUser().username).then(upcomingTrips => { this.setState({\r\n        upcomingTrips: upcomingTrips.data.content\r\n    })});\r\n    \r\n    this.getPastTrips(AuthService.getCurrentUser().username).then(pastTrips => { this.setState({\r\n        pastTrips: pastTrips.data.content\r\n    })});\r\n\r\n    let maxTripReports = 1;\r\n\r\n    this.getUpcomingAcquaintancesTrips(AuthService.getCurrentUser().username).then(upcomingAcquaintancesTrips => { this.setState({\r\n        upcomingAcquaintancesTrips: upcomingAcquaintancesTrips.data.content\r\n    })\r\n        if(maxTripReports < this.state.upcomingAcquaintancesTrips.length) {\r\n            maxTripReports = this.state.upcomingAcquaintancesTrips.length;\r\n        }\r\n    });\r\n\r\n    this.getAcquaintancesTripsReports(AuthService.getCurrentUser().username).then(acquaintancesTripsReports => { this.setState({\r\n        acquaintancesTripsReports: acquaintancesTripsReports.data.content\r\n    })\r\n        if(maxTripReports < this.state.acquaintancesTripsReports.length) {\r\n            maxTripReports = this.state.acquaintancesTripsReports.length;\r\n        }\r\n    });\r\n\r\n    this.setState({\r\n        tripReportMax: maxTripReports\r\n    })\r\n  }\r\n\r\n  getUpcomingTrips(username) {\r\n    return NewsService.getUpcomingTrips(username);\r\n  }\r\n\r\n  getPastTrips(username) {\r\n    return NewsService.getPastTrips(username);\r\n  }\r\n\r\n  getUpcomingAcquaintancesTrips(username) {\r\n    return NewsService.getUpcomingAcquaintancesTrips(username);\r\n  }\r\n\r\n  getAcquaintancesTripsReports(username) {\r\n    return NewsService.getAcquaintancesTripsReports(username);\r\n  }\r\n\r\n  render() {\r\n    if(this.state.upcomingTrips === null || this.state.pastTrips === null || this.state.upcomingAcquaintancesTrips === null || this.state.acquaintancesTripsReports === null) {\r\n      return <LoadingIndicator/>\r\n    } else {\r\n      return (\r\n        <Grid textAlign=\"center\">\r\n        <Grid.Column mobile={16} tablet={16} computer={14}>\r\n          <Segment padded>\r\n            <Grid textAlign=\"left\">\r\n              <GridRow columns={1} style={{padding: 5}}>\r\n                <GridColumn textAlign=\"center\" verticalAlign=\"middle\" style={{padding: 3}}>\r\n                    <h2 style={{ fontWeight: \"bold\", color: Colors.primary }}>Tablica aktualności</h2>\r\n                </GridColumn>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5}}>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Ostatnie wyjazdy:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Zaplanowane wyjazdy:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5}}>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.pastTrips.length === 0 ? (\r\n                            <h3>Brak przeszłych wyjazdów do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            <GridColumn floated=\"left\" stretched width={12} style={{padding: 3}}>\r\n                                {this.state.pastTrips[0] !== undefined && (\r\n                                <Link to={{ pathname: `/tripView/${this.state.pastTrips[0].tripId}`, state: { trip: this.state.pastTrips[0] } }}>\r\n                                    <Segment key={this.state.pastTrips[0].tripId} color=\"red\" inverted tertiary>\r\n                                        <TripCard trip={this.state.pastTrips[0]}/>\r\n                                    </Segment>\r\n                                </Link>\r\n                                )}\r\n                                {this.state.pastTrips[0] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.pastTrips[1] !== undefined && (\r\n                                    <Link to={{ pathname: `/tripView/${this.state.pastTrips[1].tripId}`, state: { trip: this.state.pastTrips[1] } }}>\r\n                                    <Segment key={this.state.pastTrips[1].tripId} color=\"red\" inverted tertiary>\r\n                                        <TripCard trip={this.state.pastTrips[1]}/>\r\n                                    </Segment>\r\n                                </Link>\r\n                                )}\r\n                                {this.state.pastTrips[1] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.pastTrips[2] !== undefined && (\r\n                                    <Link to={{ pathname: `/tripView/${this.state.pastTrips[2].tripId}`, state: { trip: this.state.pastTrips[2] } }}>\r\n                                        <Segment key={this.state.pastTrips[2].tripId} color=\"red\" inverted tertiary>\r\n                                            <TripCard trip={this.state.pastTrips[2]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.pastTrips[2] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.upcomingTrips.length === 0 ? (\r\n                            <h3>Brak nadchodzących wyjazdów do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.upcomingTrips[0] !== undefined && (\r\n                                    <Link id={this.state.upcomingTrips[0].tripId} to={{ pathname: `/tripView/${this.state.upcomingTrips[0].tripId}`, state: { trip: this.state.upcomingTrips[0] } }}>\r\n                                        <Segment key={this.state.upcomingTrips[0].tripId} color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={this.state.upcomingTrips[0]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.upcomingTrips[0] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.upcomingTrips[1] !== undefined && (\r\n                                    <Link id={this.state.upcomingTrips[1].tripId} to={{ pathname: `/tripView/${this.state.upcomingTrips[1].tripId}`, state: { trip: this.state.upcomingTrips[1] } }}>\r\n                                        <Segment key={this.state.upcomingTrips[1].tripId} color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={this.state.upcomingTrips[1]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.upcomingTrips[1] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                            <GridColumn floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                {this.state.upcomingTrips[2] !== undefined && (\r\n                                    <Link id={this.state.upcomingTrips[2].tripId} to={{ pathname: `/tripView/${this.state.upcomingTrips[2].tripId}`, state: { trip: this.state.upcomingTrips[2] } }}>\r\n                                        <Segment key={this.state.upcomingTrips[2].tripId} color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={this.state.upcomingTrips[2]}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                )}\r\n                                {this.state.upcomingTrips[2] === undefined && (\r\n                                    <div style={{ padding: 3 }}>\r\n                                        <Grid columns=\"equal\" style={{ height: 165, width: 430 }}/>\r\n                                    </div>\r\n                                )}\r\n                            </GridColumn>\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5, paddingTop: 20}}>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Relacje z wyjazdów Twoich znajomych:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n                <GridRow columns={1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    <GridColumn floated=\"left\" textAlign=\"center\" style={{padding: 3}}>\r\n                        <h4 style={{ fontWeight: \"bold\" }}>Nadchodzące wyjazdy Twoich znajomych:</h4>\r\n                    </GridColumn>\r\n                </GridRow>\r\n              </GridRow>\r\n              <GridRow columns={2} stretched style={{padding: 5}}>\r\n                <GridRow columns={this.state.acquaintancesTripsReports.length + 1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.acquaintancesTripsReports.length === 0 ? (\r\n                            <h3>Brak relacji z wyjazdów znajomych do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            {this.state.acquaintancesTripsReports\r\n                            .map((report) => (\r\n                                <GridColumn key={report.tripId} floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                    <Link to={{ pathname: `/tripView/${report.tripId}`, state: { trip: report } }}>\r\n                                        <Segment color=\"yellow\" inverted tertiary>\r\n                                            <ReportCard report={report}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                </GridColumn>\r\n                            ))}\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n                <GridRow columns={this.state.upcomingAcquaintancesTrips.length + 1} stretched style={{padding: 5, paddingLeft: 50}}>\r\n                    {this.state.upcomingAcquaintancesTrips.length === 0 ? (\r\n                            <h3>Brak nadchodzących wyjazdów znajomych do wyświetlenia</h3>\r\n                        ) : (\r\n                        <React.Fragment>\r\n                            {this.state.upcomingAcquaintancesTrips\r\n                            .map((trip) => (\r\n                                <GridColumn key={trip.tripId} floated=\"left\" stretched width={12} textAlign=\"center\" style={{padding: 3}}>\r\n                                    <Link id={trip.tripId} to={{ pathname: `/tripView/${trip.tripId}`, state: { trip: trip } }}>\r\n                                        <Segment color=\"green\" inverted tertiary>\r\n                                            <TripCard trip={trip}/>\r\n                                        </Segment>\r\n                                    </Link>\r\n                                </GridColumn>\r\n                            ))}\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </GridRow>\r\n              </GridRow>\r\n            </Grid>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n    }\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Grid, Segment, List, Header, Form, Input, Button, Icon } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport { notification } from \"antd\";\r\nimport {Colors} from \"../../constants\";\r\nimport { FaUser } from 'react-icons/fa';\r\n\r\nexport default class Acquaintances extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        document.title = \"SkiWithMe\";\r\n    \r\n        this.state = {\r\n            username: AuthService.getCurrentUser().username,\r\n            acquaintances: [],\r\n            acquaintancesToAdd: null,\r\n            usernameInput: \"\",\r\n            isLoading: true\r\n          };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n            acquaintances: acquaintances.data.userDTO\r\n          })});\r\n\r\n        this.getAcquaintancesToAdd(this.state.username, this.state.usernameInput);\r\n      }\r\n    \r\n      getAcquaintances(username) {\r\n        return UserService.getAcquaintancesFromUsername(username);\r\n      }\r\n\r\n      getAcquaintancesToAdd(username, usernameInput) {\r\n        this.setState({ isLoading: true });\r\n        UserService\r\n          .getAcquaintancesToAddFromUsername(username, usernameInput)\r\n          .then((response) => {\r\n            this.setState({ acquaintancesToAdd: response.data.content });\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      onSubmit = () => {\r\n          this.getAcquaintancesToAdd(AuthService.getCurrentUser().username, this.state.usernameInput);\r\n      }\r\n\r\n      onChangeUsername(event) {\r\n        this.setState({\r\n            usernameInput: event.target.value\r\n        })\r\n      }\r\n\r\n      handleAddAcquaintance(username) {\r\n        UserService\r\n        .addAcquaintance(AuthService.getCurrentUser().username, username)\r\n        .then((response) => {\r\n            notification.success({\r\n                message: \"Znajomy został dodany!\",\r\n                description:\r\n                    \"Dodano znajomego o loginie \" + username + \"!\",\r\n            });\r\n        })\r\n        .then((response) => {\r\n            this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n                acquaintances: acquaintances.data.userDTO\r\n              })});\r\n\r\n              this.getAcquaintancesToAdd(this.state.username, this.state.usernameInput);\r\n        })\r\n        .catch((error) => {\r\n            notification.error({\r\n                message: \"Nie udało się dodać znajomego!\",\r\n                description:\r\n                    \"Użytkownik o loginie \" + username + \" nie został dodany do znajomych!\",\r\n            });\r\n        });\r\n      }\r\n\r\n      handleDeleteAcquaintance(username) {\r\n        UserService\r\n        .deleteAcquaintance(AuthService.getCurrentUser().username, username)\r\n        .then((response) => {\r\n            notification.success({\r\n                message: \"Znajomy został usunięty!\",\r\n                description:\r\n                    \"Usunięto znajomego o loginie \" + username + \"!\",\r\n            });\r\n        })\r\n        .then((response) => {\r\n            this.getAcquaintances(this.state.username).then(acquaintances => { this.setState({\r\n                acquaintances: acquaintances.data.userDTO\r\n              })});\r\n\r\n              this.getAcquaintancesToAdd(this.state.username, this.state.usernameInput);\r\n        })\r\n        .catch((error) => {\r\n            notification.error({\r\n                message: \"Nie udało się usunąć znajomego!\",\r\n                description:\r\n                    \"Użytkownik o loginie \" + username + \" nie został usunięty ze znajomych!\",\r\n            });\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <Grid columns=\"equal\" textAlign=\"center\">\r\n            <Grid.Column mobile={16} tablet={16} computer={14}>\r\n              <Segment padded>\r\n                <Header as=\"h2\" style={{color: Colors.primary, paddingBottom: 25}}>\r\n                    Znajomi\r\n                </Header>\r\n                <Grid columns=\"equal\" textAlign=\"center\">\r\n                    <Grid.Row stretched columns={2}>\r\n                        <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" >\r\n                            <Header as=\"h2\">\r\n                                Lista znajomych\r\n                            </Header>\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" >\r\n                            <Header as=\"h2\">\r\n                                Szukaj znajomych\r\n                            </Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row stretched columns={2}>\r\n                        <Grid.Column>\r\n                            <React.Fragment>\r\n                                <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                                    {this.state.acquaintances.length === 0 ? (\r\n                                            <h3>Brak znajomych do wyświetlenia</h3>\r\n                                        ) : (\r\n                                        this.state.acquaintances.map((user) => (\r\n                                            <Segment key={user.username}>\r\n                                                <Grid textAlign=\"center\">\r\n                                                    <Grid.Row stretched columns={3}>\r\n                                                        <Grid.Column style={{ marginRight: 10, marginLeft: 10 }} width=\"2\" floated=\"left\">\r\n                                                            <FaUser size=\"30px\"/>\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                                            <h3 style={{ margin: 5, marginBottom: 0 }}>{user.username}</h3>\r\n                                                            <h4 style={{ margin: 5 }}>{user.email}</h4>\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width=\"5\" floated=\"right\" style={{ height: 50 }}>\r\n                                                            <Button\r\n                                                                size=\"small\"\r\n                                                                onClick={() => this.handleDeleteAcquaintance(user.username)}\r\n                                                                style={{ backgroundColor: '#ff5f57', color: Colors.background }}>\r\n                                                                Usuń ze znajomych\r\n                                                            </Button>\r\n                                                        </Grid.Column>\r\n                                                    </Grid.Row>\r\n                                                </Grid>\r\n                                            </Segment>\r\n                                        )))\r\n                                    }\r\n                                </List>\r\n                            </React.Fragment>\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" >\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <Input\r\n                                        placeholder=\"Wpisz nazwę użytkownika\"\r\n                                        onChange={(user) => {\r\n                                            this.onChangeUsername(user);\r\n                                        }}\r\n                                        name=\"usernameInput\" />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Button\r\n                                    fluid\r\n                                    animated\r\n                                    style={{backgroundColor: Colors.primary}}\r\n                                    onClick={this.onSubmit}\r\n                                    loading={this.isLoading}>\r\n                                        <Button.Content visible style={{color: Colors.background}}>Wyszukaj</Button.Content>\r\n                                        <Button.Content hidden>\r\n                                            <Icon name=\"search\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </Form.Field>\r\n                            </Form>\r\n                            {this.state.isLoading === true ? (\r\n                            <LoadingIndicator />\r\n                            ) : (\r\n                            <React.Fragment>\r\n                                <List divided verticalAlign=\"middle\" size=\"huge\">\r\n                                {this.state.acquaintancesToAdd.length === 0 ? (\r\n                                    <h3>Brak użytkowników o loginie z podanym ciągiem znaków</h3>\r\n                                ) : (\r\n                                this.state.acquaintancesToAdd.map((user) => (\r\n                                    <Segment key={user.username}>\r\n                                        <Grid textAlign=\"center\">\r\n                                            <Grid.Row stretched columns={3}>\r\n                                                <Grid.Column style={{ marginRight: 10, marginLeft: 10 }} width=\"2\" floated=\"left\">\r\n                                                    <FaUser size=\"30px\"/>\r\n                                                </Grid.Column>\r\n                                                <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                                                    <h3 style={{ margin: 5, marginBottom: 0 }}>{user.username}</h3>\r\n                                                    <h4 style={{ margin: 5 }}>{user.email}</h4>\r\n                                                </Grid.Column>\r\n                                                <Grid.Column width=\"5\" floated=\"right\" style={{ height: 50 }}>\r\n                                                    <Button\r\n                                                        size=\"small\"\r\n                                                        onClick={() => this.handleAddAcquaintance(user.username)}\r\n                                                        style={{ backgroundColor: Colors.primary, color: Colors.background }}>\r\n                                                        Dodaj do znajomych\r\n                                                    </Button>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Segment>\r\n                                )))\r\n                                }\r\n                                </List>\r\n                            </React.Fragment>\r\n                            )}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        );\r\n      }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/logging/login.component\";\r\nimport Register from \"./components/logging/register.component\";\r\nimport Profile from \"./components/userProfile/profile.component\";\r\nimport SearchResorts from \"./components/searchResorts/search-resorts.component\";\r\nimport TripView from \"./components/tripView/trip-view\";\r\nimport TripForm from \"./components/tripView/trip-form\";\r\nimport ResortView from \"./components/resortView/resort-view\";\r\nimport ResortForm from \"./components/resortView/resort-form\";\r\nimport GradeResort from \"./components/resortView/grade-resort\";\r\nimport PasswordChange from \"./components/userProfile/password.change.component\";\r\nimport UserDataChange from \"./components/userProfile/user.data.change.component\";\r\nimport News from \"./components/news/news.component\";\r\nimport Acquaintances from \"./components/acquaintances/acquaintances.component\";\r\nimport {Colors} from \"./constants\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div style={{backgroundColor: Colors.background}}>\r\n          <nav className=\"navbar navbar-expand navbar-dark\" style={{backgroundColor: Colors.primary}}>\r\n            <Link to={\"/resorts\"} className=\"navbar-brand\">\r\n              SkiWithMe\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-news\" to={\"/news\"} className=\"nav-link\">\r\n                    Aktualności\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              <li className=\"nav-item\">\r\n                <Link id=\"nav-resort\" to={\"/resorts\"} className=\"nav-link\">\r\n                  Szukaj ośrodka\r\n                </Link>\r\n              </li>\r\n\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/acquaintances/\" + this.state.currentUser.username} className=\"nav-link\">\r\n                    Znajomi\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              \r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-new-trip\" to={\"/tripForm/\"} className=\"nav-link\">\r\n                    Nowy wyjazd\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link id=\"nav-user\" to={\"/profile\"} className=\"nav-link\">\r\n                    {currentUser.username}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                    Wyloguj się\r\n                  </a>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Zaloguj się\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Zarejestruj się\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\" style={{backgroundColor: Colors.background}}>\r\n            <Switch>\r\n              <Route exact path=\"/news\" component={News} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/passwordChange/:username\" component={PasswordChange} />\r\n              <Route exact path=\"/userDataChange/:username\" component={UserDataChange} />\r\n              <Route exact path=\"/acquaintances/:username\" component={Acquaintances} />\r\n              <Route path=\"/resorts\" component={SearchResorts} />\r\n              <Route path=\"/resortView/:resortId\" component={ResortView} />\r\n              <Route path=\"/gradeResort/:resortId\" component={GradeResort} />\r\n              <Route path=\"/tripView/:tripId\" component={TripView} />\r\n              <Route path=\"/tripForm/:tripId\" component={TripForm} />\r\n              <Route path=\"/tripForm\" component={TripForm} />\r\n              <Route path=\"/resortForm/:resortId\" component={ResortForm} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}